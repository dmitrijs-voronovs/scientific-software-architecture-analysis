id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/7389:56,availability,repair,repair,56,cling::ForwardDeclPrinter: skip expr tmplt args; Should repair but not close https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7389
https://github.com/root-project/root/pull/7389:56,reliability,repair,repair,56,cling::ForwardDeclPrinter: skip expr tmplt args; Should repair but not close https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7389
https://github.com/root-project/root/pull/7389:71,usability,close,close,71,cling::ForwardDeclPrinter: skip expr tmplt args; Should repair but not close https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7389
https://github.com/root-project/root/issues/7390:334,safety,test,test,334,Must not forward declare template specialization with enumerator as template arg; ### Describe the bug. See https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759. ### Expected behavior. `typedef` forward declaration should be skipped as it refers to a specialization that we cannot forward declare. ### To Reproduce. See test coming up.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7390
https://github.com/root-project/root/issues/7390:334,testability,test,test,334,Must not forward declare template specialization with enumerator as template arg; ### Describe the bug. See https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759. ### Expected behavior. `typedef` forward declaration should be skipped as it refers to a specialization that we cannot forward declare. ### To Reproduce. See test coming up.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7390
https://github.com/root-project/root/issues/7390:189,usability,behavi,behavior,189,Must not forward declare template specialization with enumerator as template arg; ### Describe the bug. See https://github.com/cms-sw/cmsdist/pull/6690#issuecomment-788782759. ### Expected behavior. `typedef` forward declaration should be skipped as it refers to a specialization that we cannot forward declare. ### To Reproduce. See test coming up.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7390
https://github.com/root-project/root/pull/7392:156,availability,error,error,156,"Fix bug in cling's diagnostic engine, if CUDA mode is enable; Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5. Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/pull/7392:162,integrability,messag,messages,162,"Fix bug in cling's diagnostic engine, if CUDA mode is enable; Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5. Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/pull/7392:162,interoperability,messag,messages,162,"Fix bug in cling's diagnostic engine, if CUDA mode is enable; Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5. Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/pull/7392:156,performance,error,error,156,"Fix bug in cling's diagnostic engine, if CUDA mode is enable; Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5. Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/pull/7392:19,reliability,diagno,diagnostic,19,"Fix bug in cling's diagnostic engine, if CUDA mode is enable; Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5. Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/pull/7392:156,safety,error,error,156,"Fix bug in cling's diagnostic engine, if CUDA mode is enable; Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5. Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/pull/7392:19,testability,diagno,diagnostic,19,"Fix bug in cling's diagnostic engine, if CUDA mode is enable; Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5. Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/pull/7392:156,usability,error,error,156,"Fix bug in cling's diagnostic engine, if CUDA mode is enable; Fix function, which was introduced with commit 822106a898267fca74214fc83d64d6110b2d66c5. Now, error messages of the device compiler are correctly prefixed with `cling-ptx: `",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7392
https://github.com/root-project/root/issues/7393:39,availability,error,error,39,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:585,availability,error,error,585,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:658,availability,error,error,658,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:777,availability,error,error,777,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1001,availability,error,error,1001,"OOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1045,availability,error,error,1045,"ues when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1983,availability,Operat,Operating,1983,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2058,availability,down,download,2058,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2129,availability,Operat,Operating,2129,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:938,deployability,Automat,Automatically,938,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1406,deployability,build,build,1406,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1971,deployability,version,version,1971,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2040,deployability,instal,install,2040,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2102,deployability,version,version,2102,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2168,deployability,instal,installed,2168,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1971,integrability,version,version,1971,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2102,integrability,version,version,2102,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1971,modifiability,version,version,1971,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2102,modifiability,version,version,2102,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:39,performance,error,error,39,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:585,performance,error,error,585,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:658,performance,error,error,658,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:777,performance,error,error,777,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1001,performance,error,error,1001,"OOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1045,performance,error,error,1045,"ues when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:39,safety,error,error,39,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:585,safety,error,error,585,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:658,safety,error,error,658,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:777,safety,error,error,777,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1001,safety,error,error,1001,"OOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1045,safety,error,error,1045,"ues when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1360,safety,input,input,1360,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:938,testability,Automat,Automatically,938,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2205,testability,context,context,2205,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:2234,testability,context,context,2234,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:39,usability,error,error,39,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:585,usability,error,error,585,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:658,usability,error,error,658,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:777,usability,error,error,777,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:840,usability,clear,clear,840,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:888,usability,behavi,behavior,888,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:919,usability,behavi,behavior,919,"(PyROOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1001,usability,error,error,1001,"OOT) TGraphAsymmErrors gives wrong error values when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1045,usability,error,error,1045,"ues when passing arrays of mixed int and float types; - [x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install`",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1101,usability,clear,clear,1101,"[x] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT ve",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1215,usability,behavi,behavior,1215,"ssue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/issues/7393:1360,usability,input,input,1360,"sues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. In pyroot, when passing arrays of mixed int and float type into TGraphAsymmErrors, the corresponding error values will be filled with uninitialized values instead of raising error/warning. For example, if x is an array of type int whereas xerr_lo or xerr_hi is an array of type float then the error values will be filled with uninitialized values. <!--. A clear and concise description of what the wrong behavior is. -->. ### Expected behavior. Either:. Automatically convert the data type of the arrays and fill the error with the correct values. Or:. Raising error/warning when mixed data types are passed. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ```. import numpy as np. import ROOT. n = 1. x = np.array([1]). y = np.array([2]). xerr_hi, xerr_lo = np.array([0.1]), np.array([0.1]). yerr_hi, yerr_lo = np.array([0.2]), np.array([0.2]). reproducer = ROOT.TGraphAsymmErrors(n, x, y, xerr_lo, xerr_hi, yerr_lo, yerr_hi). print(reproducer.GetErrorXlow(1), reproducer.GetErrorXhigh(1), reproducer.GetErrorYlow(1), reproducer.GetErrorYhigh(1)). # result:. # 4.67050093411236e-310 4.6705009350649e-310 4.67050094601894e-310 4.67050094110516e-310. ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version: JupyROOT 6.18/04. Operating system: Linux (lxplus). ROOT installed via conda . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7393
https://github.com/root-project/root/pull/7394:89,safety,test,test,89,[DF] Snapshot friend branches also when a branch with same name exists; Fixes and adds a test for #7181.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7394
https://github.com/root-project/root/pull/7394:89,testability,test,test,89,[DF] Snapshot friend branches also when a branch with same name exists; Fixes and adds a test for #7181.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7394
https://github.com/root-project/root/issues/7395:22,availability,error,errors,22,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:5,energy efficiency,Reduc,Reduce,5,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:338,energy efficiency,schedul,scheduling,338,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:22,performance,error,errors,22,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:338,performance,schedul,scheduling,338,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:895,performance,parallel,parallel,895,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:349,reliability,doe,does,349,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:22,safety,error,errors,22,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:312,safety,test,tests,312,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:404,safety,test,test,404,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:448,safety,test,testing,448,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:597,safety,test,test,597,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:602,safety,test,testActionHelpers,602,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:312,testability,test,tests,312,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:397,testability,simpl,simple,397,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:404,testability,test,test,404,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:448,testability,test,testing,448,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:597,testability,test,test,597,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:602,testability,test,testActionHelpers,602,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:22,usability,error,errors,22,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/issues/7395:397,usability,simpl,simple,397,"[DF] Reduce precision errors for `Mean` and `StdDev`; `RDF::Mean()` uses plain doubles. That's better than float, but far from stable. When you run with IMT, it's actually more accurate than without, because less numbers go into one accumulator, and each running sum remains smaller. So IMT/NoIMT can break your tests (even different TBB scheduling does). It was creating problems already in this simple test (note that the precision threshold for testing the mean is pretty bad, 1.E-2):. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/roofit/RDataFrameHelpers/test/testActionHelpers.cxx#L28-L33. Maybe it's worth to increase the precision of. https://github.com/root-project/root/blob/7e1c74b764a60f811e898c3f6b55c0234b2b307d/tree/dataframe/inc/ROOT/RDF/ActionHelpers.hxx#L917. with a Kahan or Neumaier sum. Same for StdDev, maybe go for Knuth's algo or the parallel weighted variance. https://en.wikipedia.org/wiki/Algorithms_for_calculating_variance. For Kahan, you can use. https://root.cern.ch/doc/master/classROOT_1_1Math_1_1KahanSum.html.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7395
https://github.com/root-project/root/pull/7398:510,availability,sli,slightly,510,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:125,deployability,patch,patch,125,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:214,deployability,modul,modules,214,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:263,deployability,modul,module,263,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:319,deployability,modul,module,319,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:355,deployability,depend,dependent,355,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:441,deployability,patch,patch,441,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:481,deployability,modul,modules,481,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:546,deployability,modul,modules,546,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:574,deployability,patch,patch,574,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:605,deployability,Modul,Modules,605,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:723,deployability,fail,failed,723,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:43,energy efficiency,Load,LoadModule,43,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:99,energy efficiency,Load,LoadModule,99,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:165,energy efficiency,Load,LoadModule,165,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:433,energy efficiency,current,current,433,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:466,energy efficiency,load,loading,466,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:563,energy efficiency,load,load,563,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:1830,energy efficiency,Load,Load,1830,"htly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule. 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",. 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent. 23 0x00007ffff6adec40 in TClass::ReadRules. 24 0x00007fffecd0b3a0 in TCling::Initialize. ```. There are several points to consider:. * We should understand why there are still DeferredDeclsToEmit;. * We should remove the `TClingMemberIter` from the init path as it is *very expensive*. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:355,integrability,depend,dependent,355,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:214,modifiability,modul,modules,214,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:236,modifiability,layer,layered,236,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:263,modifiability,modul,module,263,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:319,modifiability,modul,module,319,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:355,modifiability,depend,dependent,355,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:481,modifiability,modul,modules,481,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:546,modifiability,modul,modules,546,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:605,modifiability,Modul,Modules,605,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:43,performance,Load,LoadModule,43,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:99,performance,Load,LoadModule,99,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:165,performance,Load,LoadModule,165,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:466,performance,load,loading,466,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:502,performance,perform,perform,502,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:563,performance,load,load,563,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:1830,performance,Load,Load,1830,"htly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule. 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",. 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent. 23 0x00007ffff6adec40 in TClass::ReadRules. 24 0x00007fffecd0b3a0 in TCling::Initialize. ```. There are several points to consider:. * We should understand why there are still DeferredDeclsToEmit;. * We should remove the `TClingMemberIter` from the init path as it is *very expensive*. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:510,reliability,sli,slightly,510,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:723,reliability,fail,failed,723,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:125,safety,patch,patch,125,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:214,safety,modul,modules,214,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:263,safety,modul,module,263,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:319,safety,modul,module,319,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:355,safety,depend,dependent,355,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:441,safety,patch,patch,441,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:481,safety,modul,modules,481,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:546,safety,modul,modules,546,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:574,safety,patch,patch,574,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:605,safety,Modul,Modules,605,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:125,security,patch,patch,125,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:441,security,patch,patch,441,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:574,security,patch,patch,574,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:355,testability,depend,dependent,355,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:618,testability,Assert,Assertion,618,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:2357,testability,understand,understand,2357,"htly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 0x00007ffff6b259a0 in ROOT::Detail::TSchemaRuleSet::AddRule. 21 0x00007ffff6adee6c in TClass::AddRule (rule=0x572670 ""HepMC::GenVertex m_event"",. 22 0x00007ffff6adead2 in (anonymous namespace)::ReadRulesContent. 23 0x00007ffff6adec40 in TClass::ReadRules. 24 0x00007fffecd0b3a0 in TCling::Initialize. ```. There are several points to consider:. * We should understand why there are still DeferredDeclsToEmit;. * We should remove the `TClingMemberIter` from the init path as it is *very expensive*. cc: @davidlange6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7398:502,usability,perform,perform,502,"[cxxmodules] Do not push a transaction per LoadModule.; [cxxmodules] Do not push a transaction per LoadModule. Prior to this patch, we push/pop transaction for each LoadModule call. This is reasonable if we assume modules are perfectly layered. That is, no eager module deserialization require definitions from another module. This is hard to achieve for dependent on ROOT codebases during their incremental migration process. . The current patch push/pops once per loading of all modules. This should perform slightly better and allow entangled modules to still load. This patch should address the CMSSW Modules IB:. Assertion `OldBuilder->DeferredDeclsToEmit.empty() && ""Should have emitted all decls deferred to emit.""' failed. ```. 0 0x00007ffff6f113d7 in raise () from /lib64/libc.so.6. 1 0x00007ffff6f12ac8 in abort () from /lib64/libc.so.6. 2 0x00007ffff6f0a1a6 in __assert_fail_base () from /lib64/libc.so.6. 3 0x00007ffff6f0a252 in __assert_fail () from /lib64/libc.so.6. 4 0x00007fffed24ed82 in clang::CodeGeneratorImpl::StartModule. 5 0x00007fffed24d33e in clang::CodeGenerator::StartModule. 6 0x00007fffed0664f1 in cling::IncrementalParser::StartModule. 7 0x00007fffed066f84 in cling::IncrementalParser::codeGenTransaction. 8 0x00007fffed066aec in cling::IncrementalParser::commitTransaction. 9 0x00007fffecf1af2c in cling::Interpreter::PushTransactionRAII::pop. 10 0x00007fffecf1ae72 in cling::Interpreter::PushTransactionRAII::~PushTransactionRAII. 11 0x00007fffece78534 in ClingMemberIterInternal::DCIter::DCIter. 12 0x00007fffece7712c in TClingMemberIter::TClingMemberIter. 13 0x00007fffece7724c in TClingDataMemberIter::TClingDataMemberIter. 14 0x00007fffece750b6 in TClingDataMemberInfo::TClingDataMemberInfo. 15 0x00007fffecd25918 in TCling::DataMemberInfo_Factory. 16 0x00007ffff6b0e33e in TListOfDataMembers::Load. 17 0x00007ffff6ae539d in TClass::CreateListOfDataMembers. 18 0x00007ffff6ae54d4 in TClass::GetListOfDataMembers. 19 0x00007ffff6ae3dd1 in TClass::GetDataMember. 20 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7398
https://github.com/root-project/root/pull/7399:173,deployability,modul,module,173,[ntuple] Add RField description members; Allow setting RNTuple field descriptions. The immediate motivation for this PR is for use by the ongoing CMS RNTuple NanoAOD output module. The new APIs are a direct analogue to `TBranch::SetTitle`. Field descriptions are added at the `RNTupleModel` level. There currently is no way to adjust field descriptions after creation. . There is a new `RNTupleModel::AddField` overload that takes a description parameter and a new `RNTupleModel::MakeFieldWithDescription` method. The latter was added because of difficulties overloading the existing variadic template method `MakeField`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7399
https://github.com/root-project/root/pull/7399:189,deployability,API,APIs,189,[ntuple] Add RField description members; Allow setting RNTuple field descriptions. The immediate motivation for this PR is for use by the ongoing CMS RNTuple NanoAOD output module. The new APIs are a direct analogue to `TBranch::SetTitle`. Field descriptions are added at the `RNTupleModel` level. There currently is no way to adjust field descriptions after creation. . There is a new `RNTupleModel::AddField` overload that takes a description parameter and a new `RNTupleModel::MakeFieldWithDescription` method. The latter was added because of difficulties overloading the existing variadic template method `MakeField`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7399
https://github.com/root-project/root/pull/7399:304,energy efficiency,current,currently,304,[ntuple] Add RField description members; Allow setting RNTuple field descriptions. The immediate motivation for this PR is for use by the ongoing CMS RNTuple NanoAOD output module. The new APIs are a direct analogue to `TBranch::SetTitle`. Field descriptions are added at the `RNTupleModel` level. There currently is no way to adjust field descriptions after creation. . There is a new `RNTupleModel::AddField` overload that takes a description parameter and a new `RNTupleModel::MakeFieldWithDescription` method. The latter was added because of difficulties overloading the existing variadic template method `MakeField`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7399
https://github.com/root-project/root/pull/7399:189,integrability,API,APIs,189,[ntuple] Add RField description members; Allow setting RNTuple field descriptions. The immediate motivation for this PR is for use by the ongoing CMS RNTuple NanoAOD output module. The new APIs are a direct analogue to `TBranch::SetTitle`. Field descriptions are added at the `RNTupleModel` level. There currently is no way to adjust field descriptions after creation. . There is a new `RNTupleModel::AddField` overload that takes a description parameter and a new `RNTupleModel::MakeFieldWithDescription` method. The latter was added because of difficulties overloading the existing variadic template method `MakeField`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7399
https://github.com/root-project/root/pull/7399:189,interoperability,API,APIs,189,[ntuple] Add RField description members; Allow setting RNTuple field descriptions. The immediate motivation for this PR is for use by the ongoing CMS RNTuple NanoAOD output module. The new APIs are a direct analogue to `TBranch::SetTitle`. Field descriptions are added at the `RNTupleModel` level. There currently is no way to adjust field descriptions after creation. . There is a new `RNTupleModel::AddField` overload that takes a description parameter and a new `RNTupleModel::MakeFieldWithDescription` method. The latter was added because of difficulties overloading the existing variadic template method `MakeField`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7399
https://github.com/root-project/root/pull/7399:173,modifiability,modul,module,173,[ntuple] Add RField description members; Allow setting RNTuple field descriptions. The immediate motivation for this PR is for use by the ongoing CMS RNTuple NanoAOD output module. The new APIs are a direct analogue to `TBranch::SetTitle`. Field descriptions are added at the `RNTupleModel` level. There currently is no way to adjust field descriptions after creation. . There is a new `RNTupleModel::AddField` overload that takes a description parameter and a new `RNTupleModel::MakeFieldWithDescription` method. The latter was added because of difficulties overloading the existing variadic template method `MakeField`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7399
https://github.com/root-project/root/pull/7399:445,modifiability,paramet,parameter,445,[ntuple] Add RField description members; Allow setting RNTuple field descriptions. The immediate motivation for this PR is for use by the ongoing CMS RNTuple NanoAOD output module. The new APIs are a direct analogue to `TBranch::SetTitle`. Field descriptions are added at the `RNTupleModel` level. There currently is no way to adjust field descriptions after creation. . There is a new `RNTupleModel::AddField` overload that takes a description parameter and a new `RNTupleModel::MakeFieldWithDescription` method. The latter was added because of difficulties overloading the existing variadic template method `MakeField`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7399
https://github.com/root-project/root/pull/7399:173,safety,modul,module,173,[ntuple] Add RField description members; Allow setting RNTuple field descriptions. The immediate motivation for this PR is for use by the ongoing CMS RNTuple NanoAOD output module. The new APIs are a direct analogue to `TBranch::SetTitle`. Field descriptions are added at the `RNTupleModel` level. There currently is no way to adjust field descriptions after creation. . There is a new `RNTupleModel::AddField` overload that takes a description parameter and a new `RNTupleModel::MakeFieldWithDescription` method. The latter was added because of difficulties overloading the existing variadic template method `MakeField`.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7399
https://github.com/root-project/root/issues/7400:339,availability,error,errors,339,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:668,availability,operat,operator,668,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1978,deployability,Instal,Install,1978,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:2108,deployability,Build,Build,2108,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1162,energy efficiency,alloc,allocated,1162,"couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:167,integrability,coupl,couple,167,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:414,integrability,Wrap,WrapperCall,414,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:737,integrability,Wrap,WrapperCall,737,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1600,integrability,sub,subdirectory,1600,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:2094,integrability,repositor,repository,2094,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1,interoperability,bind,bindings,1,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:414,interoperability,Wrapper,WrapperCall,414,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:737,interoperability,Wrapper,WrapperCall,737,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:862,interoperability,bind,bindings,862,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1073,interoperability,bind,bindings,1073,"g. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1189,interoperability,bind,bindings,1189,"s, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1304,interoperability,bind,bindings,1304,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1444,interoperability,bind,bindings,1444,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:2094,interoperability,repositor,repository,2094,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1,modifiability,bind,bindings,1,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:167,modifiability,coupl,couple,167,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:862,modifiability,bind,bindings,862,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1073,modifiability,bind,bindings,1073,"g. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1189,modifiability,bind,bindings,1189,"s, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1304,modifiability,bind,bindings,1304,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1444,modifiability,bind,bindings,1444,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1702,modifiability,Concern,Concerning,1702,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:339,performance,error,errors,339,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:967,performance,memor,memory,967,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1152,performance,Memor,Memory,1152,"er. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1400,performance,memor,memory,1400,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1809,performance,time,time,1809,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:339,safety,error,errors,339,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:167,testability,coupl,couple,167,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1702,testability,Concern,Concerning,1702,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:339,usability,error,errors,339,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:967,usability,memor,memory,967,"[bindings] Clang-Tidy Clazy Analyzer leaks / bugs report; ### Describe the bug. I compile ROOT using QtCreator, which has an embedded Clang and Tidy Analyzer. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1152,usability,Memor,Memory,1152,"er. After a couple of hours of analysis, I get a report with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1400,usability,memor,memory,1400,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1653,usability,prefer,prefer,1653,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:1906,usability,prefer,prefer,1906,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/issues/7400:2117,usability,Tool,Tool,2117,"eport with many warnings. - Some of them look unimportant. - Some of them could be auto-fixed by Clang. - Some of them look like real errors. . For example, in the file clingwrapper.cxx, obj is not deleted if WrapperCall returns false, which seems to lead to a leak:. ```. Cppyy::TCppObject_t Cppyy::CallO(TCppMethod_t method,. TCppObject_t self, size_t nargs, void* args, TCppType_t result_type). {. TClassRef& cr = type_from_handle(result_type);. void* obj = ::operator new(gInterpreter->ClassInfo_Size(cr->GetClassInfo()));. if (WrapperCall(method, nargs, args, self, obj)). return (TCppObject_t)obj;. return (TCppObject_t)0;. }. ```. ```. /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889:26: warning: Potential leak of memory pointed to by 'obj' [clang-analyzer-cplusplus.NewDeleteLeaks]. 1: Calling 'CallO' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:2290. 2: Memory is allocated in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:886. 3: Taking false branch in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:887. 4: Potential leak of memory pointed to by 'obj' in /opt/root_src/bindings/pyroot/cppyy/cppyy-backend/clingwrapper/src/clingwrapper.cxx:889. ```. My question is: how should I report them? In separate issues for each CMake subdirectory? All in the same Ticket? Or do the devs prefer to run it by themselves for easier check? Concerning things as ""0 as nullptr"", would you accept a PR that fixes all of these across ROOT at the same time, see here https://clang.llvm.org/extra/clang-tidy/checks/modernize-use-nullptr.html, or you prefer to keep with the old convention of using 0 ? ### To Reproduce. - Install QtCreator. - Click on File, Import File or Project, click on the main CMakeLists.txt of the ROOT source git repository. - Build. - Tool, Run Clang & Tidy Analyzer. ### Setup. 1. ROOT 6.23/01. 2. Ubuntu 18. 3. git master",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7400
https://github.com/root-project/root/pull/7403:12,deployability,updat,update,12,GUI Doxygen update; Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6. - Make the groups structure for ROOT 7. - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7403
https://github.com/root-project/root/pull/7403:54,integrability,complian,compliant,54,GUI Doxygen update; Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6. - Make the groups structure for ROOT 7. - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7403
https://github.com/root-project/root/pull/7403:12,safety,updat,update,12,GUI Doxygen update; Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6. - Make the groups structure for ROOT 7. - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7403
https://github.com/root-project/root/pull/7403:54,safety,compl,compliant,54,GUI Doxygen update; Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6. - Make the groups structure for ROOT 7. - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7403
https://github.com/root-project/root/pull/7403:12,security,updat,update,12,GUI Doxygen update; Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6. - Make the groups structure for ROOT 7. - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7403
https://github.com/root-project/root/pull/7403:54,security,compl,compliant,54,GUI Doxygen update; Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6. - Make the groups structure for ROOT 7. - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7403
https://github.com/root-project/root/pull/7403:231,usability,document,documentation,231,GUI Doxygen update; Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6. - Make the groups structure for ROOT 7. - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7403
https://github.com/root-project/root/pull/7403:307,usability,guid,guide,307,GUI Doxygen update; Lot of changes to make GUI oxygen compliant:. - Create the proper groups and put classes in them for GUI 6. - Make the groups structure for ROOT 7. - Fix many typos. The new structure should allow to make a god documentation for ROOT 7. Classes like RFitPanel are now visible in the ref guide.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7403
https://github.com/root-project/root/pull/7404:278,availability,slo,slows,278,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7404:285,availability,down,down,285,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7404:114,energy efficiency,current,current,114,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7404:200,integrability,event,event,200,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7404:387,integrability,event,event,387,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7404:251,performance,overhead,overhead,251,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7404:278,reliability,slo,slows,278,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7404:460,safety,accid,accidentally,460,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7404:264,security,sign,significantly,264,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7404
https://github.com/root-project/root/pull/7405:278,availability,slo,slows,278,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/pull/7405:285,availability,down,down,285,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/pull/7405:114,energy efficiency,current,current,114,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/pull/7405:200,integrability,event,event,200,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/pull/7405:387,integrability,event,event,387,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/pull/7405:251,performance,overhead,overhead,251,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/pull/7405:278,reliability,slo,slows,278,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/pull/7405:460,safety,accid,accidentally,460,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/pull/7405:264,security,sign,significantly,264,"[RF] Assume uniform weights in computeBatched if weights vector is empty; In the case of unweighted datasets, the current implementation of. `RooNLLVar::computeBatched` retreived the weight for every event with. `RooDataSet::get()`. This has a lot of overhead and significantly slows. down the evaluation. With this commit, it is correctly assumed that the weight is the same. for every event. This has been done in the code already before but it. was changed accidentally in 0e7c394. Hence, this commit partially reverts the changes made in commit 0e7c394.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7405
https://github.com/root-project/root/pull/7406:35,deployability,build,build,35,Add distributed RDataFrame pyspark build option; Adding https://github.com/root-project/root/pull/7371 to master as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7406
https://github.com/root-project/root/pull/7406:4,interoperability,distribut,distributed,4,Add distributed RDataFrame pyspark build option; Adding https://github.com/root-project/root/pull/7371 to master as well,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7406
https://github.com/root-project/root/pull/7407:113,deployability,automat,automatic,113,clang-tidy modernize 0 to nullptr; Modernize ROOT code to use nullptr instead of 0 or NULL. Thanks to Clang-Tidy automatic modernizing function and QtCreator's GUI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7407
https://github.com/root-project/root/pull/7407:113,testability,automat,automatic,113,clang-tidy modernize 0 to nullptr; Modernize ROOT code to use nullptr instead of 0 or NULL. Thanks to Clang-Tidy automatic modernizing function and QtCreator's GUI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7407
https://github.com/root-project/root/pull/7408:9,deployability,Updat,Update,9,[ntuple] Update formatting for ROOTv7 revised climate tutorial; Replaces closed PR #7306,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7408
https://github.com/root-project/root/pull/7408:16,interoperability,format,formatting,16,[ntuple] Update formatting for ROOTv7 revised climate tutorial; Replaces closed PR #7306,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7408
https://github.com/root-project/root/pull/7408:9,safety,Updat,Update,9,[ntuple] Update formatting for ROOTv7 revised climate tutorial; Replaces closed PR #7306,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7408
https://github.com/root-project/root/pull/7408:9,security,Updat,Update,9,[ntuple] Update formatting for ROOTv7 revised climate tutorial; Replaces closed PR #7306,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7408
https://github.com/root-project/root/pull/7408:73,usability,close,closed,73,[ntuple] Update formatting for ROOTv7 revised climate tutorial; Replaces closed PR #7306,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7408
https://github.com/root-project/root/pull/7409:23,interoperability,specif,specification,23,[ntuple] Add reference specification for rntuple;,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/7409
https://github.com/root-project/root/issues/7410:189,deployability,build,build,189,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:862,deployability,build,build,862,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:908,deployability,build,build,908,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1515,deployability,build,build,1515,ecurity.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1561,deployability,build,build,1561,ndling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2083,deployability,build,build,2083,nctions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2128,deployability,build,build,2128,ides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2735,deployability,build,build,2735,gous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2780,deployability,build,build,2780,such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3387,deployability,build,build,3387,' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3432,deployability,build,build,3432,ecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.De,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4039,deployability,build,build,4039,' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4084,deployability,build,build,4084,ecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4757,deployability,build,build,4757,UnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4802,deployability,build,build,4802,trncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5009,deployability,continu,continues,5009, of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5048,deployability,build,build,5048,end/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5126,deployability,build,build,5126,ll to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5200,deployability,build,build,5200,e memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5279,deployability,build,build,5279, analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5346,deployability,build,build,5346,dary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5426,deployability,build,build,5426,API.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5494,deployability,build,build,5494, is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5573,deployability,build,build,5573,hecks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5640,deployability,build,build,5640,ons that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5732,deployability,build,build,5732, C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5798,deployability,build,build,5798,/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5867,deployability,build,build,5867, garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5933,deployability,continu,continues,5933,.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:5972,deployability,build,build,5972,oop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6064,deployability,build,build,6064,n.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6130,deployability,build,build,6130,mkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6199,deployability,build,build,6199,ild/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6265,deployability,continu,continues,6265,root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6304,deployability,build,build,6304,5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6371,deployability,continu,continues,6371, Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6410,deployability,build,build,6410,opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6478,deployability,build,build,6478,opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6555,deployability,build,build,6555, /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6647,deployability,build,build,6647,epend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6715,deployability,build,build,6715,/opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6782,deployability,continu,continues,6782,t/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6821,deployability,build,build,6821,. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6913,deployability,build,build,6913,taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: A,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:6982,deployability,build,build,6982,nd/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7058,deployability,build,build,7058,rc/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7139,deployability,build,build,7139,end/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7208,deployability,build,build,7208,end/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: As,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7297,deployability,build,build,7297,src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7365,deployability,build,build,7365,on continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop conditi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7490,deployability,build,build,7490,/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7532,deployability,build,build,7532,ue in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7693,deployability,continu,continues,7693,in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7732,deployability,build,build,7732,.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7810,deployability,build,build,7810,oot_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7884,deployability,build,build,7884,oop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7963,deployability,build,build,7963,n /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8030,deployability,build,build,8030,s false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8110,deployability,build,build,8110,is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8178,deployability,build,build,8178,se branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8257,deployability,build,build,8257,se 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8324,deployability,build,build,8324,: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8416,deployability,build,build,8416,' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8482,deployability,build,build,8482,_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8551,deployability,build,build,8551,:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8617,deployability,continu,continues,8617,yzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8656,deployability,build,build,8656,oop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8748,deployability,build,build,8748,n.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8814,deployability,build,build,8814,mkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8883,deployability,build,build,8883,ild/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8949,deployability,continu,continues,8949,root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:8988,deployability,build,build,8988,5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9055,deployability,continu,continues,9055, Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9094,deployability,build,build,9094,opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true bra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9162,deployability,build,build,9162,opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9239,deployability,build,build,9239, /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9331,deployability,build,build,9331,epend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9399,deployability,build,build,9399,/opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9466,deployability,continu,continues,9466,t/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on lin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9505,deployability,build,build,9505,. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9597,deployability,build,build,9597,taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9666,deployability,build,build,9666,nd/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9742,deployability,build,build,9742,rc/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9823,deployability,build,build,9823,end/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Ass,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9892,deployability,build,build,9892,end/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9981,deployability,build,build,9981,src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10050,deployability,build,build,10050,n continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Tak,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10118,deployability,build,build,10118, 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10206,deployability,build,build,10206,alized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10248,deployability,build,build,10248,end/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10455,deployability,continu,continues,10455,ution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10494,deployability,build,build,10494,oot_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10572,deployability,build,build,10572,body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10646,deployability,build,build,10646,in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10725,deployability,build,build,10725,/opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10792,deployability,build,build,10792,n is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10872,deployability,build,build,10872,in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10940,deployability,build,build,10940,ase 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11019,deployability,build,build,11019,lse branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11086,deployability,build,build,11086,true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11178,deployability,build,build,11178,defined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11244,deployability,build,build,11244,/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11313,deployability,build,build,11313, garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11379,deployability,continu,continues,11379,.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11418,deployability,build,build,11418,oop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11510,deployability,build,build,11510,n.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11576,deployability,build,build,11576,mkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11645,deployability,build,build,11645,ild/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11711,deployability,continu,continues,11711,root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11750,deployability,build,build,11750,5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11817,deployability,continu,continues,11817, Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11856,deployability,build,build,11856,opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:11924,deployability,build,build,11924,opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12001,deployability,build,build,12001, /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12093,deployability,build,build,12093,epend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12161,deployability,build,build,12161,/opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Ass,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12228,deployability,continu,continues,12228,t/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialize,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12267,deployability,build,build,12267,. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12359,deployability,build,build,12359,taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming ',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12428,deployability,build,build,12428,nd/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: L,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12504,deployability,build,build,12504,rc/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Ass,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12585,deployability,build,build,12585,end/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Takin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12654,deployability,build,build,12654,end/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assumin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12743,deployability,build,build,12743,src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false bra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12818,deployability,build,build,12818,inues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12886,deployability,build,build,12886,aking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12954,deployability,build,build,12954,toring uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop conditi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13079,deployability,build,build,13079,t/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13121,deployability,build,build,13121, Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13282,deployability,continu,continues,13282,.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13321,deployability,build,build,13321,ntering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13399,deployability,build,build,13399, is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13473,deployability,build,build,13473,' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13552,deployability,build,build,13552,ion is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13619,deployability,build,build,13619,g false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13699,deployability,build,build,13699, 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13767,deployability,build,build,13767, 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13846,deployability,build,build,13846, Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13913,deployability,build,build,13913,: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14005,deployability,build,build,14005,' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14071,deployability,build,build,14071,_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14140,deployability,build,build,14140,:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14206,deployability,continu,continues,14206,yzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14245,deployability,build,build,14245,oop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14337,deployability,build,build,14337,n.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14403,deployability,build,build,14403,mkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14472,deployability,build,build,14472,ild/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14538,deployability,continu,continues,14538,root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14577,deployability,build,build,14577,5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14644,deployability,continu,continues,14644, Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14683,deployability,build,build,14683,opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Tak,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14751,deployability,build,build,14751,opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Ass,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14828,deployability,build,build,14828, /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14920,deployability,build,build,14920,epend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an u,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:14988,deployability,build,build,14988,/opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop con,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15055,deployability,continu,continues,15055,t/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15094,deployability,build,build,15094,. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15186,deployability,build,build,15186,taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15255,deployability,build,build,15255,nd/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15331,deployability,build,build,15331,rc/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true bra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15412,deployability,build,build,15412,end/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is fal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15481,deployability,build,build,15481,end/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15571,deployability,build,build,15571,rc/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15651,deployability,build,build,15651,on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15719,deployability,build,build,15719,true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop bod,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15807,deployability,build,build,15807, in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15849,deployability,build,build,15849,16. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16018,deployability,continu,continues,16018,p condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16057,deployability,build,build,16057,nues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16135,deployability,build,build,16135,on is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16209,deployability,build,build,16209,. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16288,deployability,build,build,16288, side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16355,deployability,build,build,16355, 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16435,deployability,build,build,16435,. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16503,deployability,build,build,16503,9. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16582,deployability,build,build,16582,d/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16649,deployability,build,build,16649,uild/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16741,deployability,build,build,16741,0. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16807,deployability,build,build,16807,ld/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16876,deployability,build,build,16876, warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16942,deployability,continu,continues,16942,g-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:16981,deployability,build,build,16981,oop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17073,deployability,build,build,17073,n.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17139,deployability,build,build,17139,mkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17208,deployability,build,build,17208,ild/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17274,deployability,continu,continues,17274,root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17313,deployability,build,build,17313,5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17380,deployability,continu,continues,17380, Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17419,deployability,build,build,17419,opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17487,deployability,build,build,17487,opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17564,deployability,build,build,17564, /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17656,deployability,build,build,17656,epend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17724,deployability,build,build,17724,/opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or u,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17791,deployability,continu,continues,17791,t/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17830,deployability,build,build,17830,. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on li,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17922,deployability,build,build,17922,taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:17991,deployability,build,build,17991,nd/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18067,deployability,build,build,18067,rc/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18148,deployability,build,build,18148,end/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18217,deployability,build,build,18217,end/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18307,deployability,build,build,18307,rc/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18376,deployability,build,build,18376, continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18445,deployability,build,build,18445,9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18513,deployability,build,build,18513,0: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering lo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18615,deployability,build,build,18615,. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18657,deployability,build,build,18657,d/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18818,deployability,continu,continues,18818,ot_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18857,deployability,build,build,18857,: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18935,deployability,build,build,18935,main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19009,deployability,build,build,19009,c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19088,deployability,build,build,19088,25. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19155,deployability,build,build,19155,epend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19235,deployability,build,build,19235,c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19303,deployability,build,build,19303,/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19382,deployability,build,build,19382,depend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19449,deployability,build,build,19449,mkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19541,deployability,build,build,19541, 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19607,deployability,build,build,19607,_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19676,deployability,build,build,19676,:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19742,deployability,continu,continues,19742,yzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19781,deployability,build,build,19781,oop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19873,deployability,build,build,19873,n.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:19939,deployability,build,build,19939,mkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20008,deployability,build,build,20008,ild/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20074,deployability,continu,continues,20074,root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20113,deployability,build,build,20113,5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20180,deployability,continu,continues,20180, Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20219,deployability,build,build,20219,opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20287,deployability,build,build,20287,opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20364,deployability,build,build,20364, /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20456,deployability,build,build,20456,epend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20524,deployability,build,build,20524,/opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20591,deployability,continu,continues,20591,t/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20630,deployability,build,build,20630,. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20722,deployability,build,build,20722,taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20791,deployability,build,build,20791,nd/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20867,deployability,build,build,20867,rc/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:20948,deployability,build,build,20948,end/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21017,deployability,build,build,21017,end/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21107,deployability,build,build,21107,rc/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21176,deployability,build,build,21176, continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21245,deployability,build,build,21245,9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21313,deployability,build,build,21313,0: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21401,deployability,build,build,21401,dition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21443,deployability,build,build,21443,/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21604,deployability,continu,continues,21604,221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21643,deployability,build,build,21643,main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21721,deployability,build,build,21721,ild/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21795,deployability,build,build,21795,mkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21874,deployability,build,build,21874,epend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21941,deployability,build,build,21941,src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22021,deployability,build,build,22021,mkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22089,deployability,build,build,22089, /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22168,deployability,build,build,22168,_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22235,deployability,build,build,22235,ot_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22327,deployability,build,build,22327,ain.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22393,deployability,build,build,22393,_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22462,deployability,build,build,22462,:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22528,deployability,continu,continues,22528,yzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22567,deployability,build,build,22567,oop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22659,deployability,build,build,22659,n.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22725,deployability,build,build,22725,mkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22794,deployability,build,build,22794,ild/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22860,deployability,continu,continues,22860,root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22899,deployability,build,build,22899,5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:22966,deployability,continu,continues,22966, Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23005,deployability,build,build,23005,opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23073,deployability,build,build,23073,opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23150,deployability,build,build,23150, /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23242,deployability,build,build,23242,epend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23310,deployability,build,build,23310,/opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23377,deployability,continu,continues,23377,t/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23416,deployability,build,build,23416,. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23508,deployability,build,build,23508,taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23577,deployability,build,build,23577,nd/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23653,deployability,build,build,23653,rc/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23734,deployability,build,build,23734,end/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23803,deployability,build,build,23803,end/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23893,deployability,build,build,23893,rc/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23962,deployability,build,build,23962, continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24031,deployability,build,build,24031,9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24099,deployability,build,build,24099,0: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24187,deployability,build,build,24187,dition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24229,deployability,build,build,24229,/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24390,deployability,continu,continues,24390,221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24429,deployability,build,build,24429,main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24507,deployability,build,build,24507,ild/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24581,deployability,build,build,24581,mkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24660,deployability,build,build,24660,epend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24727,deployability,build,build,24727,src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24807,deployability,build,build,24807,mkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24875,deployability,build,build,24875, /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24954,deployability,build,build,24954,_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25021,deployability,build,build,25021,ot_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25113,deployability,build,build,25113,ain.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25179,deployability,build,build,25179,_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25248,deployability,build,build,25248,:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25314,deployability,continu,continues,25314,yzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25353,deployability,build,build,25353,oop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25445,deployability,build,build,25445,n.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25511,deployability,build,build,25511,mkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25580,deployability,build,build,25580,ild/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25646,deployability,continu,continues,25646,root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25685,deployability,build,build,25685,5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25752,deployability,continu,continues,25752, Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25791,deployability,build,build,25791,opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25859,deployability,build,build,25859,opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:25936,deployability,build,build,25936, /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26028,deployability,build,build,26028,epend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26096,deployability,build,build,26096,/opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26163,deployability,continu,continues,26163,t/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26202,deployability,build,build,26202,. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26294,deployability,build,build,26294,taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26363,deployability,build,build,26363,nd/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26439,deployability,build,build,26439,rc/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26520,deployability,build,build,26520,end/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26589,deployability,build,build,26589,end/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26679,deployability,build,build,26679,rc/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26748,deployability,build,build,26748, continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26817,deployability,build,build,26817,9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26885,deployability,build,build,26885,0: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26973,deployability,build,build,26973,dition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27015,deployability,build,build,27015,/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27176,deployability,continu,continues,27176,221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27215,deployability,build,build,27215,main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27293,deployability,build,build,27293,ild/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27367,deployability,build,build,27367,mkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27446,deployability,build,build,27446,epend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27513,deployability,build,build,27513,src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27593,deployability,build,build,27593,mkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27661,deployability,build,build,27661, /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27740,deployability,build,build,27740,_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27807,deployability,build,build,27807,ot_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27899,deployability,build,build,27899,ain.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27965,deployability,build,build,27965,_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28034,deployability,build,build,28034,:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28100,deployability,continu,continues,28100,yzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:22,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28139,deployability,build,build,28139,oop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28231,deployability,build,build,28231,n.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28297,deployability,build,build,28297,mkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28366,deployability,build,build,28366,ild/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28432,deployability,continu,continues,28432,root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28471,deployability,build,build,28471,5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28538,deployability,continu,continues,28538, Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28577,deployability,build,build,28577,opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28645,deployability,build,build,28645,opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28722,deployability,build,build,28722, /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garb,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28814,deployability,build,build,28814,epend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28882,deployability,build,build,28882,/opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28949,deployability,continu,continues,28949,t/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:28988,deployability,build,build,28988,. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29080,deployability,build,build,29080,taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29149,deployability,build,build,29149,nd/main.c:200. 14: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29225,deployability,build,build,29225,rc/build/rmkdepend/main.c:193. 15: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29306,deployability,build,build,29306,end/main.c:194. 16: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29375,deployability,build,build,29375,end/main.c:194. 17: 'Default' branch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29465,deployability,build,build,29465,rc/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29534,deployability,build,build,29534, continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29603,deployability,build,build,29603,9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29671,deployability,build,build,29671,0: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29759,deployability,build,build,29759,dition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29801,deployability,build,build,29801,/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29955,deployability,continu,continues,29955,n line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29994,deployability,build,build,29994,depend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Exec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30072,deployability,build,build,30072,_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: P,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30146,deployability,build,build,30146,build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30225,deployability,build,build,30225,ld/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereferen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30292,deployability,build,build,30292,t/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30372,deployability,build,build,30372,build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30440,deployability,build,build,30440, 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is no,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30519,deployability,build,build,30519,pt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30586,deployability,build,build,30586,/opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30653,deployability,continu,continues,30653,opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30692,deployability,build,build,30692,50. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30761,deployability,build,build,30761,/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30830,deployability,build,build,30830,arning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30897,deployability,continu,continues,30897,-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30936,deployability,build,build,30936,alse. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31003,deployability,continu,continues,31003,d/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true bra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31042,deployability,build,build,31042,qual to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31137,deployability,build,build,31137,t_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31179,deployability,build,build,31179,ing the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31352,deployability,continu,continues,31352, /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/mai,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31391,deployability,build,build,31391,:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31473,deployability,build,build,31473,ing the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31548,deployability,build,build,31548,aking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31614,deployability,continu,continues,31614,oop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31653,deployability,build,build,31653,tinues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31719,deployability,continu,continues,31719,Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31758,deployability,build,build,31758,build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31826,deployability,build,build,31826,/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31894,deployability,build,build,31894,continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31962,deployability,build,build,31962,4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from fie,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32029,deployability,build,build,32029,/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32098,deployability,build,build,32098,inted to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32190,deployability,build,build,32190,d/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' ini,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32257,deployability,build,build,32257,field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32338,deployability,build,build,32338, Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32407,deployability,build,build,32407,n.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32489,deployability,build,build,32489,n.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32579,deployability,build,build,32579,p condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32647,deployability,build,build,32647,rc/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop cond,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32728,deployability,build,build,32728, line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32797,deployability,build,build,32797, is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32889,deployability,build,build,32889,c/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32994,deployability,build,build,32994,ng true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33036,deployability,build,build,33036,epend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33243,deployability,build,build,33243,t/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33309,deployability,continu,continues,33309, false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33348,deployability,build,build,33348,nd/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null p,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33430,deployability,build,build,33430,. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33505,deployability,build,build,33505,n.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: P,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33571,deployability,continu,continues,33571,rc/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33610,deployability,build,build,33610,king true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Callin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33676,deployability,continu,continues,33676,suming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null point,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33715,deployability,build,build,33715,/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33783,deployability,build,build,33783,t/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33851,deployability,build,build,33851, to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33919,deployability,build,build,33919,ereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Repl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33987,deployability,build,build,33987,src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34056,deployability,build,build,34056,567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34148,deployability,build,build,34148,re.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34236,deployability,build,build,34236,src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that su,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34305,deployability,build,build,34305, continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34406,deployability,build,build,34406,o 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'spri,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34475,deployability,build,build,34475, is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34575,deployability,build,build,34575,es on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support le,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34639,deployability,build,build,34639,oop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34745,deployability,build,build,34745,umundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34787,deployability,build,build,34787,mkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35306,deployability,build,build,35306,d/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35348,deployability,build,build,35348,ointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 17,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36017,deployability,build,build,36017,py'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36059,deployability,build,build,36059,cureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36265,deployability,build,build,36265,s 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36331,deployability,continu,continues,36331,pt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/m,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36370,deployability,build,build,36370,6:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36452,deployability,build,build,36452,ng of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36527,deployability,build,build,36527,Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36593,deployability,continu,continues,36593,ovides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36632,deployability,build,build,36632,tf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36698,deployability,continu,continues,36698,OrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36737,deployability,build,build,36737,unction 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36805,deployability,build,build,36805, memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36873,deployability,build,build,36873,place with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36941,deployability,build,build,36941,ides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:71,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37009,deployability,build,build,37009,_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37078,deployability,build,build,37078,:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37183,deployability,build,build,37183,amChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37251,deployability,build,build,37251,t/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37319,deployability,build,build,37319,xecution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37395,deployability,build,build,37395,3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37463,deployability,build,build,37463,d/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37531,deployability,build,build,37531,mkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37612,deployability,build,build,37612,in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37681,deployability,build,build,37681,se. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37762,deployability,build,build,37762,7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37831,deployability,build,build,37831,: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null poi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37919,deployability,build,build,37919,l in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37988,deployability,build,build,37988, in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-P,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38068,deployability,build,build,38068,ot_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38136,deployability,build,build,38136,a 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [cla,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38211,deployability,build,build,38211, Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38279,deployability,build,build,38279, 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not prov,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38341,deployability,build,build,38341,6. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy func,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38416,deployability,build,build,38416,96. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38483,deployability,continu,continues,38483,4. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38522,deployability,build,build,38522,t_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38584,deployability,build,build,38584,s false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unboun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38652,deployability,build,build,38652,e branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length argu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38725,deployability,build,build,38725,ndition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38794,deployability,build,build,38794,ing false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Acc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38900,deployability,build,build,38900,n /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38942,deployability,build,build,38942,. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39061,deployability,build,build,39061,src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 60,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39180,deployability,build,build,39180,uild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39705,deployability,build,build,39705,in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39753,deployability,build,build,39753, Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded fro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39994,deployability,build,build,39994,tic (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40083,deployability,build,build,40083,cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40158,deployability,build,build,40158,ic]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40226,deployability,build,build,40226, to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40292,deployability,build,build,40292,of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40361,deployability,build,build,40361, functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40427,deployability,build,build,40427,9 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40508,deployability,build,build,40508,nsecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40711,deployability,build,build,40711,depend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the con,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40920,deployability,build,build,40920,rence]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/pars,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40988,deployability,continu,continues,40988,/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/pars,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41027,deployability,build,build,41027,rol jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'fi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41109,deployability,build,build,41109,3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41179,deployability,build,build,41179,605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41256,deployability,build,build,41256,recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41324,deployability,continu,continues,41324,g false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41363,deployability,build,build,41363,/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41432,deployability,build,build,41432,kdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Executio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41500,deployability,build,build,41500,_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41595,deployability,build,build,41595, 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41665,deployability,build,build,41665,eft side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41747,deployability,build,build,41747,ed from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to fiel,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41817,deployability,build,build,41817, macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from var,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41903,deployability,build,build,41903,/opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:41973,deployability,build,build,41973,. Execution continues on line 408 in /opt/root_src/build/rmkdepend/parse.c:406. 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42052,deployability,build,build,42052, 16: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42120,deployability,continu,continues,42120,parse.c:408. 17: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42159,deployability,build,build,42159,in /opt/root_src/build/rmkdepend/parse.c:408. 18: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42231,deployability,build,build,42231,alse in /opt/root_src/build/rmkdepend/parse.c:410. 19: Loop condition is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it do,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42301,deployability,build,build,42301,is false. Execution continues on line 413 in /opt/root_src/build/rmkdepend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42369,deployability,build,build,42369,depend/parse.c:410. 20: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42437,deployability,continu,continues,42437,epend/parse.c:413. 21: Calling 'define2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42476,deployability,build,build,42476,e2' in /opt/root_src/build/rmkdepend/parse.c:415. 22: Assuming field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42551,deployability,build,build,42551,s' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:331. 23: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bou,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42634,deployability,build,build,42634,lse branch in /opt/root_src/build/rmkdepend/parse.c:331. 24: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42703,deployability,build,build,42703, the condition is false in /opt/root_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-an,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42851,deployability,build,build,42851,d 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42894,deployability,build,build,42894,t_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43412,deployability,build,build,43412,n is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43452,deployability,build,build,43452,388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43970,deployability,build,build,43970,it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44010,deployability,build,build,44010,ry buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44528,deployability,build,build,44528,it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44568,deployability,build,build,44568,ry buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45236,deployability,build,build,45236,rlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45276,deployability,build,build,45276,.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Ca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45944,deployability,build,build,45944,1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45984,deployability,build,build,45984,e as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46501,deployability,build,build,46501,ength arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46541,deployability,build,build,46541,cks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the conditi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46709,deployability,build,build,46709,provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46775,deployability,build,build,46775,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false br,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46868,deployability,build,build,46868,ides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46933,deployability,build,build,46933,oot_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46992,deployability,build,build,46992,pend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of mem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47060,deployability,build,build,47060,t does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47132,deployability,build,build,47132, functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory afte,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47209,deployability,build,build,47209,rlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is fals,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47274,deployability,build,build,47274,Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false bran,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47353,deployability,build,build,47353,mory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47427,deployability,build,build,47427,t support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47494,deployability,build,build,47494,src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47573,deployability,build,build,47573,: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47647,deployability,build,build,47647,lloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47733,deployability,build,build,47733,: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47800,deployability,build,build,47800, Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47870,deployability,build,build,47870,/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47944,deployability,build,build,47944,d/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48040,deployability,build,build,48040,in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48080,deployability,build,build,48080,4. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48231,deployability,build,build,48231, 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48297,deployability,build,build,48297,10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48390,deployability,build,build,48390,of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48455,deployability,build,build,48455,emory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48514,deployability,build,build,48514,8. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48583,deployability,build,build,48583,nd/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48656,deployability,build,build,48656,end/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48733,deployability,build,build,48733,ld/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48805,deployability,build,build,48805,kdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48878,deployability,build,build,48878,pend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48945,deployability,build,build,48945,d/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49028,deployability,build,build,49028,root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49095,deployability,build,build,49095,.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the conditi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49164,deployability,build,build,49164,ix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking fal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49237,deployability,build,build,49237,depend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory af,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49315,deployability,build,build,49315,173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49381,deployability,build,build,49381,t_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49421,deployability,releas,released,49421, true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49447,deployability,build,build,49447,_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49511,deployability,build,build,49511,build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49578,deployability,build,build,49578, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49657,deployability,build,build,49657, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49724,deployability,build,build,49724, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49808,deployability,build,build,49808, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49882,deployability,build,build,49882, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49974,deployability,build,build,49974, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50048,deployability,build,build,50048, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50127,deployability,build,build,50127, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50194,deployability,build,build,50194, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50273,deployability,build,build,50273, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50313,deployability,build,build,50313, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50355,deployability,build,build,50355, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50396,deployability,build,build,50396, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50434,deployability,build,build,50434, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50478,deployability,build,build,50478, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50517,deployability,build,build,50517, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4934,energy efficiency,core,core,4934,pport length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution con,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7627,energy efficiency,core,core,7627, in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:10380,energy efficiency,core,core,10380,in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution con,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:13216,energy efficiency,core,core,13216,Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15958,energy efficiency,core,core,15958,rue branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on line ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18752,energy efficiency,core,core,18752,: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21538,energy efficiency,core,core,21538,main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:24324,energy efficiency,core,core,24324,main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:27110,energy efficiency,core,core,27110,main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:193. 11: 'quotechar' is 0 in /opt/root_src/build/rmkdepend/main.c:194. 12: Taking false branch in /opt/root_src/build/rmkdepend/main.c:194. 13: 'Default' branch taken. Execution continues on,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30803,energy efficiency,alloc,allocated,30803,mkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31248,energy efficiency,load,loaded,31248,. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31291,energy efficiency,core,core,31291,uild/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32950,energy efficiency,load,loaded,32950,root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Ta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33149,energy efficiency,core,core,33149,e. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36171,energy efficiency,core,core,36171, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39863,energy efficiency,load,loaded,39863,ecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39908,energy efficiency,core,core,39908,epend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42805,energy efficiency,load,loaded,42805,root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47467,energy efficiency,alloc,allocated,47467,y'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/p,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:93,integrability,buffer,buffer,93,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:317,integrability,buffer,buffer,317,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:661,integrability,buffer,buffer,661,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1687,integrability,buffer,buffer,1687,roduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1943,integrability,buffer,buffer,1943,ing: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4212,integrability,buffer,buffer,4212,roduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4556,integrability,buffer,buffer,4556,uced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34910,integrability,buffer,buffer,34910,t_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35166,integrability,buffer,buffer,35166,c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyze,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35472,integrability,buffer,buffer,35472,build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35816,integrability,buffer,buffer,35816,rning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39309,integrability,buffer,buffer,39309,found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/pars,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39565,integrability,buffer,buffer,39565,n /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43016,integrability,buffer,buffer,43016,t' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43272,integrability,buffer,buffer,43272,e branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43574,integrability,buffer,buffer,43574,8. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43830,integrability,buffer,buffer,43830, in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44132,integrability,buffer,buffer,44132,119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that supp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44388,integrability,buffer,buffer,44388,119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44691,integrability,buffer,buffer,44691,19 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45035,integrability,buffer,buffer,45035, warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45399,integrability,buffer,buffer,45399,e unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45743,integrability,buffer,buffer,45743,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46105,integrability,buffer,buffer,46105,alogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46361,integrability,buffer,buffer,46361,not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkde,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:365,interoperability,standard,standard,365,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:709,interoperability,standard,standard,709,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1051,interoperability,standard,standard,1051,"ess warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1362,interoperability,standard,standard,1362,tandard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2271,interoperability,standard,standard,2271,ion 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2582,interoperability,standard,standard,2582,:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2923,interoperability,standard,standard,2923,g of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3234,interoperability,standard,standard,3234,ity checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3575,interoperability,standard,standard,3575,11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3886,interoperability,standard,standard,3886,ity checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4260,interoperability,standard,standard,4260,us functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4604,interoperability,standard,standard,4604,functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taki,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35520,interoperability,standard,standard,35520,ter value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35864,interoperability,standard,standard,35864,t does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44739,interoperability,standard,standard,44739,1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45083,interoperability,standard,standard,45083,s it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bound,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45447,interoperability,standard,standard,45447,ns that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length argu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45791,interoperability,standard,standard,45791,length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:33103,modifiability,paramet,parameter,33103,epend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is tr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34372,modifiability,paramet,parameter,34372,: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34542,modifiability,paramet,parameter,34542,ion is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34698,modifiability,paramet,parameter,34698,pt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.Deprecated,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:36125,modifiability,paramet,parameter,36125, not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:37145,modifiability,paramet,parameter,37145,ull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Passing null pointer value via 2nd parameter 'makefile' in /opt/root_src/build/rmkdepend/main.c:419. 13: Calling 'redirect' in /opt/root_src/build/rmkdepend/main.c:419. 14: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:696. 15: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:696. 16: 'makefile' is null in /opt/root_src/build/rmkdepend/main.c:704. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:704. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:705. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:705. 20: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:707. 21: Taking false branch in /opt/root_src/build/rmkdepend/main.c:707. 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:38853,modifiability,paramet,parameter,38853, 22: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:713. 23: Taking false branch in /opt/root_src/build/rmkdepend/main.c:713. 24: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:728. 25: Taking true branch in /opt/root_src/build/rmkdepend/main.c:728. 26: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/main.c:730. 27: Taking true branch in /opt/root_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null poin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39875,modifiability,variab,variable,39875,ll' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42817,modifiability,variab,variable,42817,d/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:310,performance,memor,memory,310,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:654,performance,memor,memory,654,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1680,performance,memor,memory,1680,cks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1936,performance,memor,memory,1936,4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4205,performance,memor,memory,4205,cks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4549,performance,memor,memory,4549, introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29859,performance,memor,memory,29859,ch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30793,performance,Memor,Memory,30793,_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numund,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31092,performance,memor,memory,31092,176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31248,performance,load,loaded,31248,. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:32950,performance,load,loaded,32950,root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 11: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 12: Calling 'getfile' in /opt/root_src/build/rmkdepend/main.c:490. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:532. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:532. 15: Value assigned to field 'f_base' in /opt/root_src/build/rmkdepend/main.c:539. 16: Assuming field 'f_base' is equal to NULL in /opt/root_src/build/rmkdepend/main.c:540. 17: Taking true branch in /opt/root_src/build/rmkdepend/main.c:540. 18: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:542. 19: Taking false branch in /opt/root_src/build/rmkdepend/main.c:542. 20: Null pointer value stored to field 'f_end' in /opt/root_src/build/rmkdepend/main.c:550. 21: Dereference of null pointer (loaded from field 'f_end') in /opt/root_src/build/rmkdepend/main.c:551. /opt/root_src/build/rmkdepend/main.c:567:38: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Ta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34903,performance,memor,memory,34903,opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35159,performance,memor,memory,35159,d/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35465,performance,memor,memory,35465,ot_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35809,performance,memor,memory,35809,9:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39302,performance,memor,memory,39302,. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39558,performance,memor,memory,39558, is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro ',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39863,performance,load,loaded,39863,ecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42805,performance,load,loaded,42805,root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43009,performance,memor,memory,43009,ng 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43265,performance,memor,memory,43265,ng false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43567,performance,memor,memory,43567,se.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43823,performance,memor,memory,43823,'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides bo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44125,performance,memor,memory,44125,'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44381,performance,memor,memory,44381,'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44684,performance,memor,memory,44684,. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45028,performance,memor,memory,45028,121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to fu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45392,performance,memor,memory,45392, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45736,performance,memor,memory,45736,standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46098,performance,memor,memory,46098,with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46354,performance,memor,memory,46354,t does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46596,performance,memor,memory,46596,security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47457,performance,Memor,Memory,47457,h as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47992,performance,memor,memory,47992,ld/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is no,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48124,performance,memor,memory,48124,_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: As,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49411,performance,Memor,Memory,49411,. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50231,performance,memor,memory,50231, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:277,reliability,doe,does,277,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:621,reliability,doe,does,621,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:996,reliability,doe,does,996,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1307,reliability,doe,does,1307, memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous funct,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1647,reliability,doe,does,1647, the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1903,reliability,doe,does,1903,rc/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2216,reliability,doe,does,2216,reAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2527,reliability,doe,does,2527,d/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2868,reliability,doe,does,2868,ction 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3179,reliability,doe,does,3179,nction 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3520,reliability,doe,does,3520,s it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does n,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3831,reliability,doe,does,3831,nction 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4172,reliability,doe,does,4172,s it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4516,reliability,doe,does,4516,t does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34870,reliability,doe,does,34870,c:375. 9: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35126,reliability,doe,does,35126,dy in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st par,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35432,reliability,doe,does,35432,16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35776,reliability,doe,does,35776,root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39269,reliability,doe,does,39269,oot_src/build/rmkdepend/main.c:730. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39525,reliability,doe,does,39525,/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/par,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42976,reliability,doe,does,42976,/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43232,reliability,doe,does,43232,ld/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43534,reliability,doe,does,43534, /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43790,reliability,doe,does,43790,ull pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that suppo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44092,reliability,doe,does,44092, length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44348,reliability,doe,does,44348, length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44651,reliability,doe,does,44651,length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling],MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44995,reliability,doe,does,44995,opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45359,reliability,doe,does,45359,ide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45703,reliability,doe,does,45703,rity checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46065,reliability,doe,does,46065,uced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46321,reliability,doe,does,46321,unction 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:52,security,access,access,52,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:327,security,secur,security,327,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:517,security,secur,security,517,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:671,security,secur,security,671,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1013,security,secur,security,1013,"-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that sup",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1203,security,secur,security,1203,psetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1324,security,secur,security,1324,ecurity checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1826,security,secur,security,1826,in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2233,security,secur,security,2233,nsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 sta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2423,security,secur,security,2423,guments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2544,security,secur,security,2544,opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2885,security,secur,security,2885,nsecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 sta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3075,security,secur,security,3075,src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3196,security,secur,security,3196, insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3537,security,secur,security,3537,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3727,security,secur,security,3727,src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in cas,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3848,security,secur,security,3848, insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4222,security,secur,security,4222,the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4412,security,secur,security,4412,. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4566,security,secur,security,4566, C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7240,security,Control,Control,7240,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9924,security,Control,Control,9924,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12686,security,Control,Control,12686,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15513,security,Control,Control,15513,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18249,security,Control,Control,18249,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21049,security,Control,Control,21049,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23835,security,Control,Control,23835,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26621,security,Control,Control,26621,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29407,security,Control,Control,29407,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35049,security,secur,security,35049,rc/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35482,security,secur,security,35482,pend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Lef,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35672,security,secur,security,35672,pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop conditio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35826,security,secur,security,35826, to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:37,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39448,security,secur,security,39448, condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:6,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39794,security,Access,Access,39794,ld/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40026,security,Control,Control,40026,-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:42736,security,Access,Access,42736,oot_src/build/rmkdepend/parse.c:335. 25: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:335. 26: Field 'i_defs' is not equal to NULL in /opt/root_src/build/rmkdepend/parse.c:340. 27: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:340. 28: Assuming 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43155,security,secur,security,43155,build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43713,security,secur,security,43713,d/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44271,security,secur,security,44271,fer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44701,security,secur,security,44701,nalyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it do,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44891,security,secur,security,44891, that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks suc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45045,security,secur,security,45045,all to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45409,security,secur,security,45409, copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analog,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45599,security,secur,security,45599,g: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45753,security,secur,security,45753,with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46244,security,secur,security,46244,end/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking tru,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:7240,testability,Control,Control,7240,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 68:' at line 251 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking true branch in /opt/root_src/build/rmkdepend/main.c:252. 31: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:256. /opt/root_src/build/rmkdepend/main.c:268:28: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:9924,testability,Control,Control,9924,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 73:' at line 263 in /opt/root_src/build/rmkdepend/main.c:238. 30: Taking false branch in /opt/root_src/build/rmkdepend/main.c:264. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:267. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:268. /opt/root_src/build/rmkdepend/main.c:284:48: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:12686,testability,Control,Control,12686,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 85:' at line 272 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'numundefs' is equal to 1 in /opt/root_src/build/rmkdepend/main.c:275. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:275. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:280. 33: The left operand of '+' is a garbage value due to array index out of bounds in /opt/root_src/build/rmkdepend/main.c:284. /opt/root_src/build/rmkdepend/main.c:293:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:15513,testability,Control,Control,15513,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 105:' at line 289 in /opt/root_src/build/rmkdepend/main.c:238. 30: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:290. 31: Taking true branch in /opt/root_src/build/rmkdepend/main.c:290. 32: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:293. /opt/root_src/build/rmkdepend/main.c:306:24: warning: 1st function call argument is an uninitialized value [clang-analyzer-core.CallAndMessage]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:18249,testability,Control,Control,18249,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 119:' at line 301 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:302. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:302. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:303. 33: 1st function call argument is an uninitialized value in /opt/root_src/build/rmkdepend/main.c:306. /opt/root_src/build/rmkdepend/main.c:315:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:21049,testability,Control,Control,21049,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 111:' at line 310 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:311. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:311. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:312. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:315. /opt/root_src/build/rmkdepend/main.c:324:26: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:23835,testability,Control,Control,23835,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 112:' at line 319 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:320. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:320. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:321. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:324. /opt/root_src/build/rmkdepend/main.c:340:24: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:26621,testability,Control,Control,26621,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 115:' at line 336 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:337. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:337. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:339. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:340. /opt/root_src/build/rmkdepend/main.c:351:25: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29407,testability,Control,Control,29407,nch taken. Execution continues on line 193 in /opt/root_src/build/rmkdepend/main.c:200. 18: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 19: Taking true branch in /opt/root_src/build/rmkdepend/main.c:214. 20: Storing uninitialized value in /opt/root_src/build/rmkdepend/main.c:216. 21: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:219. 22: Taking true branch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:40026,testability,Control,Control,40026,-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /usr/include/ctype.h:89. 11: Left side of '||' is false in /opt/root_src/build/rmkdepend/parse.c:406. 12: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 13: expanded from macro '__isctype' in /usr/include/ctype.h:89. 14: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 15: Loop condition is false. Execution continues on line 408 in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:310,usability,memor,memory,310,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:413,usability,support,support,413,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:654,usability,memor,memory,654,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:757,usability,support,support,757,"[rmkdepend] Clang-tidy Clazy Warnings; Some garbage access warnings, null dereferencing, and buffer bounding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous f",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1099,usability,support,support,1099,"nding warnings by Clang:. (ROOT master of today, with xrootd off). ```. /opt/root_src/build/rmkdepend/cppsetup.c:150:4: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/incl",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1410,usability,support,support,1410,upport length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1680,usability,memor,memory,1680,cks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1758,usability,support,support,1758,rt length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:150. /opt/root_src/build/rmkdepend/cppsetup.c:180:4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:2,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:1936,usability,memor,memory,1936,4: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2014,usability,support,support,2014,ity checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2319,usability,support,support,2319, security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/cppsetup.c:180. /opt/root_src/build/rmkdepend/include.c:158:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2630,usability,support,support,2630,secure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support len,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:2971,usability,support,support,2971,unctions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/include.c:158. /opt/root_src/build/rmkdepend/include.c:289:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3282,usability,support,support,3282,ce with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3623,usability,support,support,3623,at support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:289. /opt/root_src/build/rmkdepend/include.c:292:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:3934,usability,support,support,3934,ce with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4205,usability,memor,memory,4205,cks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rm,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4308,usability,support,support,4308,ovides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:292. /opt/root_src/build/rmkdepend/include.c:294:10: warning: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Ta,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4549,usability,memor,memory,4549, introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:4652,usability,support,support,4652,des boundary checks such as 'strncpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'strncpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'strncpy_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:294. /opt/root_src/build/rmkdepend/include.c:318:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/include.c:318. /opt/root_src/build/rmkdepend/main.c:256:30: warning: The left operand of '+' is a garbage value due to array index out of bounds [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:29859,usability,memor,memory,29859,ch in /opt/root_src/build/rmkdepend/main.c:220. 23: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 24: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:223. 25: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:225. 26: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:225. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:229. 28: Taking false branch in /opt/root_src/build/rmkdepend/main.c:229. 29: Control jumps to 'case 102:' at line 347 in /opt/root_src/build/rmkdepend/main.c:238. 30: 'endmarker' is null in /opt/root_src/build/rmkdepend/main.c:348. 31: Taking false branch in /opt/root_src/build/rmkdepend/main.c:348. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:350. 33: Assigned value is garbage or undefined in /opt/root_src/build/rmkdepend/main.c:351. /opt/root_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:30793,usability,Memor,Memory,30793,_src/build/rmkdepend/main.c:373:13: warning: Potential leak of memory pointed to by 'argv' [clang-analyzer-unix.Malloc]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numund,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:31092,usability,memor,memory,31092,176. 3: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:176. 4: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:176. 5: Taking true branch in /opt/root_src/build/rmkdepend/main.c:176. 6: Assuming the condition is false in /opt/root_src/build/rmkdepend/main.c:185. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:185. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/main.c:189. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:189. 10: Loop condition is false. Execution continues on line 214 in /opt/root_src/build/rmkdepend/main.c:193. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:214. 12: Memory is allocated in /opt/root_src/build/rmkdepend/main.c:216. 13: Loop condition is false. Execution continues on line 221 in /opt/root_src/build/rmkdepend/main.c:219. 14: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 15: Potential leak of memory pointed to by 'argv' in /opt/root_src/build/rmkdepend/main.c:373. /opt/root_src/build/rmkdepend/main.c:551:20: warning: Dereference of null pointer (loaded from field 'f_end') [clang-analyzer-core.NullDereference]. 1: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 2: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 3: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 4: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 5: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 6: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 7: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 8: 'defincdir' is null in /opt/root_src/build/rmkdepend/main.c:378. 9: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 10: Taking false branch in /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34903,usability,memor,memory,34903,opt/root_src/build/rmkdepend/main.c:378. 10: Taking true branch in /opt/root_src/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:34981,usability,support,support,34981,c/build/rmkdepend/main.c:378. 11: Taking false branch in /opt/root_src/build/rmkdepend/main.c:403. 12: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35159,usability,memor,memory,35159,d/main.c:489. 13: Assuming 'rootBuild' is not equal to 0 in /opt/root_src/build/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35237,usability,support,support,35237,/rmkdepend/main.c:495. 14: Taking false branch in /opt/root_src/build/rmkdepend/main.c:495. 15: Passing null pointer value via 1st parameter 'file' in /opt/root_src/build/rmkdepend/main.c:498. 16: Calling 'base_name' in /opt/root_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35465,usability,memor,memory,35465,ot_src/build/rmkdepend/main.c:498. 17: Passing null pointer value via 1st parameter 'str' in /opt/root_src/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35568,usability,support,support,35568,rc/build/rmkdepend/main.c:659. 18: Calling 'copy' in /opt/root_src/build/rmkdepend/main.c:659. 19: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:567. /opt/root_src/build/rmkdepend/main.c:569:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35809,usability,memor,memory,35809,9:4: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:35912,usability,support,support,35912,. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/main.c:569. /opt/root_src/build/rmkdepend/main.c:716:7: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/main.c:716. /opt/root_src/build/rmkdepend/main.c:749:7: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'makefile' initialized to a null pointer value in /opt/root_src/build/rmkdepend/main.c:161. 2: Loop condition is false. Execution continues on line 176 in /opt/root_src/build/rmkdepend/main.c:172. 3: Assuming 'argc' is not equal to 2 in /opt/root_src/build/rmkdepend/main.c:176. 4: Left side of '&&' is false in /opt/root_src/build/rmkdepend/main.c:176. 5: Loop condition is false. Execution continues on line 373 in /opt/root_src/build/rmkdepend/main.c:223. 6: Loop condition is false. Execution continues on line 375 in /opt/root_src/build/rmkdepend/main.c:373. 7: 'numundefs' is <= 0 in /opt/root_src/build/rmkdepend/main.c:375. 8: Taking false branch in /opt/root_src/build/rmkdepend/main.c:375. 9: 'defincdir' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39302,usability,memor,memory,39302,. 28: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:732. 29: Left side of '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39380,usability,support,support,39380,f '&&' is true in /opt/root_src/build/rmkdepend/main.c:732. 30: Loop condition is false. Execution continues on line 737 in /opt/root_src/build/rmkdepend/main.c:732. 31: 'found' is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39558,usability,memor,memory,39558, is 0 in /opt/root_src/build/rmkdepend/main.c:737. 32: Taking true branch in /opt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro ',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:39636,usability,support,support,39636,pt/root_src/build/rmkdepend/main.c:737. 33: Assuming 'verbose' is 0 in /opt/root_src/build/rmkdepend/main.c:738. 34: Taking false branch in /opt/root_src/build/rmkdepend/main.c:738. 35: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/build/rmkdepend/main.c:749. /opt/root_src/build/rmkdepend/mainroot.cxx:52:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:53:1: warning: non-POD static (basic_string) [clazy-non-pod-global-static]. /opt/root_src/build/rmkdepend/mainroot.cxx:116:7: warning: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcat' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcat'. CWE-119 in /opt/root_src/build/rmkdepend/mainroot.cxx:116. /opt/root_src/build/rmkdepend/parse.c:392:17: warning: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') [clang-analyzer-core.NullDereference]. 1: Loop condition is true. Entering loop body in /opt/root_src/build/rmkdepend/parse.c:542. 2: Control jumps to 'case 17:' at line 602 in /opt/root_src/build/rmkdepend/parse.c:543. 3: Assuming 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:605. 4: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:605. 5: 'recursion' is 0 in /opt/root_src/build/rmkdepend/parse.c:609. 6: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:609. 7: Calling 'define' in /opt/root_src/build/rmkdepend/parse.c:613. 8: Assuming the condition is false in /opt/root_src/build/rmkdepend/parse.c:406. 9: expanded from macro 'isalnum' in /usr/include/ctype.h:189. 10: expanded from macro '__isctype' in /u,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43009,usability,memor,memory,43009,ng 'last' is < 'first' in /opt/root_src/build/rmkdepend/parse.c:345. 29: Loop condition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43087,usability,support,support,43087,ondition is false. Execution continues on line 376 in /opt/root_src/build/rmkdepend/parse.c:345. 30: 'sp' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:376. 31: Taking false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43265,usability,memor,memory,43265,ng false branch in /opt/root_src/build/rmkdepend/parse.c:376. 32: 'sp' is <= 'dest' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43343,usability,support,support,43343,est' in /opt/root_src/build/rmkdepend/parse.c:384. 33: Loop condition is false. Execution continues on line 388 in /opt/root_src/build/rmkdepend/parse.c:384. 34: Value assigned to 'stab' in /opt/root_src/build/rmkdepend/parse.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43567,usability,memor,memory,43567,se.c:388. 35: Assuming 'stab' is equal to NULL in /opt/root_src/build/rmkdepend/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43645,usability,support,support,43645,/parse.c:389. 36: Taking true branch in /opt/root_src/build/rmkdepend/parse.c:389. 37: Access to field 's_name' results in a dereference of a null pointer (loaded from variable 'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43823,usability,memor,memory,43823,'stab') in /opt/root_src/build/rmkdepend/parse.c:392. /opt/root_src/build/rmkdepend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides bo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:43901,usability,support,support,43901,pend/pr.c:108:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44125,usability,memor,memory,44125,'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44203,usability,support,support,44203,trcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44381,usability,memor,memory,44381,'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:108. /opt/root_src/build/rmkdepend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44459,usability,support,support,44459,pend/pr.c:119:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replac,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44684,usability,memor,memory,44684,. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:44787,usability,support,support,44787,oes not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:119. /opt/root_src/build/rmkdepend/pr.c:121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45028,usability,memor,memory,45028,121:10: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to fu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45131,usability,support,support,45131,fer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45392,usability,memor,memory,45392, Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45495,usability,support,support,45495,y'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:121. /opt/root_src/build/rmkdepend/pr.c:132:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45736,usability,memor,memory,45736,standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: T,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:45839,usability,support,support,45839,h as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field ',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46098,usability,memor,memory,46098,with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46176,usability,support,support,46176,cks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:132. /opt/root_src/build/rmkdepend/pr.c:135:10: warning: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46354,usability,memor,memory,46354,t does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46432,usability,support,support,46432,in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmk,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:46596,usability,memor,memory,46596,security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'sprintf' is insecure as it does not provide bounding of the memory buffer or security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'sprintf_s' in case of C11 in /opt/root_src/build/rmkdepend/pr.c:135. /opt/root_src/build/rmkdepend/pr.c:141:7: warning: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 [clang-analyzer-security.insecureAPI.strcpy]. 1: Call to function 'strcpy' is insecure as it does not provide bounding of the memory buffer. Replace unbounded copy functions with analogous functions that support length arguments such as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47457,usability,Memor,Memory,47457,h as 'strlcpy'. CWE-119 in /opt/root_src/build/rmkdepend/pr.c:141. /opt/root_src/build/rmkdepend/pr.c:147:8: warning: Potential leak of memory pointed to by 'ipifile' [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:47992,usability,memor,memory,47992,ld/rmkdepend/pr.c:177. 6: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is no,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:48124,usability,memor,memory,48124,_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:104. 9: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:104. 10: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:105. 11: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:105. 12: Memory is allocated in /opt/root_src/build/rmkdepend/pr.c:118. 13: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:127. 14: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:127. 15: Assuming 'file' is equal to 'lastfile' in /opt/root_src/build/rmkdepend/pr.c:127. 16: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:127. 17: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:144. 18: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:144. 19: Potential leak of memory pointed to by 'ipifile' in /opt/root_src/build/rmkdepend/pr.c:147. /opt/root_src/build/rmkdepend/pr.c:160:4: warning: Use of memory after it is freed [clang-analyzer-unix.Malloc]. 1: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:173. 2: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:173. 3: Assuming 'file' is not equal to field 'i_file' in /opt/root_src/build/rmkdepend/pr.c:176. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: As,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:49411,usability,Memor,Memory,49411,. 4: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:176. 5: Calling 'pr' in /opt/root_src/build/rmkdepend/pr.c:177. 6: Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/ma,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7410:50231,usability,memor,memory,50231, Assuming 'len' is <= 2 in /opt/root_src/build/rmkdepend/pr.c:104. 7: Left side of '&&' is false in /opt/root_src/build/rmkdepend/pr.c:104. 8: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:127. 9: Left side of '||' is true in /opt/root_src/build/rmkdepend/pr.c:127. 10: Assuming 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:129. 11: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:129. 12: Assuming 'dep' is not equal to null in /opt/root_src/build/rmkdepend/pr.c:131. 13: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:131. 14: Assuming 'len' is > 2 in /opt/root_src/build/rmkdepend/pr.c:144. 15: Left side of '&&' is true in /opt/root_src/build/rmkdepend/pr.c:144. 16: Assuming the condition is true in /opt/root_src/build/rmkdepend/pr.c:144. 17: Taking true branch in /opt/root_src/build/rmkdepend/pr.c:144. 18: Memory is released in /opt/root_src/build/rmkdepend/pr.c:145. 19: 'rootBuild' is 0 in /opt/root_src/build/rmkdepend/pr.c:147. 20: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:147. 21: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:150. 22: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:150. 23: Assuming 'verbose' is not equal to 0 in /opt/root_src/build/rmkdepend/pr.c:156. 24: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 25: Assuming field 'i_list' is not equal to NULL in /opt/root_src/build/rmkdepend/pr.c:156. 26: Left side of '||' is false in /opt/root_src/build/rmkdepend/pr.c:156. 27: Assuming the condition is false in /opt/root_src/build/rmkdepend/pr.c:156. 28: Taking false branch in /opt/root_src/build/rmkdepend/pr.c:156. 29: Use of memory after it is freed in /opt/root_src/build/rmkdepend/pr.c:160. /opt/root_src/build/rmkdepend/cppsetup.c. /opt/root_src/build/rmkdepend/include.c. /opt/root_src/build/rmkdepend/main.c. /opt/root_src/build/rmkdepend/mainroot.cxx. /opt/root_src/build/rmkdepend/parse.c. /opt/root_src/build/rmkdepend/pr.c. ```,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7410
https://github.com/root-project/root/issues/7411:70602,deployability,continu,continues,70602,lse branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:444. 34: Assuming the condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:445. 35: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:445. 36: 'useLowProbCount' is 0 in /opt/root_src/builtins/zstd/compress/fse_compress.c:448. 37: '?' condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:448. 38: 's' is <= 'maxSymbolValue' in /opt/root_src/builtins/zstd/compress/fse_compress.c:458. 39: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/compress/fse_compress.c:458. 40: Assuming the condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:459. 41: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:459. 42: Assuming the condition is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:460. 43: Taking true branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:460. 44: Execution continues on line 458 in /opt/root_src/builtins/zstd/compress/fse_compress.c:460. 45: 's' is <= 'maxSymbolValue' in /opt/root_src/builtins/zstd/compress/fse_compress.c:458. 46: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/compress/fse_compress.c:458. 47: Assuming the condition is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:459. 48: Taking true branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:459. 49: Returning from 'FSE_normalizeCount' in /opt/root_src/builtins/zstd/compress/fse_compress.c:663. 50: expanded from macro 'CHECK_F' in /opt/root_src/builtins/zstd/common/error_private.h:62. 51: expanded from macro 'CHECK_V_F' in /opt/root_src/builtins/zstd/common/error_private.h:61. 52: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:663. 53: expanded from macro 'CHECK_F' in /opt/root_src/builtins/zstd/common/error_private.h:62. 54: expanded from macro 'CHECK_V_F' in /opt/root_src/builtins/zstd/common/error_priva,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:73457,deployability,continu,continues,73457, '&&' is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 65: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 66: 'previousIs0' is 0 in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 67: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 68: The value 1 is assigned to 'symbol' in /opt/root_src/builtins/zstd/compress/fse_compress.c:254. 69: 'count' is >= 0 in /opt/root_src/builtins/zstd/compress/fse_compress.c:256. 70: '?' condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:256. 71: 'count' is < 'threshold' in /opt/root_src/builtins/zstd/compress/fse_compress.c:258. 72: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:258. 73: 'remaining' is >= 1 in /opt/root_src/builtins/zstd/compress/fse_compress.c:264. 74: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:264. 75: Loop condition is false. Execution continues on line 267 in /opt/root_src/builtins/zstd/compress/fse_compress.c:265. 76: 'bitCount' is <= 16 in /opt/root_src/builtins/zstd/compress/fse_compress.c:267. 77: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:267. 78: 'symbol' is < 'alphabetSize' in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 79: Left side of '&&' is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 80: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 81: 'previousIs0' is 1 in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 82: Taking true branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 83: 'symbol' is < 'alphabetSize' in /opt/root_src/builtins/zstd/compress/fse_compress.c:226. 84: Left side of '&&' is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:226. 85: Branch condition evaluates to a garbage value in /opt/root_src/builtins/zstd/compress/fse_compress.c:226. /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15055,energy efficiency,core,core,15055,with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-an,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:43440,energy efficiency,core,core,43440,vide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48793,energy efficiency,core,core,48793,vide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:65058,energy efficiency,core,core,65058,nalogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66686,energy efficiency,core,core,66686,ze' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 6: '?' condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 7: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 8: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 9: Assuming 'srcSize' is > 1 in /opt/root_src/builtins/zstd/compress/fse_compress.c:651. 10: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:651. 11: 'maxSymbolValue' is 255 in /opt/root_src/builtins/zstd/compress/fse_compress.c:652,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:74580,energy efficiency,core,core,74580,iltins/zstd/compress/fse_compress.c:267. 77: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:267. 78: 'symbol' is < 'alphabetSize' in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 79: Left side of '&&' is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 80: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 81: 'previousIs0' is 1 in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 82: Taking true branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 83: 'symbol' is < 'alphabetSize' in /opt/root_src/builtins/zstd/compress/fse_compress.c:226. 84: Left side of '&&' is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:226. 85: Branch condition evaluates to a garbage value in /opt/root_src/builtins/zstd/compress/fse_compress.c:226. /opt/root_src/builtins/zstd/compress/fse_compress.c:254:13: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 6: '?' condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 7: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 8: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 9: Assuming 'srcSize' is > 1 in /opt/root_src/builtins/zstd/compress/fse_compress.c:651. 10: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:651. 11: 'maxSymbolValue' is 255 in /opt/root_src/builtins/zstd/compress/fse_compress.c:652,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:80358,energy efficiency,alloc,allocation,80358,n /opt/root_src/builtins/zstd/compress/fse_compress.c:296. 54: Assuming the condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:298. 55: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:298. 56: Calling 'FSE_writeNCount_generic' in /opt/root_src/builtins/zstd/compress/fse_compress.c:301. 57: Assuming 'symbol' is < 'alphabetSize' in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 58: Left side of '&&' is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 59: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 60: 'previousIs0' is 0 in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 61: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 62: Assigned value is garbage or undefined in /opt/root_src/builtins/zstd/compress/fse_compress.c:254. /opt/root_src/builtins/zstd/dictBuilder/cover.c:921:22: warning: Call to 'malloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]. 1: Assuming the condition is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1118. 2: '?' condition is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1118. 3: Assuming field 'd' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1119. 4: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1119. 5: Field 'd' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1120. 6: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1120. 7: Assuming field 'k' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1121. 8: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1121. 9: Field 'k' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1122. 10: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1122. 11: Assuming field 'steps' is not equal to 0 in /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:92408,energy efficiency,alloc,allocation,92408,assigned to 'selection.dictSize' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 124: Calling 'COVER_best_finish' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 125: 'dictSize' initialized to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:905. 126: 'best' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 127: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 128: Assuming 'compressedSize' is < field 'compressedSize' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 129: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 130: Assuming field 'dict' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:917. 131: Left side of '||' is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:917. 132: Field 'dict' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:918. 133: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:918. 134: Call to 'malloc' has an allocation size of 0 bytes in /opt/root_src/builtins/zstd/dictBuilder/cover.c:921. /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1229:11: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1187. 2: Assuming 'limit' is < 0 in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1189. 3: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1189. 4: Assuming the condition is false in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1190. 5: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1190. 6: Assuming the condition is true in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1227. 7: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1227. 8: Assigned value is garbage or undefined in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1229. /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:92617,energy efficiency,core,core,92617,d to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:905. 126: 'best' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 127: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 128: Assuming 'compressedSize' is < field 'compressedSize' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 129: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 130: Assuming field 'dict' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:917. 131: Left side of '||' is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:917. 132: Field 'dict' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:918. 133: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:918. 134: Call to 'malloc' has an allocation size of 0 bytes in /opt/root_src/builtins/zstd/dictBuilder/cover.c:921. /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1229:11: warning: Assigned value is garbage or undefined [clang-analyzer-core.uninitialized.Assign]. 1: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1187. 2: Assuming 'limit' is < 0 in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1189. 3: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1189. 4: Assuming the condition is false in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1190. 5: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1190. 6: Assuming the condition is true in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1227. 7: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1227. 8: Assigned value is garbage or undefined in /opt/root_src/builtins/zstd/dictBuilder/divsufsort.c:1229. /opt/root_src/builtins/lz4/lz4.c. /opt/root_src/builtins/lz4/lz4frame.c. /opt/root_src/builtins/lz4/lz4hc.c. /opt/root_src/builtins/zstd/compress/fse_compress.c. /opt/root_src/builtins/zstd/dictBuilder/cover.c. /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:279,interoperability,standard,standard,279,"[builtins] Clang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:665,interoperability,standard,standard,665,"[builtins] Clang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1066,interoperability,standard,standard,1066,"ry warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expande",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1452,interoperability,standard,standard,1452,catedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1853,interoperability,standard,standard,1853, macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expand,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2239,interoperability,standard,standard,2239,catedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2641,interoperability,standard,standard,2641,macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expand,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3027,interoperability,standard,standard,3027,atedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3429,interoperability,standard,standard,3429,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expande,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3815,interoperability,standard,standard,3815,atedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4216,interoperability,standard,standard,4216,macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded fr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4600,interoperability,standard,standard,4600,recatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4999,interoperability,standard,standard,4999,from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expande,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5385,interoperability,standard,standard,5385,eprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5786,interoperability,standard,standard,5786,om macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expande,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6172,interoperability,standard,standard,6172,catedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6573,interoperability,standard,standard,6573, macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expande,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6959,interoperability,standard,standard,6959,catedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7360,interoperability,standard,standard,7360, macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expande,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7746,interoperability,standard,standard,7746,catedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8147,interoperability,standard,standard,8147, macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expande,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8533,interoperability,standard,standard,8533,catedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8934,interoperability,standard,standard,8934, macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expande,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9320,interoperability,standard,standard,9320,catedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9721,interoperability,standard,standard,9721, macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expand,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10107,interoperability,standard,standard,10107,catedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10509,interoperability,standard,standard,10509,macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10893,interoperability,standard,standard,10893,ecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11293,interoperability,standard,standard,11293,om macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expan,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11679,interoperability,standard,standard,11679,precatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /op,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12082,interoperability,standard,standard,12082,macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12466,interoperability,standard,standard,12466,catedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12867,interoperability,standard,standard,12867,m macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13251,interoperability,standard,standard,13251,eprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13653,interoperability,standard,standard,13653,om macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Cal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14039,interoperability,standard,standard,14039,ecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [cla,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14443,interoperability,standard,standard,14443,cro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14754,interoperability,standard,standard,14754, as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15913,interoperability,standard,standard,15913,z4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16299,interoperability,standard,standard,16299,.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16703,interoperability,standard,standard,16703,ing 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17089,interoperability,standard,standard,17089,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17493,interoperability,standard,standard,17493,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17879,interoperability,standard,standard,17879,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18283,interoperability,standard,standard,18283,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18669,interoperability,standard,standard,18669,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19073,interoperability,standard,standard,19073,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19459,interoperability,standard,standard,19459,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19863,interoperability,standard,standard,19863,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Ca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20249,interoperability,standard,standard,20249,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provid,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20654,interoperability,standard,standard,20654, 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20965,interoperability,standard,standard,20965,as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:190,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21293,interoperability,standard,standard,21293,support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21679,interoperability,standard,standard,21679,ous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22083,interoperability,standard,standard,22083,n case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22469,interoperability,standard,standard,22469,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22873,interoperability,standard,standard,22873,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23259,interoperability,standard,standard,23259,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23663,interoperability,standard,standard,23663,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24049,interoperability,standard,standard,24049,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24453,interoperability,standard,standard,24453,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24839,interoperability,standard,standard,24839,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25243,interoperability,standard,standard,25243,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Ca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25629,interoperability,standard,standard,25629,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26034,interoperability,standard,standard,26034, 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26345,interoperability,standard,standard,26345,as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous fun,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26674,interoperability,standard,standard,26674,upport length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26985,interoperability,standard,standard,26985,rovide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:209,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27313,interoperability,standard,standard,27313,hecks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27699,interoperability,standard,standard,27699,ous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28103,interoperability,standard,standard,28103,n case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28489,interoperability,standard,standard,28489,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28893,interoperability,standard,standard,28893,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29279,interoperability,standard,standard,29279,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29683,interoperability,standard,standard,29683,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30069,interoperability,standard,standard,30069,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30473,interoperability,standard,standard,30473,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30859,interoperability,standard,standard,30859,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31263,interoperability,standard,standard,31263,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31649,interoperability,standard,standard,31649,edOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32057,interoperability,standard,standard,32057,Z4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandlin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32445,interoperability,standard,standard,32445,safeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32858,interoperability,standard,standard,32858,in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandlin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33246,interoperability,standard,standard,33246,ferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33659,interoperability,standard,standard,33659,/opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandlin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34047,interoperability,standard,standard,34047,ferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34460,interoperability,standard,standard,34460,/opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandlin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34848,interoperability,standard,standard,34848,ferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it doe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35261,interoperability,standard,standard,35261,/opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35570,interoperability,standard,standard,35570,et_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35904,interoperability,standard,standard,35904,th arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandlin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36292,interoperability,standard,standard,36292,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it doe,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36705,interoperability,standard,standard,36705,opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37014,interoperability,standard,standard,37014,et_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37348,interoperability,standard,standard,37348,th arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandli,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37736,interoperability,standard,standard,37736,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it d,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38150,interoperability,standard,standard,38150,pt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that sup,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38459,interoperability,standard,standard,38459,t_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38794,interoperability,standard,standard,38794, arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that supp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39103,interoperability,standard,standard,39103,vide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39437,interoperability,standard,standard,39437,oduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39746,interoperability,standard,standard,39746,ovide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40081,interoperability,standard,standard,40081,oduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHand,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40469,interoperability,standard,standard,40469,ctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40885,interoperability,standard,standard,40885,root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that su,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41194,interoperability,standard,standard,41194,s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41530,interoperability,standard,standard,41530,guments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41839,interoperability,standard,standard,41839,ide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42176,interoperability,standard,standard,42176,ed in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that su,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42485,interoperability,standard,standard,42485,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initiali,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42821,interoperability,standard,standard,42821,ed in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:43130,interoperability,standard,standard,43130,ide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47529,interoperability,standard,standard,47529, in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that su,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47838,interoperability,standard,standard,47838,ns/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initiali,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48174,interoperability,standard,standard,48174,/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48483,interoperability,standard,standard,48483,ide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:52902,interoperability,standard,standard,52902,iltins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHand,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53290,interoperability,standard,standard,53290,Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53706,interoperability,standard,standard,53706,oot_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54015,interoperability,standard,standard,54015,s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54352,interoperability,standard,standard,54352,uments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54661,interoperability,standard,standard,54661,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54998,interoperability,standard,standard,54998,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55307,interoperability,standard,standard,55307,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55644,interoperability,standard,standard,55644,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55953,interoperability,standard,standard,55953,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56290,interoperability,standard,standard,56290,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56599,interoperability,standard,standard,56599,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56936,interoperability,standard,standard,56936,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57245,interoperability,standard,standard,57245,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57582,interoperability,standard,standard,57582,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57891,interoperability,standard,standard,57891,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58228,interoperability,standard,standard,58228,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58537,interoperability,standard,standard,58537,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58874,interoperability,standard,standard,58874,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59183,interoperability,standard,standard,59183,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59520,interoperability,standard,standard,59520,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59829,interoperability,standard,standard,59829,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60166,interoperability,standard,standard,60166,d in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60475,interoperability,standard,standard,60475,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60806,interoperability,standard,standard,60806,roduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61190,interoperability,standard,standard,61190,gous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61591,interoperability,standard,standard,61591,in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61975,interoperability,standard,standard,61975,eprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide sec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62377,interoperability,standard,standard,62377,om macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support le,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62686,interoperability,standard,standard,62686,s such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous funct,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63014,interoperability,standard,standard,63014,that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63323,interoperability,standard,standard,63323,not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:11,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63652,interoperability,standard,standard,63652, checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Cal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64036,interoperability,standard,standard,64036,logous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64442,interoperability,standard,standard,64442,case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64753,interoperability,standard,standard,64753, as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking tru,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66067,interoperability,standard,standard,66067,aramChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 5: expanded f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66376,interoperability,standard,standard,66376,ming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 6: '?' condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 7: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 8: Taking false branch in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15009,modifiability,paramet,parameter,15009,ks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15691,modifiability,paramet,parameter,15691,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:43394,modifiability,paramet,parameter,43394,ion 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:43952,modifiability,deco,decompressOptionsPtr,43952,-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:45443,modifiability,deco,decodedSize,45443,c/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1659. 24: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1659. 25: Assuming 'decodedSize' is >= 0 in /opt/root_src/builtins/lz4/lz4frame.c:1669. 26: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1669. 27: Assuming field 'contentChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1670. 28: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1670. 29: Assuming field 'contentSize' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1672. 30: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1672. 31: Assuming field 'blockMode' is equal to LZ4F_blockLinked in /opt/root_src/builtins/lz4/lz4frame.c:1676. 32: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1676. 33: Passing null pointer value via 2nd parameter 'dstPtr' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 34: Calling 'LZ4F_updateDict' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 35: Assuming field 'dictSize' is not equal to 0 in /opt/root_src/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:46118,modifiability,paramet,parameter,46118,Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1659. 24: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1659. 25: Assuming 'decodedSize' is >= 0 in /opt/root_src/builtins/lz4/lz4frame.c:1669. 26: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1669. 27: Assuming field 'contentChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1670. 28: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1670. 29: Assuming field 'contentSize' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1672. 30: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1672. 31: Assuming field 'blockMode' is equal to LZ4F_blockLinked in /opt/root_src/builtins/lz4/lz4frame.c:1676. 32: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1676. 33: Passing null pointer value via 2nd parameter 'dstPtr' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 34: Calling 'LZ4F_updateDict' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 35: Assuming field 'dictSize' is not equal to 0 in /opt/root_src/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1305. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assumi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47298,modifiability,paramet,parameter,47298, to 0 in /opt/root_src/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1305. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48747,modifiability,paramet,parameter,48747,ion 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:49305,modifiability,deco,decompressOptionsPtr,49305,-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:50796,modifiability,deco,decodedSize,50796,c/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1659. 24: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1659. 25: Assuming 'decodedSize' is >= 0 in /opt/root_src/builtins/lz4/lz4frame.c:1669. 26: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1669. 27: Assuming field 'contentChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1670. 28: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1670. 29: Assuming field 'contentSize' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1672. 30: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1672. 31: Assuming field 'blockMode' is equal to LZ4F_blockLinked in /opt/root_src/builtins/lz4/lz4frame.c:1676. 32: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1676. 33: Passing null pointer value via 2nd parameter 'dstPtr' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 34: Calling 'LZ4F_updateDict' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 35: Assuming field 'dictSize' is not equal to 0 in /opt/root_src/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:51471,modifiability,paramet,parameter,51471,Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1659. 24: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1659. 25: Assuming 'decodedSize' is >= 0 in /opt/root_src/builtins/lz4/lz4frame.c:1669. 26: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1669. 27: Assuming field 'contentChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1670. 28: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1670. 29: Assuming field 'contentSize' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1672. 30: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1672. 31: Assuming field 'blockMode' is equal to LZ4F_blockLinked in /opt/root_src/builtins/lz4/lz4frame.c:1676. 32: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1676. 33: Passing null pointer value via 2nd parameter 'dstPtr' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 34: Calling 'LZ4F_updateDict' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 35: Assuming field 'dictSize' is not equal to 0 in /opt/root_src/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1305. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: A,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:52671,modifiability,paramet,parameter,52671,rc/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1305. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:65012,modifiability,paramet,parameter,65012,roduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:65841,modifiability,paramet,parameter,65841, checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:80407,modifiability,portab,portability,80407,s.c:296. 54: Assuming the condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:298. 55: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:298. 56: Calling 'FSE_writeNCount_generic' in /opt/root_src/builtins/zstd/compress/fse_compress.c:301. 57: Assuming 'symbol' is < 'alphabetSize' in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 58: Left side of '&&' is true in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 59: Loop condition is true. Entering loop body in /opt/root_src/builtins/zstd/compress/fse_compress.c:223. 60: 'previousIs0' is 0 in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 61: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:224. 62: Assigned value is garbage or undefined in /opt/root_src/builtins/zstd/compress/fse_compress.c:254. /opt/root_src/builtins/zstd/dictBuilder/cover.c:921:22: warning: Call to 'malloc' has an allocation size of 0 bytes [clang-analyzer-optin.portability.UnixAPI]. 1: Assuming the condition is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1118. 2: '?' condition is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1118. 3: Assuming field 'd' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1119. 4: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1119. 5: Field 'd' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1120. 6: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1120. 7: Assuming field 'k' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1121. 8: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1121. 9: Field 'k' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1122. 10: '?' condition is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1122. 11: Assuming field 'steps' is not equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1123. 12: '?,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:45602,performance,content,contentChecksumFlag,45602,4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1659. 24: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1659. 25: Assuming 'decodedSize' is >= 0 in /opt/root_src/builtins/lz4/lz4frame.c:1669. 26: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1669. 27: Assuming field 'contentChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1670. 28: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1670. 29: Assuming field 'contentSize' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1672. 30: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1672. 31: Assuming field 'blockMode' is equal to LZ4F_blockLinked in /opt/root_src/builtins/lz4/lz4frame.c:1676. 32: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1676. 33: Passing null pointer value via 2nd parameter 'dstPtr' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 34: Calling 'LZ4F_updateDict' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 35: Assuming field 'dictSize' is not equal to 0 in /opt/root_src/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1305. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:45766,performance,content,contentSize,45766,rc/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1659. 24: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1659. 25: Assuming 'decodedSize' is >= 0 in /opt/root_src/builtins/lz4/lz4frame.c:1669. 26: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1669. 27: Assuming field 'contentChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1670. 28: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1670. 29: Assuming field 'contentSize' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1672. 30: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1672. 31: Assuming field 'blockMode' is equal to LZ4F_blockLinked in /opt/root_src/builtins/lz4/lz4frame.c:1676. 32: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1676. 33: Passing null pointer value via 2nd parameter 'dstPtr' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 34: Calling 'LZ4F_updateDict' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 35: Assuming field 'dictSize' is not equal to 0 in /opt/root_src/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1305. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:50955,performance,content,contentChecksumFlag,50955,4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1659. 24: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1659. 25: Assuming 'decodedSize' is >= 0 in /opt/root_src/builtins/lz4/lz4frame.c:1669. 26: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1669. 27: Assuming field 'contentChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1670. 28: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1670. 29: Assuming field 'contentSize' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1672. 30: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1672. 31: Assuming field 'blockMode' is equal to LZ4F_blockLinked in /opt/root_src/builtins/lz4/lz4frame.c:1676. 32: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1676. 33: Passing null pointer value via 2nd parameter 'dstPtr' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 34: Calling 'LZ4F_updateDict' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 35: Assuming field 'dictSize' is not equal to 0 in /opt/root_src/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1305. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:51119,performance,content,contentSize,51119,rc/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1659. 24: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1659. 25: Assuming 'decodedSize' is >= 0 in /opt/root_src/builtins/lz4/lz4frame.c:1669. 26: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1669. 27: Assuming field 'contentChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1670. 28: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1670. 29: Assuming field 'contentSize' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1672. 30: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1672. 31: Assuming field 'blockMode' is equal to LZ4F_blockLinked in /opt/root_src/builtins/lz4/lz4frame.c:1676. 32: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1676. 33: Passing null pointer value via 2nd parameter 'dstPtr' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 34: Calling 'LZ4F_updateDict' in /opt/root_src/builtins/lz4/lz4frame.c:1677. 35: Assuming field 'dictSize' is not equal to 0 in /opt/root_src/builtins/lz4/lz4frame.c:1300. 36: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1300. 37: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1305. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:224,reliability,doe,does,224,"[builtins] Clang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:610,reliability,doe,does,610,"[builtins] Clang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1011,reliability,doe,does,1011,"ang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1397,reliability,doe,does,1397,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1798,reliability,doe,does,1798,in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2184,reliability,doe,does,2184,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2586,reliability,doe,does,2586,n /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2972,reliability,doe,does,2972,n case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3374,reliability,doe,does,3374, /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3760,reliability,doe,does,3760,n case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4161,reliability,doe,does,4161,n /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4545,reliability,doe,does,4545,' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4944,reliability,doe,does,4944,C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5330,reliability,doe,does,5330,_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5731,reliability,doe,does,5731,1 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6117,reliability,doe,does,6117,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6518,reliability,doe,does,6518,in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6904,reliability,doe,does,6904,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7305,reliability,doe,does,7305,in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7691,reliability,doe,does,7691,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8092,reliability,doe,does,8092,in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8478,reliability,doe,does,8478,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8879,reliability,doe,does,8879,in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9265,reliability,doe,does,9265,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9666,reliability,doe,does,9666,in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10052,reliability,doe,does,10052,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10454,reliability,doe,does,10454,n /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.ins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10838,reliability,doe,does,10838, in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11238,reliability,doe,does,11238,1 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11624,reliability,doe,does,11624,s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12027,reliability,doe,does,12027,n /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12411,reliability,doe,does,12411,in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12812,reliability,doe,does,12812,in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13196,reliability,doe,does,13196,_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13598,reliability,doe,does,13598, in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-secur,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13984,reliability,doe,does,13984, in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14388,reliability,doe,does,14388,opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming ',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14699,reliability,doe,does,14699,support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15858,reliability,doe,does,15858,as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16244,reliability,doe,does,16244, is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16648,reliability,doe,does,16648,z4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17034,reliability,doe,does,17034,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17438,reliability,doe,does,17438,t/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17824,reliability,doe,does,17824,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18228,reliability,doe,does,18228,t/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18614,reliability,doe,does,18614,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19018,reliability,doe,does,19018,t/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19404,reliability,doe,does,19404,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19808,reliability,doe,does,19808,t/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20194,reliability,doe,does,20194,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Ca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20599,reliability,doe,does,20599,/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'mem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20910,reliability,doe,does,20910,upport length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21238,reliability,doe,does,21238, the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21624,reliability,doe,does,21624,hecks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22028,reliability,doe,does,22028,guments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22414,reliability,doe,does,22414,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22818,reliability,doe,does,22818,t/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23204,reliability,doe,does,23204,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23608,reliability,doe,does,23608,t/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23994,reliability,doe,does,23994,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24398,reliability,doe,does,24398,t/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24784,reliability,doe,does,24784,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25188,reliability,doe,does,25188,t/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25574,reliability,doe,does,25574,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Ca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25979,reliability,doe,does,25979,/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26290,reliability,doe,does,26290,upport length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26619,reliability,doe,does,26619,the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'mem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26930,reliability,doe,does,26930,: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27258,reliability,doe,does,27258,n 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27644,reliability,doe,does,27644,hecks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28048,reliability,doe,does,28048,guments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28434,reliability,doe,does,28434,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28838,reliability,doe,does,28838,t/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29224,reliability,doe,does,29224,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29628,reliability,doe,does,29628,t/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30014,reliability,doe,does,30014,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30418,reliability,doe,does,30418,t/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-securi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30804,reliability,doe,does,30804,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31208,reliability,doe,does,31208,t/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31594,reliability,doe,does,31594,case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32002,reliability,doe,does,32002,ot_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32390,reliability,doe,does,32390,f C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32803,reliability,doe,does,32803,tins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33191,reliability,doe,does,33191,clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33604,reliability,doe,does,33604,lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33992,reliability,doe,does,33992,clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34405,reliability,doe,does,34405,lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34793,reliability,doe,does,34793,clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35206,reliability,doe,does,35206,lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35515,reliability,doe,does,35515,ength arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35849,reliability,doe,does,35849,ndard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36237,reliability,doe,does,36237,introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36650,reliability,doe,does,36650,es boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36959,reliability,doe,does,36959,ength arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37293,reliability,doe,does,37293,ndard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-ana,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37681,reliability,doe,does,37681,introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38095,reliability,doe,does,38095,s boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38404,reliability,doe,does,38404,ngth arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38739,reliability,doe,does,38739,ard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39048,reliability,doe,does,39048, Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide securit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39382,reliability,doe,does,39382,' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to functi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39691,reliability,doe,does,39691,: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40026,reliability,doe,does,40026,' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40414,reliability,doe,does,40414,ntroduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:13,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40830,reliability,doe,does,40830,oundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41139,reliability,doe,does,41139,th arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide sec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41475,reliability,doe,does,41475,. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41784,reliability,doe,does,41784,Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide sec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42121,reliability,doe,does,42121, insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42430,reliability,doe,does,42430,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42766,reliability,doe,does,42766, insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:43075,reliability,doe,does,43075,Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47474,reliability,doe,does,47474,/lz4/lz4frame.c:1305. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47783,reliability,doe,does,47783,rame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48119,reliability,doe,does,48119,ming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48428,reliability,doe,does,48428,Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:52847,reliability,doe,does,52847,. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-a,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53235,reliability,doe,does,53235,ranch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:14,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53651,reliability,doe,does,53651,ter passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53960,reliability,doe,does,53960,th arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54297,reliability,doe,does,54297, Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54606,reliability,doe,does,54606,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54943,reliability,doe,does,54943,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55252,reliability,doe,does,55252,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55589,reliability,doe,does,55589,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55898,reliability,doe,does,55898,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56235,reliability,doe,does,56235,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56544,reliability,doe,does,56544,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56881,reliability,doe,does,56881,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57190,reliability,doe,does,57190,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57527,reliability,doe,does,57527,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57836,reliability,doe,does,57836,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58173,reliability,doe,does,58173,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58482,reliability,doe,does,58482,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58819,reliability,doe,does,58819,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59128,reliability,doe,does,59128,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide se,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59465,reliability,doe,does,59465,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59774,reliability,doe,does,59774,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60111,reliability,doe,does,60111,insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'mems,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60420,reliability,doe,does,60420,all to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60751,reliability,doe,does,60751,y' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61135,reliability,doe,does,61135,checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61536,reliability,doe,does,61536,arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61920,reliability,doe,does,61920,_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62322,reliability,doe,does,62322, in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62631,reliability,doe,does,62631, that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks int,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62959,reliability,doe,does,62959,ed in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63268,reliability,doe,does,63268,arning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63597,reliability,doe,does,63597,tion 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-secur,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63981,reliability,doe,does,63981,y checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64387,reliability,doe,does,64387,uments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dic,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64698,reliability,doe,does,64698,support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66012,reliability,doe,does,66012,rameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66321,reliability,doe,does,66321,ranch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 6: '?' condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 7: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15390,safety,safe,safeBuffer,15390,t provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:44346,safety,input,inputLeft,44346,349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:49699,safety,input,inputLeft,49699,358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:65539,safety,safe,safeBuffer,65539,uch as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:241,security,secur,security,241,"[builtins] Clang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:430,security,secur,security,430,"[builtins] Clang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:627,security,secur,security,627,"[builtins] Clang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1028,security,secur,security,1028,"ings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depreca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1217,security,secur,security,1217,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1414,security,secur,security,1414,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1815,security,secur,security,1815,iltins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Deprec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2004,security,secur,security,2004,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks int,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2201,security,secur,security,2201,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2603,security,secur,security,2603,ltins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Deprec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2792,security,secur,security,2792,t does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks int,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2989,security,secur,security,2989,g-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3391,security,secur,security,3391,tins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.Depreca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3580,security,secur,security,3580,t does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3777,security,secur,security,3777,g-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4178,security,secur,security,4178,ltins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedO,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4367,security,secur,security,4367,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4562,security,secur,security,4562,lang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: ex,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4961,security,secur,security,4961,c/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depreca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5150,security,secur,security,5150, as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5347,security,secur,security,5347,[clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5748,security,secur,security,5748,builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depreca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5937,security,secur,security,5937,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6134,security,secur,security,6134,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6535,security,secur,security,6535,iltins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depreca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6724,security,secur,security,6724,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6921,security,secur,security,6921,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7322,security,secur,security,7322,iltins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depreca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7511,security,secur,security,7511,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7708,security,secur,security,7708,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8109,security,secur,security,8109,iltins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depreca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8298,security,secur,security,8298,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8495,security,secur,security,8495,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8896,security,secur,security,8896,iltins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depreca,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9085,security,secur,security,9085,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9282,security,secur,security,9282,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9683,security,secur,security,9683,iltins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.Deprec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9872,security,secur,security,9872,it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10069,security,secur,security,10069,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10471,security,secur,security,10471,ltins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Deprecated,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10660,security,secur,security,10660,t does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introdu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10855,security,secur,security,10855,ang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11255,security,secur,security,11255,builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.Depre,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11444,security,secur,security,11444,as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks intr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11641,security,secur,security,11641,clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12044,security,secur,security,12044,ltins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.Deprecate,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12233,security,secur,security,12233, does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12428,security,secur,security,12428,ng-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12829,security,secur,security,12829,iltins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Deprecat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13018,security,secur,security,13018,s it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13213,security,secur,security,13213,[clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13615,security,secur,security,13615,uiltins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.Dep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13804,security,secur,security,13804, it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14001,security,secur,security,14001,ang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14405,security,secur,security,14405,ns/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equa,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14595,security,secur,security,14595,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14716,security,secur,security,14716,ments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull',MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15875,security,secur,security,15875,ase of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16064,security,secur,security,16064,aramChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16261,security,secur,security,16261,ize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16665,security,secur,security,16665,pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16854,security,secur,security,16854,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17051,security,secur,security,17051,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17455,security,secur,security,17455,/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17644,security,secur,security,17644,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17841,security,secur,security,17841,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18245,security,secur,security,18245,/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18434,security,secur,security,18434,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18631,security,secur,security,18631,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19035,security,secur,security,19035,/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19224,security,secur,security,19224,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19421,security,secur,security,19421,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19825,security,secur,security,19825,/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.De,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20014,security,secur,security,20014,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20211,security,secur,security,20211,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'mem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20616,security,secur,security,20616,lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20806,security,secur,security,20806,es not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20927,security,secur,security,20927,ents or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21255,security,secur,security,21255,Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21444,security,secur,security,21444, 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21641,security,secur,security,21641, the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22045,security,secur,security,22045, boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22234,security,secur,security,22234,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22431,security,secur,security,22431,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22835,security,secur,security,22835,/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23024,security,secur,security,23024,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23221,security,secur,security,23221,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23625,security,secur,security,23625,/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23814,security,secur,security,23814,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24011,security,secur,security,24011,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24415,security,secur,security,24415,/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24604,security,secur,security,24604,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24801,security,secur,security,24801,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25205,security,secur,security,25205,/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.De,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25394,security,secur,security,25394,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25591,security,secur,security,25591,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'mem,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25996,security,secur,security,25996,lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Repla,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26186,security,secur,security,26186,es not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26307,security,secur,security,26307,ents or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26636,security,secur,security,26636,eplace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26826,security,secur,security,26826,LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26947,security,secur,security,26947,'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27275,security,secur,security,27275,cure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27464,security,secur,security,27464, case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27661,security,secur,security,27661, the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28065,security,secur,security,28065, boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28254,security,secur,security,28254,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28451,security,secur,security,28451,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28855,security,secur,security,28855,/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29044,security,secur,security,29044,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29241,security,secur,security,29241,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29645,security,secur,security,29645,/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29834,security,secur,security,29834,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30031,security,secur,security,30031,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30435,security,secur,security,30435,/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Depr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30624,security,secur,security,30624,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30821,security,secur,security,30821,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31225,security,secur,security,31225,/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31414,security,secur,security,31414,does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security ch,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31611,security,secur,security,31611,analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4fr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32019,security,secur,security,32019,/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32208,security,secur,security,32208, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32407,security,secur,security,32407,er-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32820,security,secur,security,32820,. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33009,security,secur,security,33009,ovide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33208,security,secur,security,33208,rity.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33621,security,secur,security,33621, 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33810,security,secur,security,33810,ovide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide secu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34009,security,secur,security,34009,rity.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34422,security,secur,security,34422, 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34611,security,secur,security,34611,ovide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34810,security,secur,security,34810,rity.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35223,security,secur,security,35223, 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35412,security,secur,security,35412,ovide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35532,security,secur,security,35532,provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35866,security,secur,security,35866, analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36055,security,secur,security,36055,IT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36254,security,secur,security,36254,11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to f,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36667,security,secur,security,36667,such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36856,security,secur,security,36856,ovide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36976,security,secur,security,36976,provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37310,security,secur,security,37310, analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37499,security,secur,security,37499,IT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions t,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37698,security,secur,security,37698,11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38112,security,secur,security,38112,uch as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Rep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38301,security,secur,security,38301,vide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38421,security,secur,security,38421,rovides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38756,security,secur,security,38756,nalogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Repl,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38945,security,secur,security,38945,' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39065,security,secur,security,39065,memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39399,security,secur,security,39399, does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39588,security,secur,security,39588,1 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39708,security,secur,security,39708,'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40043,security,secur,security,40043, does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40232,security,secur,security,40232,1 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40431,security,secur,security,40431,1 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40847,security,secur,security,40847, as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Re,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41036,security,secur,security,41036,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41156,security,secur,security,41156,vides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41492,security,secur,security,41492,ogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41681,security,secur,security,41681,in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41801,security,secur,security,41801,emcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introd,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42138,security,secur,security,42138,s not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Re,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42327,security,secur,security,42327, /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42447,security,secur,security,42447,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNul,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42783,security,secur,security,42783,s not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:13,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42972,security,secur,security,42972, /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:43092,security,secur,security,43092,emcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:44209,security,Control,Control,44209,s boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47491,security,secur,security,47491,5. 38: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Re,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47680,security,secur,security,47680,t_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47800,security,secur,security,47800,ithinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNul,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48136,security,secur,security,48136,is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:13,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48325,security,secur,security,48325,n /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48445,security,secur,security,48445,emcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/l,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:49562,security,Control,Control,49562,s boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:52864,security,secur,security,52864,condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1311. 39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53053,security,secur,security,53053,z4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53252,security,secur,security,53252,src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Cal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53668,security,secur,security,53668,arameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53857,security,secur,security,53857,de security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53977,security,secur,security,53977,vides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54314,security,secur,security,54314,gous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54503,security,secur,security,54503,n /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54623,security,secur,security,54623,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54960,security,secur,security,54960, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55149,security,secur,security,55149,/opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55269,security,secur,security,55269,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55606,security,secur,security,55606, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55795,security,secur,security,55795,/opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55915,security,secur,security,55915,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56252,security,secur,security,56252, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56441,security,secur,security,56441,/opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56561,security,secur,security,56561,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56898,security,secur,security,56898, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57087,security,secur,security,57087,/opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57207,security,secur,security,57207,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57544,security,secur,security,57544, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57733,security,secur,security,57733,/opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57853,security,secur,security,57853,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58190,security,secur,security,58190, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58379,security,secur,security,58379,/opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58499,security,secur,security,58499,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58836,security,secur,security,58836, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59025,security,secur,security,59025,/opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59145,security,secur,security,59145,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks intro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59482,security,secur,security,59482, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. R,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59671,security,secur,security,59671,/opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59791,security,secur,security,59791,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60128,security,secur,security,60128, not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60317,security,secur,security,60317,/opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60437,security,secur,security,60437,mcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60768,security,secur,security,60768,t does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.Deprecate,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60957,security,secur,security,60957,11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduc,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61152,security,secur,security,61152,n the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: e,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61553,security,secur,security,61553,es boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.Deprecat,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61742,security,secur,security,61742,s it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support leng,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61937,security,secur,security,61937,[clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62339,security,secur,security,62339,uiltins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace wi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62528,security,secur,security,62528, it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4h,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62648,security,secur,security,62648,h arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62976,security,secur,security,62976,ard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63165,security,secur,security,63165,macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63285,security,secur,security,63285,ction 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63614,security,secur,security,63614,secure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.Dep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63803,security,secur,security,63803,n case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that suppor,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63998,security,secur,security,63998, in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer pass,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64404,security,secur,security,64404,boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64594,security,secur,security,64594,oes not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64715,security,secur,security,64715,ments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/bui,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66029,security,secur,security,66029,nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/comp,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66218,security,secur,security,66218,.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 6: '?' condition is false in /opt/root_src/builtins/zstd/compre,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66338,security,secur,security,66338,src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 6: '?' condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 7: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:3,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:87267,security,Control,Control,87267,der/cover.c:894. 66: Returning from 'COVER_best_start' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1215. 67: 'pool' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1216. 68: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1216. 69: Calling 'COVER_tryParameters' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1219. 70: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1077. 71: 'g_displayLevel' is < 1 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1078. 72: expanded from macro 'DISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:63. 73: expanded from macro 'LOCALDISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:59. 74: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1078. 75: expanded from macro 'DISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:63. 76: expanded from macro 'LOCALDISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:59. 77: Control jumps to line 1101 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1079. 78: Calling 'COVER_best_finish' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 79: 'best' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 80: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 81: 'compressedSize' is >= field 'compressedSize' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 82: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 83: 'liveJobs' is equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:938. 84: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:938. 85: Returning from 'COVER_best_finish' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 86: Assuming 'freqs' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1106. 87: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1106. 88: Returning from 'COVER_tryParameters' in /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:91309,security,Control,Control,91309,ming 'dict' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1081. 112: Left side of '||' is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1081. 113: Assuming 'freqs' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1081. 114: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1081. 115: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1095. 116: Assuming 'g_displayLevel' is < 1 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1096. 117: expanded from macro 'DISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:63. 118: expanded from macro 'LOCALDISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:59. 119: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1096. 120: expanded from macro 'DISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:63. 121: expanded from macro 'LOCALDISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:59. 122: Control jumps to line 1101 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1097. 123: The value 0 is assigned to 'selection.dictSize' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 124: Calling 'COVER_best_finish' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 125: 'dictSize' initialized to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:905. 126: 'best' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 127: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 128: Assuming 'compressedSize' is < field 'compressedSize' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 129: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 130: Assuming field 'dict' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:917. 131: Left side of '||' is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:917. 132: Field 'dict' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:918. 133: Taking fal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:44209,testability,Control,Control,44209,s boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:49562,testability,Control,Control,49562,s boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:87267,testability,Control,Control,87267,der/cover.c:894. 66: Returning from 'COVER_best_start' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1215. 67: 'pool' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1216. 68: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1216. 69: Calling 'COVER_tryParameters' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1219. 70: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1077. 71: 'g_displayLevel' is < 1 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1078. 72: expanded from macro 'DISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:63. 73: expanded from macro 'LOCALDISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:59. 74: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1078. 75: expanded from macro 'DISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:63. 76: expanded from macro 'LOCALDISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:59. 77: Control jumps to line 1101 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1079. 78: Calling 'COVER_best_finish' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 79: 'best' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 80: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 81: 'compressedSize' is >= field 'compressedSize' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 82: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 83: 'liveJobs' is equal to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:938. 84: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:938. 85: Returning from 'COVER_best_finish' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 86: Assuming 'freqs' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1106. 87: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1106. 88: Returning from 'COVER_tryParameters' in /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:91309,testability,Control,Control,91309,ming 'dict' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1081. 112: Left side of '||' is false in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1081. 113: Assuming 'freqs' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1081. 114: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1081. 115: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1095. 116: Assuming 'g_displayLevel' is < 1 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1096. 117: expanded from macro 'DISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:63. 118: expanded from macro 'LOCALDISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:59. 119: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1096. 120: expanded from macro 'DISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:63. 121: expanded from macro 'LOCALDISPLAYLEVEL' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:59. 122: Control jumps to line 1101 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1097. 123: The value 0 is assigned to 'selection.dictSize' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 124: Calling 'COVER_best_finish' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:1102. 125: 'dictSize' initialized to 0 in /opt/root_src/builtins/zstd/dictBuilder/cover.c:905. 126: 'best' is non-null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 127: Taking false branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:906. 128: Assuming 'compressedSize' is < field 'compressedSize' in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 129: Taking true branch in /opt/root_src/builtins/zstd/dictBuilder/cover.c:915. 130: Assuming field 'dict' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:917. 131: Left side of '||' is true in /opt/root_src/builtins/zstd/dictBuilder/cover.c:917. 132: Field 'dict' is null in /opt/root_src/builtins/zstd/dictBuilder/cover.c:918. 133: Taking fal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:327,usability,support,support,327,"[builtins] Clang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:713,usability,support,support,713,"[builtins] Clang-tidy Clazy Warnings; malloc, garbage value and boundary warnings:. (ROOT master of today, with xrootd off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1114,usability,support,support,1114, off). ```. /opt/root_src/builtins/lz4/lz4.c:414:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1500,usability,support,support,1500,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:414. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:1901,usability,support,support,1901,4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:447:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2287,usability,support,support,2287,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:447. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:2689,usability,support,support,2689,/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:451:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/buil,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3075,usability,support,support,3075,cro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:451. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_s,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3477,usability,support,support,3477,lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:3863,usability,support,support,3863,cro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4264,usability,support,support,4264,/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:469:30: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:4648,usability,support,support,4648, macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:469. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5047,usability,support,support,5047,s/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:484:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5433,usability,support,support,5433,om macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:484. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:5834,usability,support,support,5834,4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:487:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6220,usability,support,support,6220,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:487. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:6621,usability,support,support,6621,4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:488:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7007,usability,support,support,7007,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:488. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7408,usability,support,support,7408,4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:489:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:7794,usability,support,support,7794,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:489. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8195,usability,support,support,8195,4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:492:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8581,usability,support,support,8581,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:492. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:8982,usability,support,support,8982,4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:493:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9368,usability,support,support,9368,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:493. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:9769,usability,support,support,9769,4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:500:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10155,usability,support,support,10155,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:500. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10557,usability,support,support,10557,/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:503:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:10941,usability,support,support,10941,macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:503. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_sr,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11341,usability,support,support,11341,lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:822:13: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/built,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:11727,usability,support,support,11727,m macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:822. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12130,usability,support,support,12130,z4.c:208. /opt/root_src/builtins/lz4/lz4.c:1228:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12514,usability,support,support,12514,acro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1228. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:12915,usability,support,support,12915,z4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1449:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builti,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13299,usability,support,support,13299,om macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1449. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:13701,usability,support,support,13701,4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1458:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does n,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14087,usability,support,support,14087,macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1458. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assumi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14491,usability,support,support,14491,.c:208. /opt/root_src/builtins/lz4/lz4.c:1621:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:14802,usability,support,support,14802,curity.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1621. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: w,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:15961,usability,support,support,15961,1678:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4.c:1673. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1673. 3: Assuming 'dictSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4.c:1674. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16347,usability,support,support,16347,/builtins/lz4/lz4.c:1674. 5: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4.c:1676. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1676. 7: Assuming 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4.c:1677. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4.c:1677. 9: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4.c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:16751,usability,support,support,16751,c:1678. /opt/root_src/builtins/lz4/lz4.c:1833:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17137,usability,support,support,17137,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1833. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17541,usability,support,support,17541,.c:320. /opt/root_src/builtins/lz4/lz4.c:1837:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:17927,usability,support,support,17927,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1837. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18331,usability,support,support,18331,.c:320. /opt/root_src/builtins/lz4/lz4.c:1838:39: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:18717,usability,support,support,18717,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1838. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19121,usability,support,support,19121,.c:320. /opt/root_src/builtins/lz4/lz4.c:1874:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19507,usability,support,support,19507,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1874. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:19911,usability,support,support,19911,.c:320. /opt/root_src/builtins/lz4/lz4.c:1875:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20297,usability,support,support,20297,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1875. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:20702,usability,support,support,20702,c:320. /opt/root_src/builtins/lz4/lz4.c:1876:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21013,usability,support,support,21013,urity.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21341,usability,support,support,21341,ecks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1876. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1894:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:21727,usability,support,support,21727,rovides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22131,usability,support,support,22131,c:1894. /opt/root_src/builtins/lz4/lz4.c:1900:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22517,usability,support,support,22517,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1900. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:22921,usability,support,support,22921,.c:320. /opt/root_src/builtins/lz4/lz4.c:1907:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23307,usability,support,support,23307,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1907. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:23711,usability,support,support,23711,.c:320. /opt/root_src/builtins/lz4/lz4.c:1948:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24097,usability,support,support,24097,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1948. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24501,usability,support,support,24501,.c:320. /opt/root_src/builtins/lz4/lz4.c:1963:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:24887,usability,support,support,24887,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1963. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25291,usability,support,support,25291,.c:320. /opt/root_src/builtins/lz4/lz4.c:1964:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:25677,usability,support,support,25677,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1964. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standar,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26082,usability,support,support,26082,c:320. /opt/root_src/builtins/lz4/lz4.c:1965:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26393,usability,support,support,26393,urity.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:26722,usability,support,support,26722,cks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:1965. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2038:17: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with anal,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27033,usability,support,support,27033,ndard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is inse,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27361,usability,support,support,27361,th analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2038. /opt/root_src/builtins/lz4/lz4.c:2083:21: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:27747,usability,support,support,27747,rovides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28151,usability,support,support,28151,c:2083. /opt/root_src/builtins/lz4/lz4.c:2089:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28537,usability,support,support,28537,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2089. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:28941,usability,support,support,28941,.c:320. /opt/root_src/builtins/lz4/lz4.c:2096:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29327,usability,support,support,29327,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2096. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:29731,usability,support,support,29731,.c:320. /opt/root_src/builtins/lz4/lz4.c:2115:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30117,usability,support,support,30117,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2115. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30521,usability,support,support,30521,.c:320. /opt/root_src/builtins/lz4/lz4.c:2129:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/bu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:30907,usability,support,support,30907,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2129. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/roo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31311,usability,support,support,31311,.c:320. /opt/root_src/builtins/lz4/lz4.c:2132:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:31697,usability,support,support,31697,o 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2132. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32105,usability,support,support,32105,20. /opt/root_src/builtins/lz4/lz4.c:2147:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32493,usability,support,support,32493,_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. 2: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4.c:2147. 3: expanded from macro 'LZ4_memcpy' in /opt/root_src/builtins/lz4/lz4.c:320. /opt/root_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4fra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:32906,usability,support,support,32906,ot_src/builtins/lz4/lz4frame.c:357:10: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33294,usability,support,support,33294,in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:357. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4fra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:33707,usability,support,support,33707,oot_src/builtins/lz4/lz4frame.c:388:9: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/ro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34095,usability,support,support,34095,in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:388. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4fra,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34508,usability,support,support,34508,oot_src/builtins/lz4/lz4frame.c:397:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:34896,usability,support,support,34896,in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:397. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35309,usability,support,support,35309,oot_src/builtins/lz4/lz4frame.c:444:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35618,usability,support,support,35618,secureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:35952,usability,support,support,35952, 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:444. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:507:5: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36340,usability,support,support,36340,s boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:507. /opt/root_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:36753,usability,support,support,36753,oot_src/builtins/lz4/lz4frame.c:609:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace wit,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37062,usability,support,support,37062,secureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to functio,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37396,usability,support,support,37396, 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:609. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:37784,usability,support,support,37784,s boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:754. /opt/root_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in th,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38198,usability,support,support,38198,ot_src/builtins/lz4/lz4frame.c:844:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary check,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38507,usability,support,support,38507,ecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:38842,usability,support,support,38842,memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:844. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:852:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39151,usability,support,support,39151,ard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments o,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39485,usability,support,support,39485,us functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:852. /opt/root_src/builtins/lz4/lz4frame.c:859:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace wi,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:39794,usability,support,support,39794,dard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to func,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40129,usability,support,support,40129,us functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:859. /opt/root_src/builtins/lz4/lz4frame.c:918:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40517,usability,support,support,40517, boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:918. /opt/root_src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:40933,usability,support,support,40933,src/builtins/lz4/lz4frame.c:1122:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41242,usability,support,support,41242,ureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argumen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41578,usability,support,support,41578,set_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1122. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1166:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:41887,usability,support,support,41887,rd. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argumen,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42224,usability,support,support,42224,unctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1166. /opt/root_src/builtins/lz4/lz4frame.c:1336:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42533,usability,support,support,42533,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:42869,usability,support,support,42869,unctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1336. /opt/root_src/builtins/lz4/lz4frame.c:1346:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:43178,usability,support,support,43178,rd. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1346. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:44346,usability,input,inputLeft,44346,349:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47577,usability,support,support,47577,39: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary chec,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:47886,usability,support,support,47886,in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1344. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48222,usability,support,support,48222,t/root_src/builtins/lz4/lz4frame.c:1344. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1349. /opt/root_src/builtins/lz4/lz4frame.c:1357:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:48531,usability,support,support,48531,rd. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1357. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtin,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:49699,usability,input,inputLeft,49699,358:9: warning: Null pointer passed to 2nd parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: 'dstStart' initialized here in /opt/root_src/builtins/lz4/lz4frame.c:1393. 2: Assuming 'dstStart' is null in /opt/root_src/builtins/lz4/lz4frame.c:1394. 3: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1394. 4: 'dstPtr' initialized to a null pointer value in /opt/root_src/builtins/lz4/lz4frame.c:1395. 5: 'dstBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1403. 6: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1403. 7: Assuming 'decompressOptionsPtr' is not equal to NULL in /opt/root_src/builtins/lz4/lz4frame.c:1405. 8: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1405. 9: Loop condition is true. Entering loop body in /opt/root_src/builtins/lz4/lz4frame.c:1412. 10: Control jumps to 'case dstage_storeCBlock:' at line 1622 in /opt/root_src/builtins/lz4/lz4frame.c:1414. 11: Assuming 'wantedData' is >= 'inputLeft' in /opt/root_src/builtins/lz4/lz4frame.c:1625. 12: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 13: '?' condition is false in /opt/root_src/builtins/lz4/lz4frame.c:1625. 14: expanded from macro 'MIN' in /opt/root_src/builtins/lz4/lz4frame.c:292. 15: Assuming field 'tmpInSize' is >= field 'tmpInTarget' in /opt/root_src/builtins/lz4/lz4frame.c:1629. 16: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1629. 17: Assuming field 'blockChecksumFlag' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1640. 18: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1640. 19: Assuming the condition is true in /opt/root_src/builtins/lz4/lz4frame.c:1654. 20: Taking true branch in /opt/root_src/builtins/lz4/lz4frame.c:1654. 21: Assuming 'dict' is non-null in /opt/root_src/builtins/lz4/lz4frame.c:1659. 22: Left side of '&&' is true in /opt/root_src/builtins/lz4/lz4frame.c:1659. 23: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4frame.c,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:52950,usability,support,support,52950,nch in /opt/root_src/builtins/lz4/lz4frame.c:1311. 40: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1322. 41: Left side of '&&' is false in /opt/root_src/builtins/lz4/lz4frame.c:1322. 42: 'withinTmp' is 0 in /opt/root_src/builtins/lz4/lz4frame.c:1329. 43: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1329. 44: Assuming field 'dict' is not equal to field 'tmpOutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53338,usability,support,support,53338,OutBuffer' in /opt/root_src/builtins/lz4/lz4frame.c:1343. 45: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1343. 46: Assuming 'preserveSize' is <= field 'dictSize' in /opt/root_src/builtins/lz4/lz4frame.c:1356. 47: Taking false branch in /opt/root_src/builtins/lz4/lz4frame.c:1356. 48: Null pointer passed to 2nd parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4frame.c:1358. /opt/root_src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced i,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:53754,usability,support,support,53754,src/builtins/lz4/lz4frame.c:1404:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54063,usability,support,support,54063,ureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54400,usability,support,support,54400,et_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1404. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4frame.c:83. /opt/root_src/builtins/lz4/lz4frame.c:1434:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:54709,usability,support,support,54709,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55046,usability,support,support,55046,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1434. /opt/root_src/builtins/lz4/lz4frame.c:1490:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55355,usability,support,support,55355,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:55692,usability,support,support,55692,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1490. /opt/root_src/builtins/lz4/lz4frame.c:1542:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56001,usability,support,support,56001,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56338,usability,support,support,56338,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1542. /opt/root_src/builtins/lz4/lz4frame.c:1584:21: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56647,usability,support,support,56647,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:56984,usability,support,support,56984,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1584. /opt/root_src/builtins/lz4/lz4frame.c:1626:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57293,usability,support,support,57293,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57630,usability,support,support,57630,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1626. /opt/root_src/builtins/lz4/lz4frame.c:1690:25: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:57939,usability,support,support,57939,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58276,usability,support,support,58276,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1690. /opt/root_src/builtins/lz4/lz4frame.c:1728:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58585,usability,support,support,58585,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:58922,usability,support,support,58922,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1728. /opt/root_src/builtins/lz4/lz4frame.c:1768:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59231,usability,support,support,59231,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length argume,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59568,usability,support,support,59568,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1768. /opt/root_src/builtins/lz4/lz4frame.c:1810:17: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary che,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:59877,usability,support,support,59877,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60214,usability,support,support,60214,nctions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1810. /opt/root_src/builtins/lz4/lz4frame.c:1860:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60523,usability,support,support,60523,d. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecu,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:60854,usability,support,support,60854,ous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1860. /opt/root_src/builtins/lz4/lz4frame.c:1868:13: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61238,usability,support,support,61238,provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:61639,usability,support,support,61639,frame.c:1868. /opt/root_src/builtins/lz4/lz4hc.c:96:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not pro,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62023,usability,support,support,62023,om macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:96. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Rep,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62425,usability,support,support,62425,4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:97:5: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:62734,usability,support,support,62734,zer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides b,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63062,usability,support,support,63062,ry checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:97. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:754:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogo,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63371,usability,support,support,63371,1 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is ins,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:63700,usability,support,support,63700,with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:754. /opt/root_src/builtins/lz4/lz4hc.c:893:9: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does n,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64084,usability,support,support,64084,r provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64490,usability,support,support,64490,c:893. /opt/root_src/builtins/lz4/lz4hc.c:1015:7: warning: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:64801,usability,support,support,64801,curity.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. 2: Call to function 'memset' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memset_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1015. 3: expanded from macro 'MEM_INIT' in /opt/root_src/builtins/lz4/lz4.c:208. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memmove' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memmove_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1169:9: warning: Null pointer passed to 1st parameter expecting 'nonnull' [clang-analyzer-core.NonNullParamChecker]. 1: Assuming the condition is false in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66115,usability,support,support,66115, in /opt/root_src/builtins/lz4/lz4hc.c:1164. 2: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1164. 3: Assuming 'dictSize' is >= 4 in /opt/root_src/builtins/lz4/lz4hc.c:1165. 4: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1165. 5: Assuming 'dictSize' is <= 'prefixSize' in /opt/root_src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/r,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7411:66424,usability,support,support,66424,src/builtins/lz4/lz4hc.c:1166. 6: Taking false branch in /opt/root_src/builtins/lz4/lz4hc.c:1166. 7: Assuming 'safeBuffer' is equal to NULL in /opt/root_src/builtins/lz4/lz4hc.c:1167. 8: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1167. 9: 'dictSize' is > 0 in /opt/root_src/builtins/lz4/lz4hc.c:1168. 10: Taking true branch in /opt/root_src/builtins/lz4/lz4hc.c:1168. 11: Null pointer passed to 1st parameter expecting 'nonnull' in /opt/root_src/builtins/lz4/lz4hc.c:1169. /opt/root_src/builtins/lz4/lz4hc.c:1578:10: warning: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 [clang-analyzer-security.insecureAPI.DeprecatedOrUnsafeBufferHandling]. 1: Call to function 'memcpy' is insecure as it does not provide security checks introduced in the C11 standard. Replace with analogous functions that support length arguments or provides boundary checks such as 'memcpy_s' in case of C11 in /opt/root_src/builtins/lz4/lz4hc.c:1578. /opt/root_src/builtins/zstd/compress/fse_compress.c:226:47: warning: Branch condition evaluates to a garbage value [clang-analyzer-core.uninitialized.Branch]. 1: Calling 'FSE_compress2' in /opt/root_src/builtins/zstd/compress/fse_compress.c:701. 2: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:695. 3: Calling 'FSE_compress_wksp' in /opt/root_src/builtins/zstd/compress/fse_compress.c:696. 4: 'tableLog' is <= 12 in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 5: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 6: '?' condition is false in /opt/root_src/builtins/zstd/compress/fse_compress.c:650. 7: expanded from macro 'FSE_COMPRESS_WKSP_SIZE_U32' in /opt/root_src/builtins/zstd/common/fse.h:327. 8: Taking false branch in /opt/root_src/builtins/zstd/compress/fse_compress.c:650.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7411
https://github.com/root-project/root/issues/7412:43191,availability,operat,operator,43191,trix/src/TMatrixTUtils.cxx:1306. 5: Calling default constructor for 'TMatrixTSym<double>' in /opt/root_src/math/matrix/src/TMatrixTUtils.cxx:1313. 6: Calling default constructor for 'TMatrixTBase<double>' in /opt/root_src/math/matrix/inc/TMatrixTSym.h:54. 7: Calling default constructor for 'TObject' in /opt/root_src/math/matrix/inc/TMatrixTBase.h:115. 8: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:245. 9: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132. 10: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119. /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Assuming 'i' is < field 'fNt' in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:65. 2: Loop condition is true. Entering loop body in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:65. 3: Calling copy assignment operator for 'TLorentzVector' in /opt/root_src/math/physics/src/TGenPhaseSpace.cxx:67. 4: Calling 'TLorentzVector::Vect' in /opt/root_src/math/physics/inc/TLorentzVector.h:367. 5: Calling copy constructor for 'TVector3' in /opt/root_src/math/physics/inc/TLorentzVector.h:294. 6: Calling copy constructor for 'TObject' in /opt/root_src/math/physics/inc/TVector3.h:250. 7: Calling 'TStorage::UpdateIsOnHeap' in /opt/root_src/core/base/inc/TObject.h:265. 8: Calling 'TStorage::FilledByObjectAlloc' in /opt/root_src/core/base/inc/TStorage.h:132. 9: The left operand of '==' is a garbage value in /opt/root_src/core/base/inc/TStorage.h:119. /opt/root_src/core/base/inc/TStorage.h:119:19: warning: The left operand of '==' is a garbage value [clang-analyzer-core.UndefinedBinaryOperatorResult]. 1: Calling 'TLorentzRotation::VectorMultiplication' in /opt/root_src/math/physics/src/TLorentzVector.cxx:294. 2: Calling constructor for 'TLorentzVector' in /opt/root_src/math/physics/inc/TLorentzRotation.h:241. 3: ,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/7412
