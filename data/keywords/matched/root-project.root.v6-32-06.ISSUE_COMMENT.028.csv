id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/issues/6454:4727,availability,error,error,4727,"ument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4933,availability,error,error,4933,":29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:5540,availability,error,error,5540,"eof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6117,availability,error,error,6117,"hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6882,availability,error,error,6882,":16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to mat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7483,availability,error,error,7483,"note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8290,availability,error,error,8290,"__ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8888,availability,error,error,8888,"s '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source librari",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:619,deployability,version,version,619,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9591,deployability,Build,BuildVersion,9591,"11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/Co",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9620,deployability,version,version,9620,"desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9641,deployability,version,version,9641," <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9734,deployability,Instal,InstalledDir,9734,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10476,deployability,Version,Versions,10476,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10549,deployability,build,build,10549,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9720,energy efficiency,model,model,9720,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10153,energy efficiency,Core,Core,10153,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10207,energy efficiency,core,core,10207,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10213,energy efficiency,Core,Core,10213,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10270,energy efficiency,Core,Core,10270,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10308,energy efficiency,Core,Core,10308,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10503,energy efficiency,CPU,CPU,10503,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10515,energy efficiency,core,core,10515,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:619,integrability,version,version,619,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9620,integrability,version,version,9620,"desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9641,integrability,version,version,9641," <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10476,integrability,Version,Versions,10476,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:619,modifiability,version,version,619,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1297,modifiability,paramet,parameter,1297,"------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #def",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:5556,modifiability,paramet,parameter,5556,"n file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/cla",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6898,modifiability,paramet,parameter,6898,"nded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /User",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8306,modifiability,paramet,parameter,8306,". ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9620,modifiability,version,version,9620,"desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9641,modifiability,version,version,9641," <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9864,modifiability,portab,portable,9864,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10476,modifiability,Version,Versions,10476,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:130,performance,error,error,130,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1281,performance,error,error,1281,"$ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2149,performance,error,error,2149,"rt_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:3239,performance,error,error,3239,"omic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4225,performance,error,error,4225,"pp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4727,performance,error,error,4727,"ument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4933,performance,error,error,4933,":29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:5540,performance,error,error,5540,"eof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6117,performance,error,error,6117,"hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6882,performance,error,error,6882,":16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to mat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7483,performance,error,error,7483,"note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8290,performance,error,error,8290,"__ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8888,performance,error,error,8888,"s '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source librari",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10503,performance,CPU,CPU,10503,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:130,safety,error,error,130,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:217,safety,test,test,217,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:273,safety,test,test,273,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:294,safety,test,test,294,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:801,safety,test,test,801,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:898,safety,test,test,898,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1281,safety,error,error,1281,"$ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1766,safety,test,test,1766,"--------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2149,safety,error,error,2149,"rt_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2855,safety,test,test,2855,"p:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:3239,safety,error,error,3239,"omic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4145,safety,test,test,4145," /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4225,safety,error,error,4225,"pp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4647,safety,test,test,4647,"se_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4727,safety,error,error,4727,"ument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4933,safety,error,error,4933,":29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:5460,safety,test,test,5460,"mic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:5540,safety,error,error,5540,"eof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6037,safety,test,test,6037,"_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6117,safety,error,error,6117,"hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6802,safety,test,test,6802,"ne atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6882,safety,error,error,6882,":16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to mat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7403,safety,test,test,7403,"Q_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_pt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7483,safety,error,error,7483,"note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8210,safety,test,test,8210,"sired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8290,safety,error,error,8290,"__ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8808,safety,test,test,8808,"ocal/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8888,safety,error,error,8888,"s '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source librari",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:443,security,Team,Team,443,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9720,security,model,model,9720,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:217,testability,test,test,217,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:273,testability,test,test,273,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:294,testability,test,test,294,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:801,testability,test,test,801,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:898,testability,test,test,898,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1766,testability,test,test,1766,"--------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2855,testability,test,test,2855,"p:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4145,testability,test,test,4145," /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4647,testability,test,test,4647,"se_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:5460,testability,test,test,5460,"mic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6037,testability,test,test,6037,"_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/ro",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6802,testability,test,test,6802,"ne atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7403,testability,test,test,7403,"Q_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_pt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8210,testability,test,test,8210,"sired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8808,testability,test,test,8808,"ocal/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:51,usability,help,helps,51,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:130,usability,error,error,130,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:666,usability,help,help,666,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:873,usability,User,Users,873,"> Llvm9 is in master. Can someone check whether it helps? With master (@ 5b06edd12572938cd83e45e07067c827cc0fc615) I get the same error it seems:. ```. $ export ROOT_INCLUDE_PATH=$(brew --prefix boost)/include. $ cat test.C. #include <boost/smart_ptr/shared_ptr.hpp>. void test() {}. $ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1281,usability,error,error,1281,"$ root -q test.C. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro '",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1401,usability,User,Users,1401,"root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Mar 03 2021, 00:17:00 |. | From heads/master@v6-23-01-RF-binSampling-1035-g5b06edd125 |. | With Apple clang version 12.0.0 (clang-1200.0.32.29) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expand",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1741,usability,User,Users,1741,"--------------------------------------------. Processing test.C... In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2149,usability,error,error,2149,"rt_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2171,usability,User,Users,2171,"ed_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected parameter declarator. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/inclu",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2565,usability,User,Users,2565,"_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2830,usability,User,Users,2830,"/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least3",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:3239,usability,error,error,3239,"omic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:3365,usability,User,Users,3365,"). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/r",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:3855,usability,User,Users,3855,"t.C:1:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:17:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/shared_count.hpp:26:. In file included from /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4120,usability,User,Users,4120,"sp_counted_base.hpp:40:. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4225,usability,error,error,4225,"pp:140:16: error: no matching function for call to '__c11_atomic_load'. return atomic_load( &use_count_ );. ^~~~~~~~~~~~~~~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4347,usability,User,Users,4347,"~~~~~~~~~~~~. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^~~~~~~~~~~~~~~~~. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4622,usability,User,Users,4622,"ptr/detail/sp_counted_base_gcc_atomic.hpp:65:30: note: candidate function not viable: requires single argument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( sh",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4727,usability,error,error,4727,"ument 'pw', but 2 arguments were provided. inline boost::uint_least32_t atomic_load( boost::uint_least32_t const * pw ). ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4933,usability,error,error,4933,":29: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:31: error: expected expression. template<class T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:69:73: note: expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:5435,usability,User,Users,5435,"expanded from macro 'atomic_is_lock_free'. #define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:5540,usability,error,error,5540,"eof(*(obj))). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:5672,usability,User,Users,5672,"ost/include/boost/smart_ptr/shared_ptr.hpp:1081:81: error: expected ';' at end of declaration. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. ;. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1081:82: error: expected unqualified-id. ...T> inline bool atomic_is_lock_free( shared_ptr<T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_at",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6012,usability,User,Users,6012,"T> const * /*p*/ ) BOOST_SP_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/smart_ptr/detail/sp_noexcept.hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6117,usability,error,error,6117,"hpp:28:29: note: expanded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded fr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6139,usability,User,Users,6139,"ded from macro 'BOOST_SP_NOEXCEPT'. # define BOOST_SP_NOEXCEPT BOOST_NOEXCEPT. ^. /usr/local/opt/boost/include/boost/config/detail/suffix.hpp:974:26: note: expanded from macro 'BOOST_NOEXCEPT'. # define BOOST_NOEXCEPT noexcept. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6512,usability,User,Users,6512,"/shared_ptr.hpp:1086:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_load( shared_ptr<T> const * p ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6777,usability,User,Users,6777,"cro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6882,usability,error,error,6882,":16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to mat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7017,usability,User,Users,7017,"faci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:55: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_s",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7378,usability,User,Users,7378,"ere. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1086:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shar",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7483,usability,error,error,7483,"note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/includ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7505,usability,User,Users,7505,"'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:120:46: note: expanded from macro 'atomic_load'. #define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected parameter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7899,usability,User,Users,7899,"meter declarator. template<class T> void atomic_store( shared_ptr<T> * p, shared_ptr<T> r ) BOOST_SP_NOEXCEPT. ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expecte",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8185,usability,User,Users,8185,"_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8290,usability,error,error,8290,"__ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8422,usability,User,Users,8422,"opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:75: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8783,usability,User,Users,8783,"MIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1097:24: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8888,usability,error,error,8888,"s '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source librari",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8910,usability,User,Users,8910,"klein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:117:57: note: expanded from macro 'atomic_store'. #define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected parameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9304,usability,User,Users,9304,"arameter declarator. template<class T> shared_ptr<T> atomic_exchange( shared_ptr<T> * p, shared_ptr<T> r ) ... ^. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:9767,usability,Command,CommandLineTools,9767,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:10595,usability,Command,CommandLineTools,10595,"In file included from input_line_8:1:. In file included from /Users/alfaci/dklein/root/test.C:1:. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: error: expected ')'. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:81: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. <built-in>:16:26: note: expanded from here. #define __ATOMIC_SEQ_CST 5. ^. /usr/local/opt/boost/include/boost/smart_ptr/shared_ptr.hpp:1108:33: note: to match this '('. /Users/alfaci/dklein/root/build_/etc/cling/lib/clang/9.0.1/include/stdatomic.h:123:63: note: expanded from macro 'atomic_exchange'. #define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOM... ^. ```. ```. $ sw_vers. ProductName: macOS. ProductVersion: 11.2. BuildVersion: 20D64. $ c++ --version. Apple clang version 12.0.0 (clang-1200.0.32.29). Target: x86_64-apple-darwin20.3.0. Thread model: posix. InstalledDir: /Library/Developer/CommandLineTools/usr/bin. $ brew info boost. boost: stable 1.75.0 (bottled), HEAD. Collection of portable C++ source libraries. https://www.boost.org/. /usr/local/Cellar/boost/1.75.0_2 (15,058 files, 524.2MB) *. (...). $ brew config. HOMEBREW_VERSION: 3.0.4-8-gb024954. ORIGIN: https://github.com/Homebrew/brew. HEAD: b024954a0f203a4f439cc95eefb1180c96e943ce. Last commit: 8 hours ago. Core tap ORIGIN: https://github.com/Homebrew/homebrew-core. Core tap HEAD: 7254d2fa9b1b01351be360ed99c57e1158f7b53f. Core tap last commit: 42 minutes ago. Core tap branch: master. HOMEBREW_PREFIX: /usr/local. HOMEBREW_CASK_OPTS: []. HOMEBREW_MAKE_JOBS: 12. Homebrew Ruby: 2.6.3 => /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/bin/ruby. CPU: dodeca-core 64-bit kabylake. Clang: 12.0 build 1200. Git: 2.24.3 => /Library/Developer/CommandLineTools/usr/bin/git. Curl: 7.64.1 => /usr/bin/curl. macOS: 11.2-x86_64. CLT: 12.4.0.0.1.1610135815. Xcode: 12.3. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1601,availability,consist,consistency,1601,"__has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* These should be provided by the libc implementation. */. -void atomic_thread_fence(memory_order);. -void atomic_signal_fence(memory_order);. -. -#define atomic_thread_fence(order) __c11_atomic_thread_fence(order). -#define atomic_signal_fence(order) __c11_atomic_signal_fence(order). -. -/* 7.17.5 Lock-free property */. -. -#define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). -. -/* 7.17.6 Atomic integer types */. -. -#ifdef __cplusplus. -typedef _Atomic(bool) atomic_bool;. -#else. -typedef _Atomic(_Bool) atomic_bool;. -#endif. -typedef _Atomic(char) atomic_char;. -typedef _Atomi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:4335,availability,Operat,Operations,4335,"-typedef _Atomic(uint_least16_t) atomic_uint_least16_t;. -typedef _Atomic(int_least32_t) atomic_int_least32_t;. -typedef _Atomic(uint_least32_t) atomic_uint_least32_t;. -typedef _Atomic(int_least64_t) atomic_int_least64_t;. -typedef _Atomic(uint_least64_t) atomic_uint_least64_t;. -typedef _Atomic(int_fast8_t) atomic_int_fast8_t;. -typedef _Atomic(uint_fast8_t) atomic_uint_fast8_t;. -typedef _Atomic(int_fast16_t) atomic_int_fast16_t;. -typedef _Atomic(uint_fast16_t) atomic_uint_fast16_t;. -typedef _Atomic(int_fast32_t) atomic_int_fast32_t;. -typedef _Atomic(uint_fast32_t) atomic_uint_fast32_t;. -typedef _Atomic(int_fast64_t) atomic_int_fast64_t;. -typedef _Atomic(uint_fast64_t) atomic_uint_fast64_t;. -typedef _Atomic(intptr_t) atomic_intptr_t;. -typedef _Atomic(uintptr_t) atomic_uintptr_t;. -typedef _Atomic(size_t) atomic_size_t;. -typedef _Atomic(ptrdiff_t) atomic_ptrdiff_t;. -typedef _Atomic(intmax_t) atomic_intmax_t;. -typedef _Atomic(uintmax_t) atomic_uintmax_t;. -. -/* 7.17.7 Operations on atomic types */. -. -#define atomic_store(object, desired) __c11_atomic_store(object, desired, __ATOMIC_SEQ_CST). -#define atomic_store_explicit __c11_atomic_store. -. -#define atomic_load(object) __c11_atomic_load(object, __ATOMIC_SEQ_CST). -#define atomic_load_explicit __c11_atomic_load. -. -#define atomic_exchange(object, desired) __c11_atomic_exchange(object, desired, __ATOMIC_SEQ_CST). -#define atomic_exchange_explicit __c11_atomic_exchange. -. -#define atomic_compare_exchange_strong(object, expected, desired) __c11_atomic_compare_exchange_strong(object, expected, desired, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST). -#define atomic_compare_exchange_strong_explicit __c11_atomic_compare_exchange_strong. -. -#define atomic_compare_exchange_weak(object, expected, desired) __c11_atomic_compare_exchange_weak(object, expected, desired, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST). -#define atomic_compare_exchange_weak_explicit __c11_atomic_compare_exchange_weak. -. -#define atomic_fetch_add(obj",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:6159,availability,operat,operations,6159,"ect, expected, desired, __ATOMIC_SEQ_CST, __ATOMIC_SEQ_CST). -#define atomic_compare_exchange_weak_explicit __c11_atomic_compare_exchange_weak. -. -#define atomic_fetch_add(object, operand) __c11_atomic_fetch_add(object, operand, __ATOMIC_SEQ_CST). -#define atomic_fetch_add_explicit __c11_atomic_fetch_add. -. -#define atomic_fetch_sub(object, operand) __c11_atomic_fetch_sub(object, operand, __ATOMIC_SEQ_CST). -#define atomic_fetch_sub_explicit __c11_atomic_fetch_sub. -. -#define atomic_fetch_or(object, operand) __c11_atomic_fetch_or(object, operand, __ATOMIC_SEQ_CST). -#define atomic_fetch_or_explicit __c11_atomic_fetch_or. -. -#define atomic_fetch_xor(object, operand) __c11_atomic_fetch_xor(object, operand, __ATOMIC_SEQ_CST). -#define atomic_fetch_xor_explicit __c11_atomic_fetch_xor. -. -#define atomic_fetch_and(object, operand) __c11_atomic_fetch_and(object, operand, __ATOMIC_SEQ_CST). -#define atomic_fetch_and_explicit __c11_atomic_fetch_and. -. -/* 7.17.8 Atomic flag type and operations */. -. -typedef struct atomic_flag { atomic_bool _Value; } atomic_flag;. -. -#define ATOMIC_FLAG_INIT { 0 }. -. -/* These should be provided by the libc implementation. */. -#ifdef __cplusplus. -bool atomic_flag_test_and_set(volatile atomic_flag *);. -bool atomic_flag_test_and_set_explicit(volatile atomic_flag *, memory_order);. -#else. -_Bool atomic_flag_test_and_set(volatile atomic_flag *);. -_Bool atomic_flag_test_and_set_explicit(volatile atomic_flag *, memory_order);. -#endif. -void atomic_flag_clear(volatile atomic_flag *);. -void atomic_flag_clear_explicit(volatile atomic_flag *, memory_order);. -. -#define atomic_flag_test_and_set(object) __c11_atomic_exchange(&(object)->_Value, 1, __ATOMIC_SEQ_CST). -#define atomic_flag_test_and_set_explicit(object, order) __c11_atomic_exchange(&(object)->_Value, 1, order). -. -#define atomic_flag_clear(object) __c11_atomic_store(&(object)->_Value, 0, __ATOMIC_SEQ_CST). -#define atomic_flag_clear_explicit(object, order) __c11_atomic_stor",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:15,deployability,patch,patch,15,"The following ""patch"" ;-) resolves this issue for me: . ```diff. diff --git a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. index 665551ea69..c64e6f5954 100644. --- a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. +++ b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. @@ -10,167 +10,5 @@. #ifndef __CLANG_STDATOMIC_H. #define __CLANG_STDATOMIC_H. -/* If we're hosted, fall back to the system's stdatomic.h. FreeBSD, for. - * example, already has a Clang-compatible stdatomic.h header. - */. -#if __STDC_HOSTED__ && __has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:7454,energy efficiency,current,current,7454,"d, __ATOMIC_SEQ_CST). -#define atomic_fetch_or_explicit __c11_atomic_fetch_or. -. -#define atomic_fetch_xor(object, operand) __c11_atomic_fetch_xor(object, operand, __ATOMIC_SEQ_CST). -#define atomic_fetch_xor_explicit __c11_atomic_fetch_xor. -. -#define atomic_fetch_and(object, operand) __c11_atomic_fetch_and(object, operand, __ATOMIC_SEQ_CST). -#define atomic_fetch_and_explicit __c11_atomic_fetch_and. -. -/* 7.17.8 Atomic flag type and operations */. -. -typedef struct atomic_flag { atomic_bool _Value; } atomic_flag;. -. -#define ATOMIC_FLAG_INIT { 0 }. -. -/* These should be provided by the libc implementation. */. -#ifdef __cplusplus. -bool atomic_flag_test_and_set(volatile atomic_flag *);. -bool atomic_flag_test_and_set_explicit(volatile atomic_flag *, memory_order);. -#else. -_Bool atomic_flag_test_and_set(volatile atomic_flag *);. -_Bool atomic_flag_test_and_set_explicit(volatile atomic_flag *, memory_order);. -#endif. -void atomic_flag_clear(volatile atomic_flag *);. -void atomic_flag_clear_explicit(volatile atomic_flag *, memory_order);. -. -#define atomic_flag_test_and_set(object) __c11_atomic_exchange(&(object)->_Value, 1, __ATOMIC_SEQ_CST). -#define atomic_flag_test_and_set_explicit(object, order) __c11_atomic_exchange(&(object)->_Value, 1, order). -. -#define atomic_flag_clear(object) __c11_atomic_store(&(object)->_Value, 0, __ATOMIC_SEQ_CST). -#define atomic_flag_clear_explicit(object, order) __c11_atomic_store(&(object)->_Value, 0, order). -. -#ifdef __cplusplus. -}. -#endif. -. -#endif /* __STDC_HOSTED__ */. #endif /* __CLANG_STDATOMIC_H */. ```. Unfortunately, I could not figure out where this C header is included. It appears that neither ROOT, Boost, nor clang includes it anywhere - so, my current assumption is that the interpreter somehow pulls it in (I am not too familiar with this compiled header mechanism; maybe I overlooked something there)? I will leave it to the experts to find the right switch to disable it if my assumption is even correct.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:546,interoperability,compatib,compatible,546,"The following ""patch"" ;-) resolves this issue for me: . ```diff. diff --git a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. index 665551ea69..c64e6f5954 100644. --- a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. +++ b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. @@ -10,167 +10,5 @@. #ifndef __CLANG_STDATOMIC_H. #define __CLANG_STDATOMIC_H. -/* If we're hosted, fall back to the system's stdatomic.h. FreeBSD, for. - * example, already has a Clang-compatible stdatomic.h header. - */. -#if __STDC_HOSTED__ && __has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2297,performance,Lock,Lock-free,2297,"NG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* These should be provided by the libc implementation. */. -void atomic_thread_fence(memory_order);. -void atomic_signal_fence(memory_order);. -. -#define atomic_thread_fence(order) __c11_atomic_thread_fence(order). -#define atomic_signal_fence(order) __c11_atomic_signal_fence(order). -. -/* 7.17.5 Lock-free property */. -. -#define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). -. -/* 7.17.6 Atomic integer types */. -. -#ifdef __cplusplus. -typedef _Atomic(bool) atomic_bool;. -#else. -typedef _Atomic(_Bool) atomic_bool;. -#endif. -typedef _Atomic(char) atomic_char;. -typedef _Atomic(signed char) atomic_schar;. -typedef _Atomic(unsigned char) atomic_uchar;. -typedef _Atomic(short) atomic_short;. -typedef _Atomic(unsigned short) atomic_ushort;. -typedef _Atomic(int) atomic_int;. -typedef _Atomic(unsigned int) atomic_uint;. -typedef _Atomic(long) atomic_long;. -typedef _Atomic(unsigned long) atomic_ulong;. -typedef _Atomic(long long) atomic_llong;. -typedef _Atomic(unsigned long long) atomic_ullong;. -typedef _Atomic(uint_least16_t) atomic_char16_t;. -typedef _Atomic(uint_least32_t) atomic_char32_t;. -typedef _Atomic(wchar_t) atomic_wchar_t;. -typedef _Atomic(int_least8_t) atomic_int_least8_t;. -typedef _Atomic(uint_least8_t) atomic_uint_least8_t;. -typedef _Atomic(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:15,safety,patch,patch,15,"The following ""patch"" ;-) resolves this issue for me: . ```diff. diff --git a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. index 665551ea69..c64e6f5954 100644. --- a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. +++ b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. @@ -10,167 +10,5 @@. #ifndef __CLANG_STDATOMIC_H. #define __CLANG_STDATOMIC_H. -/* If we're hosted, fall back to the system's stdatomic.h. FreeBSD, for. - * example, already has a Clang-compatible stdatomic.h header. - */. -#if __STDC_HOSTED__ && __has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:15,security,patch,patch,15,"The following ""patch"" ;-) resolves this issue for me: . ```diff. diff --git a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. index 665551ea69..c64e6f5954 100644. --- a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. +++ b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. @@ -10,167 +10,5 @@. #ifndef __CLANG_STDATOMIC_H. #define __CLANG_STDATOMIC_H. -/* If we're hosted, fall back to the system's stdatomic.h. FreeBSD, for. - * example, already has a Clang-compatible stdatomic.h header. - */. -#if __STDC_HOSTED__ && __has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2297,security,Lock,Lock-free,2297,"NG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* These should be provided by the libc implementation. */. -void atomic_thread_fence(memory_order);. -void atomic_signal_fence(memory_order);. -. -#define atomic_thread_fence(order) __c11_atomic_thread_fence(order). -#define atomic_signal_fence(order) __c11_atomic_signal_fence(order). -. -/* 7.17.5 Lock-free property */. -. -#define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). -. -/* 7.17.6 Atomic integer types */. -. -#ifdef __cplusplus. -typedef _Atomic(bool) atomic_bool;. -#else. -typedef _Atomic(_Bool) atomic_bool;. -#endif. -typedef _Atomic(char) atomic_char;. -typedef _Atomic(signed char) atomic_schar;. -typedef _Atomic(unsigned char) atomic_uchar;. -typedef _Atomic(short) atomic_short;. -typedef _Atomic(unsigned short) atomic_ushort;. -typedef _Atomic(int) atomic_int;. -typedef _Atomic(unsigned int) atomic_uint;. -typedef _Atomic(long) atomic_long;. -typedef _Atomic(unsigned long) atomic_ulong;. -typedef _Atomic(long long) atomic_llong;. -typedef _Atomic(unsigned long long) atomic_ullong;. -typedef _Atomic(uint_least16_t) atomic_char16_t;. -typedef _Atomic(uint_least32_t) atomic_char32_t;. -typedef _Atomic(wchar_t) atomic_wchar_t;. -typedef _Atomic(int_least8_t) atomic_int_least8_t;. -typedef _Atomic(uint_least8_t) atomic_uint_least8_t;. -typedef _Atomic(",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:2609,security,sign,signed,2609," */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* These should be provided by the libc implementation. */. -void atomic_thread_fence(memory_order);. -void atomic_signal_fence(memory_order);. -. -#define atomic_thread_fence(order) __c11_atomic_thread_fence(order). -#define atomic_signal_fence(order) __c11_atomic_signal_fence(order). -. -/* 7.17.5 Lock-free property */. -. -#define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). -. -/* 7.17.6 Atomic integer types */. -. -#ifdef __cplusplus. -typedef _Atomic(bool) atomic_bool;. -#else. -typedef _Atomic(_Bool) atomic_bool;. -#endif. -typedef _Atomic(char) atomic_char;. -typedef _Atomic(signed char) atomic_schar;. -typedef _Atomic(unsigned char) atomic_uchar;. -typedef _Atomic(short) atomic_short;. -typedef _Atomic(unsigned short) atomic_ushort;. -typedef _Atomic(int) atomic_int;. -typedef _Atomic(unsigned int) atomic_uint;. -typedef _Atomic(long) atomic_long;. -typedef _Atomic(unsigned long) atomic_ulong;. -typedef _Atomic(long long) atomic_llong;. -typedef _Atomic(unsigned long long) atomic_ullong;. -typedef _Atomic(uint_least16_t) atomic_char16_t;. -typedef _Atomic(uint_least32_t) atomic_char32_t;. -typedef _Atomic(wchar_t) atomic_wchar_t;. -typedef _Atomic(int_least8_t) atomic_int_least8_t;. -typedef _Atomic(uint_least8_t) atomic_uint_least8_t;. -typedef _Atomic(int_least16_t) atomic_int_least16_t;. -typedef _Atomic(uint_least16_t) atomic_uint_least16_t;. -typedef _Atomic(int_least32_t) atomic_int_least32_t;. -typedef _Atomic(uint_least32_t) atomic_uint_least32_t;. -typedef _Atomic(int_least64_t) atomic_int_least64_t;. -typedef _Atomic(uint_least64_t) atomic_uint_lea",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:99,usability,tool,tools,99,"The following ""patch"" ;-) resolves this issue for me: . ```diff. diff --git a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. index 665551ea69..c64e6f5954 100644. --- a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. +++ b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. @@ -10,167 +10,5 @@. #ifndef __CLANG_STDATOMIC_H. #define __CLANG_STDATOMIC_H. -/* If we're hosted, fall back to the system's stdatomic.h. FreeBSD, for. - * example, already has a Clang-compatible stdatomic.h header. - */. -#if __STDC_HOSTED__ && __has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:158,usability,tool,tools,158,"The following ""patch"" ;-) resolves this issue for me: . ```diff. diff --git a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. index 665551ea69..c64e6f5954 100644. --- a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. +++ b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. @@ -10,167 +10,5 @@. #ifndef __CLANG_STDATOMIC_H. #define __CLANG_STDATOMIC_H. -/* If we're hosted, fall back to the system's stdatomic.h. FreeBSD, for. - * example, already has a Clang-compatible stdatomic.h header. - */. -#if __STDC_HOSTED__ && __has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:259,usability,tool,tools,259,"The following ""patch"" ;-) resolves this issue for me: . ```diff. diff --git a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. index 665551ea69..c64e6f5954 100644. --- a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. +++ b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. @@ -10,167 +10,5 @@. #ifndef __CLANG_STDATOMIC_H. #define __CLANG_STDATOMIC_H. -/* If we're hosted, fall back to the system's stdatomic.h. FreeBSD, for. - * example, already has a Clang-compatible stdatomic.h header. - */. -#if __STDC_HOSTED__ && __has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:323,usability,tool,tools,323,"The following ""patch"" ;-) resolves this issue for me: . ```diff. diff --git a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. index 665551ea69..c64e6f5954 100644. --- a/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. +++ b/interpreter/llvm/src/tools/clang/lib/Headers/stdatomic.h. @@ -10,167 +10,5 @@. #ifndef __CLANG_STDATOMIC_H. #define __CLANG_STDATOMIC_H. -/* If we're hosted, fall back to the system's stdatomic.h. FreeBSD, for. - * example, already has a Clang-compatible stdatomic.h header. - */. -#if __STDC_HOSTED__ && __has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* T",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:1601,usability,consist,consistency,1601,"__has_include_next(<stdatomic.h>). -# include_next <stdatomic.h>. -#else. -. -#include <stddef.h>. -#include <stdint.h>. -. -#ifdef __cplusplus. -extern ""C"" {. -#endif. -. -/* 7.17.1 Introduction */. -. -#define ATOMIC_BOOL_LOCK_FREE __CLANG_ATOMIC_BOOL_LOCK_FREE. -#define ATOMIC_CHAR_LOCK_FREE __CLANG_ATOMIC_CHAR_LOCK_FREE. -#define ATOMIC_CHAR16_T_LOCK_FREE __CLANG_ATOMIC_CHAR16_T_LOCK_FREE. -#define ATOMIC_CHAR32_T_LOCK_FREE __CLANG_ATOMIC_CHAR32_T_LOCK_FREE. -#define ATOMIC_WCHAR_T_LOCK_FREE __CLANG_ATOMIC_WCHAR_T_LOCK_FREE. -#define ATOMIC_SHORT_LOCK_FREE __CLANG_ATOMIC_SHORT_LOCK_FREE. -#define ATOMIC_INT_LOCK_FREE __CLANG_ATOMIC_INT_LOCK_FREE. -#define ATOMIC_LONG_LOCK_FREE __CLANG_ATOMIC_LONG_LOCK_FREE. -#define ATOMIC_LLONG_LOCK_FREE __CLANG_ATOMIC_LLONG_LOCK_FREE. -#define ATOMIC_POINTER_LOCK_FREE __CLANG_ATOMIC_POINTER_LOCK_FREE. -. -/* 7.17.2 Initialization */. -. -#define ATOMIC_VAR_INIT(value) (value). -#define atomic_init __c11_atomic_init. -. -/* 7.17.3 Order and consistency */. -. -typedef enum memory_order {. - memory_order_relaxed = __ATOMIC_RELAXED,. - memory_order_consume = __ATOMIC_CONSUME,. - memory_order_acquire = __ATOMIC_ACQUIRE,. - memory_order_release = __ATOMIC_RELEASE,. - memory_order_acq_rel = __ATOMIC_ACQ_REL,. - memory_order_seq_cst = __ATOMIC_SEQ_CST. -} memory_order;. -. -#define kill_dependency(y) (y). -. -/* 7.17.4 Fences */. -. -/* These should be provided by the libc implementation. */. -void atomic_thread_fence(memory_order);. -void atomic_signal_fence(memory_order);. -. -#define atomic_thread_fence(order) __c11_atomic_thread_fence(order). -#define atomic_signal_fence(order) __c11_atomic_signal_fence(order). -. -/* 7.17.5 Lock-free property */. -. -#define atomic_is_lock_free(obj) __c11_atomic_is_lock_free(sizeof(*(obj))). -. -/* 7.17.6 Atomic integer types */. -. -#ifdef __cplusplus. -typedef _Atomic(bool) atomic_bool;. -#else. -typedef _Atomic(_Bool) atomic_bool;. -#endif. -typedef _Atomic(char) atomic_char;. -typedef _Atomi",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:61,deployability,version,version,61,https://reviews.llvm.org/D45470 This change in a more recent version of this header in libcxx also made me believe it is not meant to combine `<stdatomic.h>` and `<atomic>` in the same C++ program.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:61,integrability,version,version,61,https://reviews.llvm.org/D45470 This change in a more recent version of this header in libcxx also made me believe it is not meant to combine `<stdatomic.h>` and `<atomic>` in the same C++ program.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:61,modifiability,version,version,61,https://reviews.llvm.org/D45470 This change in a more recent version of this header in libcxx also made me believe it is not meant to combine `<stdatomic.h>` and `<atomic>` in the same C++ program.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8,safety,review,reviews,8,https://reviews.llvm.org/D45470 This change in a more recent version of this header in libcxx also made me believe it is not meant to combine `<stdatomic.h>` and `<atomic>` in the same C++ program.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:8,testability,review,reviews,8,https://reviews.llvm.org/D45470 This change in a more recent version of this header in libcxx also made me believe it is not meant to combine `<stdatomic.h>` and `<atomic>` in the same C++ program.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:99,deployability,modul,module,99,I agree we should not `#include` `stdatomic.h`. I'll see where it comes from - I bet it's the libc module.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:99,modifiability,modul,module,99,I agree we should not `#include` `stdatomic.h`. I'll see where it comes from - I bet it's the libc module.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:99,safety,modul,module,99,I agree we should not `#include` `stdatomic.h`. I'll see where it comes from - I bet it's the libc module.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:24,usability,confirm,confirmed,24,Peter Hristov for Alice confirmed that the above PRs fix this issue.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:46,deployability,patch,patches,46,Let me know if you still see this in v6-24-00-patches or the upcoming v6.24/02 and I'll reopen this issue!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:46,safety,patch,patches,46,Let me know if you still see this in v6-24-00-patches or the upcoming v6.24/02 and I'll reopen this issue!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/issues/6454:46,security,patch,patches,46,Let me know if you still see this in v6-24-00-patches or the upcoming v6.24/02 and I'll reopen this issue!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6454
https://github.com/root-project/root/pull/6458:0,availability,failur,failures,0,failures in `gtest_tree_dataframe_test_dataframe_concurrency` on windows are known and unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6458
https://github.com/root-project/root/pull/6458:0,deployability,fail,failures,0,failures in `gtest_tree_dataframe_test_dataframe_concurrency` on windows are known and unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6458
https://github.com/root-project/root/pull/6458:0,performance,failur,failures,0,failures in `gtest_tree_dataframe_test_dataframe_concurrency` on windows are known and unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6458
https://github.com/root-project/root/pull/6458:0,reliability,fail,failures,0,failures in `gtest_tree_dataframe_test_dataframe_concurrency` on windows are known and unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6458
https://github.com/root-project/root/pull/6459:264,availability,Error,Error,264,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:70,deployability,log,logic,70,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:270,integrability,messag,message,270,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:270,interoperability,messag,message,270,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:264,performance,Error,Error,264,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:190,reliability,doe,does,190,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:223,reliability,doe,does,223,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:57,safety,test,test,57,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:70,safety,log,logic,70,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:264,safety,Error,Error,264,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:70,security,log,logic,70,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:57,testability,test,test,57,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:70,testability,log,logic,70,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:264,usability,Error,Error,264,"The way you wrote it will execute the ""else"" part of the test and the logic of the method is based on w and h taken from the Canvas ... so the ""else"" part might be a non sense as the canvas does not exist ... If the Canvas does not exits you should exit with some Error message I guess. I let you change the PR",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/pull/6459:585,interoperability,coordinat,coordinates,585,"That crashes on a line with TPad constructor... I Assume that comes from . ```. TPad::TPad(const char *name, const char *title, Double_t xlow,. Double_t ylow, Double_t xup, Double_t yup,. Color_t color, Short_t bordersize, Short_t bordermode). : TVirtualPad(name,title,xlow,ylow,xup,yup,color,bordersize,bordermode). {. fModified = kTRUE;. fTip = nullptr;. fBorderSize = bordersize;. fBorderMode = bordermode;. if (gPad) fCanvas = gPad->GetCanvas(); <------- what if this is null? else fCanvas = (TCanvas*)this;. .... fGLDevice = fCanvas->GetGLDevice(); <-------. // Set default world coordinates to NDC [0,1]. ```.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6459
https://github.com/root-project/root/issues/6465:47,deployability,releas,release,47,"yes please, v6.22 is default cmssw development release.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6465
https://github.com/root-project/root/issues/6465:47,availability,ping,pinging,47,"Merged, apologies for the delay and thanks for pinging me by means of a PR! :-).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6465
https://github.com/root-project/root/pull/6466:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:134,performance,cach,cache,134,"@Axel-Naumann I don't understand why locally everything works, but not in Jenkins....Could it be connected with that some executables/cache are not cleaned properly between PRs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:22,testability,understand,understand,22,"@Axel-Naumann I don't understand why locally everything works, but not in Jenkins....Could it be connected with that some executables/cache are not cleaned properly between PRs?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:116,deployability,fail,failing,116,It sounds like the file compiledata.h is not properly filled out. Can you check on your local disk vs in one of the failing machine? (Also is there a different between how you ask for the standard locally vs jenkins (CMAKE_CPP_STANDARD vs cxx17=ON)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:188,interoperability,standard,standard,188,It sounds like the file compiledata.h is not properly filled out. Can you check on your local disk vs in one of the failing machine? (Also is there a different between how you ask for the standard locally vs jenkins (CMAKE_CPP_STANDARD vs cxx17=ON)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:94,performance,disk,disk,94,It sounds like the file compiledata.h is not properly filled out. Can you check on your local disk vs in one of the failing machine? (Also is there a different between how you ask for the standard locally vs jenkins (CMAKE_CPP_STANDARD vs cxx17=ON)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:116,reliability,fail,failing,116,It sounds like the file compiledata.h is not properly filled out. Can you check on your local disk vs in one of the failing machine? (Also is there a different between how you ask for the standard locally vs jenkins (CMAKE_CPP_STANDARD vs cxx17=ON)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:136,deployability,automat,automatically,136,"@pcanal actually with my PR, looks like we don't have C++ standard flags in `compiledata.h`. Is it used for Aclic? ```. /* This file is automatically generated */. #define BUILD_ARCH ""linuxx8664gcc"". #define BUILD_NODE ""Linux oksana-xps139380 5.7.17-2-MANJARO #1 SMP PREEMPT Sat Aug 22 14:58:17 UTC 2020 x86_64 GNU/Linux"". #define CXX ""c++"". #define COMPILER ""/usr/bin/c++"". #define COMPILERVERS ""gcc1020"". #define COMPILERVERSSTR ""c++ (GCC) 10.2.0"". #define MAKESHAREDLIB ""cd $BuildDir ; c++ -fPIC -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles ; c++ $Opt $ObjectFiles -shared $LinkedLibs -o $SharedLib"". #define MAKEEXE ""cd $BuildDir ; c++ -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles; c++ $Opt $ObjectFiles -o $ExeName $LinkedLibs"". #define CXXOPT ""-O3 -DNDEBUG"". #define CXXDEBUG ""-g"". #define ROOTBUILD """". #define LINKEDLIBS ""-L$ROOTSYS/lib -lCore -lRint "". #define INCLUDEPATH ""-I$ROOTSYS/include"". #define OBJEXT ""o"". #define SOEXT ""so"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:478,deployability,Build,BuildDir,478,"@pcanal actually with my PR, looks like we don't have C++ standard flags in `compiledata.h`. Is it used for Aclic? ```. /* This file is automatically generated */. #define BUILD_ARCH ""linuxx8664gcc"". #define BUILD_NODE ""Linux oksana-xps139380 5.7.17-2-MANJARO #1 SMP PREEMPT Sat Aug 22 14:58:17 UTC 2020 x86_64 GNU/Linux"". #define CXX ""c++"". #define COMPILER ""/usr/bin/c++"". #define COMPILERVERS ""gcc1020"". #define COMPILERVERSSTR ""c++ (GCC) 10.2.0"". #define MAKESHAREDLIB ""cd $BuildDir ; c++ -fPIC -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles ; c++ $Opt $ObjectFiles -shared $LinkedLibs -o $SharedLib"". #define MAKEEXE ""cd $BuildDir ; c++ -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles; c++ $Opt $ObjectFiles -o $ExeName $LinkedLibs"". #define CXXOPT ""-O3 -DNDEBUG"". #define CXXDEBUG ""-g"". #define ROOTBUILD """". #define LINKEDLIBS ""-L$ROOTSYS/lib -lCore -lRint "". #define INCLUDEPATH ""-I$ROOTSYS/include"". #define OBJEXT ""o"". #define SOEXT ""so"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:712,deployability,Build,BuildDir,712,"@pcanal actually with my PR, looks like we don't have C++ standard flags in `compiledata.h`. Is it used for Aclic? ```. /* This file is automatically generated */. #define BUILD_ARCH ""linuxx8664gcc"". #define BUILD_NODE ""Linux oksana-xps139380 5.7.17-2-MANJARO #1 SMP PREEMPT Sat Aug 22 14:58:17 UTC 2020 x86_64 GNU/Linux"". #define CXX ""c++"". #define COMPILER ""/usr/bin/c++"". #define COMPILERVERS ""gcc1020"". #define COMPILERVERSSTR ""c++ (GCC) 10.2.0"". #define MAKESHAREDLIB ""cd $BuildDir ; c++ -fPIC -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles ; c++ $Opt $ObjectFiles -shared $LinkedLibs -o $SharedLib"". #define MAKEEXE ""cd $BuildDir ; c++ -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles; c++ $Opt $ObjectFiles -o $ExeName $LinkedLibs"". #define CXXOPT ""-O3 -DNDEBUG"". #define CXXDEBUG ""-g"". #define ROOTBUILD """". #define LINKEDLIBS ""-L$ROOTSYS/lib -lCore -lRint "". #define INCLUDEPATH ""-I$ROOTSYS/include"". #define OBJEXT ""o"". #define SOEXT ""so"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:58,interoperability,standard,standard,58,"@pcanal actually with my PR, looks like we don't have C++ standard flags in `compiledata.h`. Is it used for Aclic? ```. /* This file is automatically generated */. #define BUILD_ARCH ""linuxx8664gcc"". #define BUILD_NODE ""Linux oksana-xps139380 5.7.17-2-MANJARO #1 SMP PREEMPT Sat Aug 22 14:58:17 UTC 2020 x86_64 GNU/Linux"". #define CXX ""c++"". #define COMPILER ""/usr/bin/c++"". #define COMPILERVERS ""gcc1020"". #define COMPILERVERSSTR ""c++ (GCC) 10.2.0"". #define MAKESHAREDLIB ""cd $BuildDir ; c++ -fPIC -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles ; c++ $Opt $ObjectFiles -shared $LinkedLibs -o $SharedLib"". #define MAKEEXE ""cd $BuildDir ; c++ -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles; c++ $Opt $ObjectFiles -o $ExeName $LinkedLibs"". #define CXXOPT ""-O3 -DNDEBUG"". #define CXXDEBUG ""-g"". #define ROOTBUILD """". #define LINKEDLIBS ""-L$ROOTSYS/lib -lCore -lRint "". #define INCLUDEPATH ""-I$ROOTSYS/include"". #define OBJEXT ""o"". #define SOEXT ""so"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:656,interoperability,share,shared,656,"@pcanal actually with my PR, looks like we don't have C++ standard flags in `compiledata.h`. Is it used for Aclic? ```. /* This file is automatically generated */. #define BUILD_ARCH ""linuxx8664gcc"". #define BUILD_NODE ""Linux oksana-xps139380 5.7.17-2-MANJARO #1 SMP PREEMPT Sat Aug 22 14:58:17 UTC 2020 x86_64 GNU/Linux"". #define CXX ""c++"". #define COMPILER ""/usr/bin/c++"". #define COMPILERVERS ""gcc1020"". #define COMPILERVERSSTR ""c++ (GCC) 10.2.0"". #define MAKESHAREDLIB ""cd $BuildDir ; c++ -fPIC -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles ; c++ $Opt $ObjectFiles -shared $LinkedLibs -o $SharedLib"". #define MAKEEXE ""cd $BuildDir ; c++ -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles; c++ $Opt $ObjectFiles -o $ExeName $LinkedLibs"". #define CXXOPT ""-O3 -DNDEBUG"". #define CXXDEBUG ""-g"". #define ROOTBUILD """". #define LINKEDLIBS ""-L$ROOTSYS/lib -lCore -lRint "". #define INCLUDEPATH ""-I$ROOTSYS/include"". #define OBJEXT ""o"". #define SOEXT ""so"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:679,interoperability,Share,SharedLib,679,"@pcanal actually with my PR, looks like we don't have C++ standard flags in `compiledata.h`. Is it used for Aclic? ```. /* This file is automatically generated */. #define BUILD_ARCH ""linuxx8664gcc"". #define BUILD_NODE ""Linux oksana-xps139380 5.7.17-2-MANJARO #1 SMP PREEMPT Sat Aug 22 14:58:17 UTC 2020 x86_64 GNU/Linux"". #define CXX ""c++"". #define COMPILER ""/usr/bin/c++"". #define COMPILERVERS ""gcc1020"". #define COMPILERVERSSTR ""c++ (GCC) 10.2.0"". #define MAKESHAREDLIB ""cd $BuildDir ; c++ -fPIC -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles ; c++ $Opt $ObjectFiles -shared $LinkedLibs -o $SharedLib"". #define MAKEEXE ""cd $BuildDir ; c++ -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles; c++ $Opt $ObjectFiles -o $ExeName $LinkedLibs"". #define CXXOPT ""-O3 -DNDEBUG"". #define CXXDEBUG ""-g"". #define ROOTBUILD """". #define LINKEDLIBS ""-L$ROOTSYS/lib -lCore -lRint "". #define INCLUDEPATH ""-I$ROOTSYS/include"". #define OBJEXT ""o"". #define SOEXT ""so"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:136,testability,automat,automatically,136,"@pcanal actually with my PR, looks like we don't have C++ standard flags in `compiledata.h`. Is it used for Aclic? ```. /* This file is automatically generated */. #define BUILD_ARCH ""linuxx8664gcc"". #define BUILD_NODE ""Linux oksana-xps139380 5.7.17-2-MANJARO #1 SMP PREEMPT Sat Aug 22 14:58:17 UTC 2020 x86_64 GNU/Linux"". #define CXX ""c++"". #define COMPILER ""/usr/bin/c++"". #define COMPILERVERS ""gcc1020"". #define COMPILERVERSSTR ""c++ (GCC) 10.2.0"". #define MAKESHAREDLIB ""cd $BuildDir ; c++ -fPIC -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles ; c++ $Opt $ObjectFiles -shared $LinkedLibs -o $SharedLib"". #define MAKEEXE ""cd $BuildDir ; c++ -c $Opt -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -W -Woverloaded-virtual -fsigned-char -pthread $IncludePath $SourceFiles; c++ $Opt $ObjectFiles -o $ExeName $LinkedLibs"". #define CXXOPT ""-O3 -DNDEBUG"". #define CXXDEBUG ""-g"". #define ROOTBUILD """". #define LINKEDLIBS ""-L$ROOTSYS/lib -lCore -lRint "". #define INCLUDEPATH ""-I$ROOTSYS/include"". #define OBJEXT ""o"". #define SOEXT ""so"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:25,safety,review,review,25,"Hi Axel, thanks for your review! I have followed up on it, because Oksana is not working on ROOT anymore and I think this is still a relevant improvement. You have any more comments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/pull/6466:25,testability,review,review,25,"Hi Axel, thanks for your review! I have followed up on it, because Oksana is not working on ROOT anymore and I think this is still a relevant improvement. You have any more comments?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6466
https://github.com/root-project/root/issues/6467:367,availability,error,error,367,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:435,availability,error,error,435,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:730,availability,error,error,730,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:806,availability,error,error,806,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:58,deployability,modul,module,58,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:101,deployability,patch,patches,101,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:231,deployability,modul,module,231,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:285,deployability,modul,module,285,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:929,deployability,patch,patch,929,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:965,deployability,build,build,965,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:58,modifiability,modul,module,58,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:231,modifiability,modul,module,231,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:285,modifiability,modul,module,285,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:417,modifiability,inherit,inheritance,417,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:819,modifiability,inherit,inheritance,819,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:367,performance,error,error,367,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:435,performance,error,error,435,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:730,performance,error,error,730,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:806,performance,error,error,806,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:58,safety,modul,module,58,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:101,safety,patch,patches,101,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:231,safety,modul,module,231,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:285,safety,modul,module,285,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:367,safety,error,error,367,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:435,safety,error,error,435,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:730,safety,error,error,730,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:806,safety,error,error,806,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:929,safety,patch,patch,929,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:101,security,patch,patches,101,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:929,security,patch,patch,929,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:167,testability,Trace,Traceback,167,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:367,usability,error,error,367,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:435,usability,error,error,435,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:730,usability,error,error,730,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:806,usability,error,error,806,"Thank you for the report, I tried to import your `Ntuple` module and what I get with master and 6.22 patches (compiled from sources) is this:. ```. >>> import Ntuple. Traceback (most recent call last):. File ""<stdin>"", line 1, in <module>. File ""/home/etejedor/Ntuple.py"", line 4, in <module>. class Ntuple(ROOT.TChain):. KeyError: 'fProofChain'. ```. So there is an error even before constructing the TChain, during inheritance. This error is due to the fact that `fProofChain` is a protected data member of `TChain`, so the issue is the same as for:. https://sft.its.cern.ch/jira/browse/ROOT-11025. https://sft.its.cern.ch/jira/browse/ROOT-10826. On the other hand, if I try both conda ROOT 6.22/02 and master, I indeed get the error you reported when constructing the TChain. This is strange, since the error in the inheritance should definitely happen before. @chrisburr can you think of why there is this difference (e.g. a patch that is applied for the conda build)?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:61,deployability,build,build,61,There definitely shouldn't be anything weird about the conda build. I'll try looking closer and get back to you.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:85,usability,close,closer,85,There definitely shouldn't be anything weird about the conda build. I'll try looking closer and get back to you.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:56,deployability,updat,updating,56,This is all that changed in the conda-recipe as part of updating to 6.22.0:. https://github.com/conda-forge/root-feedstock/pull/89/files. There doesn't seem to be anything suspicious,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:144,reliability,doe,doesn,144,This is all that changed in the conda-recipe as part of updating to 6.22.0:. https://github.com/conda-forge/root-feedstock/pull/89/files. There doesn't seem to be anything suspicious,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:56,safety,updat,updating,56,This is all that changed in the conda-recipe as part of updating to 6.22.0:. https://github.com/conda-forge/root-feedstock/pull/89/files. There doesn't seem to be anything suspicious,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:56,security,updat,updating,56,This is all that changed in the conda-recipe as part of updating to 6.22.0:. https://github.com/conda-forge/root-feedstock/pull/89/files. There doesn't seem to be anything suspicious,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:68,deployability,updat,update,68,"Thank you both for the check. Indeed, if you are quite certain with update changes of conda, maybe it has nothing to do with conda environment. . For me, It works with root 6.18/04 built from source code. So it's probably a version-related issue and not a conda one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:224,deployability,version,version-related,224,"Thank you both for the check. Indeed, if you are quite certain with update changes of conda, maybe it has nothing to do with conda environment. . For me, It works with root 6.18/04 built from source code. So it's probably a version-related issue and not a conda one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:224,integrability,version,version-related,224,"Thank you both for the check. Indeed, if you are quite certain with update changes of conda, maybe it has nothing to do with conda environment. . For me, It works with root 6.18/04 built from source code. So it's probably a version-related issue and not a conda one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:224,modifiability,version,version-related,224,"Thank you both for the check. Indeed, if you are quite certain with update changes of conda, maybe it has nothing to do with conda environment. . For me, It works with root 6.18/04 built from source code. So it's probably a version-related issue and not a conda one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:68,safety,updat,update,68,"Thank you both for the check. Indeed, if you are quite certain with update changes of conda, maybe it has nothing to do with conda environment. . For me, It works with root 6.18/04 built from source code. So it's probably a version-related issue and not a conda one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:68,security,updat,update,68,"Thank you both for the check. Indeed, if you are quite certain with update changes of conda, maybe it has nothing to do with conda environment. . For me, It works with root 6.18/04 built from source code. So it's probably a version-related issue and not a conda one.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:186,deployability,version,versions,186,"Also a different should be noticed: The Python in my conda environment is 3.8.5, and for the PyROOT from source I am using 3.8.3. . I will try to make some comparisons between different versions of environment if i have time later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:186,integrability,version,versions,186,"Also a different should be noticed: The Python in my conda environment is 3.8.5, and for the PyROOT from source I am using 3.8.3. . I will try to make some comparisons between different versions of environment if i have time later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:186,modifiability,version,versions,186,"Also a different should be noticed: The Python in my conda environment is 3.8.5, and for the PyROOT from source I am using 3.8.3. . I will try to make some comparisons between different versions of environment if i have time later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:220,performance,time,time,220,"Also a different should be noticed: The Python in my conda environment is 3.8.5, and for the PyROOT from source I am using 3.8.3. . I will try to make some comparisons between different versions of environment if i have time later.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:95,availability,error,error,95,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:19,deployability,depend,depend,19,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:40,deployability,version,version,40,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:19,integrability,depend,depend,19,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:40,integrability,version,version,40,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:19,modifiability,depend,depend,19,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:40,modifiability,version,version,40,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:83,modifiability,inherit,inheritance,83,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:95,performance,error,error,95,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:19,safety,depend,depend,19,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:95,safety,error,error,95,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:19,testability,depend,depend,19,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:95,usability,error,error,95,"I believe it might depend on the Python version indeed. I am able to reproduce the inheritance error (`KeyError: 'fProofChain'`) with Python2.7 and 3.6.8, but not with 3.8.2 and 3.7.7.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:846,availability,error,error,846,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:77,deployability,version,versions,77,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1836,deployability,modul,module,1836,":9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""Dat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:77,integrability,version,versions,77,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:77,modifiability,version,versions,77,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1330,modifiability,pac,packaged,1330,"lt, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1836,modifiability,modul,module,1836,":9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""Dat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:2015,modifiability,pac,packaged,2015," other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:2497,modifiability,pac,packaged,2497," other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:846,performance,error,error,846,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:243,safety,test,test,243,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:846,safety,error,error,846,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1022,safety,test,test,1022,"h creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1153,safety,test,test,1153,"nstead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 --",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1810,safety,input,input-,1810,"ree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1836,safety,modul,module,1836,":9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""Dat",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:243,testability,test,test,243,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1022,testability,test,test,1022,"h creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1153,testability,test,test,1153,"nstead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 --",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1766,testability,Trace,Traceback,1766,"ame):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:454,usability,Interact,Interactive,454,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:558,usability,help,help,558,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:579,usability,help,help,579,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:846,usability,error,error,846,"I've just had a look with creating environments and indeed, different Python versions behave very differently and the segfaults go away if I use `python` instead of `ipython`. ### Examples. Each was created with:. ```bash. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1214,usability,support,supported,1214,"sh. mamba create --name test root python=X.Y. ```. ### Python 2.7. ```python. Python 2.7.18 |Anaconda, Inc.| (default, Apr 23 2020, 22:17:58). Type ""copyright"", ""credits"" or ""license"" for more information. IPython 5.8.0 -- An enhanced Interactive Python. ? -> Introduction and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: impo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1482,usability,Interact,Interactive,1482,"ion and overview of IPython's features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1515,usability,help,help,1515," features. %quickref -> Quick reference. help -> Python's own help system. object? -> Details about 'object', use 'object??' for extra details. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-fo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:1810,usability,input,input-,1810,"ree""). ...:. input_line_38:9:43: error: base class '::TChain' has private copy constructor. Dispatcher1(const Dispatcher1& other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pa",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:2168,usability,Interact,Interactive,2168," other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:2201,usability,help,help,2201," other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:2650,usability,Interact,Interactive,2650," other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:2683,usability,help,help,2683," other) : TChain(other), m_self(other.m_self, this) {}. ^. /home/cburr/miniconda3/envs/test/include/TChain.h:49:4: note: declared private here. TChain(const TChain&); // not implemented. ^. /home/cburr/miniconda3/envs/test/bin/ipython:4: RuntimeWarning: no python-side overrides supported. import re. Out[1]: <cppyy.gbl.TChain object at 0x(nil)>. ```. ### Python 3.6. ```python. Python 3.6.11 | packaged by conda-forge | (default, Aug 5 2020, 20:06:33). Type 'copyright', 'credits' or 'license' for more information. IPython 7.16.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). ---------------------------------------------------------------------------. KeyError Traceback (most recent call last). <ipython-input-1-cdc669878b88> in <module>. 2 import numpy as np. 3. ----> 4 class Ntuple(ROOT.TChain):. 5 def __init__(self, name):. 6 pass. KeyError: 'fProofChain'. ```. ### Python 3.7. ```python. Python 3.7.8 | packaged by conda-forge | (default, Jul 31 2020, 02:23:50). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```. ### Python 3.8. ```python. Python 3.8.5 | packaged by conda-forge | (default, Sep 24 2020, 16:55:52). Type 'copyright', 'credits' or 'license' for more information. IPython 7.18.1 -- An enhanced Interactive Python. Type '?' for help. In [1]: import ROOT. ...: import numpy as np. ...:. ...: class Ntuple(ROOT.TChain):. ...: def __init__(self, name):. ...: pass. ...:. ...: Ntuple(""DataTree""). Out[1]: *** Break *** segmentation violation. *** Break *** segmentation violation. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:226,availability,error,error,226,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:399,availability,error,error,399,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:474,availability,avail,available,474,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:95,modifiability,inherit,inheritance,95,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:226,performance,error,error,226,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:399,performance,error,error,399,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:474,reliability,availab,available,474,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:149,safety,test,tests,149,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:226,safety,error,error,226,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:399,safety,error,error,399,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:474,safety,avail,available,474,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:474,security,availab,available,474,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:149,testability,test,tests,149,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:226,usability,error,error,226,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:399,usability,error,error,399,"Thanks @chrisburr , these are all with 6.22/02, right? In master there are a few fixes for the inheritance, so I would try with it instead. From the tests I have done so far (master, compiled from sources):. - Python <= 3.6 : error when defining the derived Python class (`KeyError: 'fProofChain'`). This is known and it is the same issue as the two JIRA tickets referenced above. - Python >= 3.7 : error during the construction of the derived class object (`no constructor available for 'TChain'`). This one I need to investigate. I didn't try python/ipython.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:272,availability,ping,ping,272,"Python 3 was 6.22.2, Python 2.7 used 6.22.0. (Python 2.7 isn't supported in conda-forge any more and I rarely make the effort to rebuild the py2k branch.). I've stopped looking now as I think you're in a much better position than me to make sense of what the issue is but ping me if I can be useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:63,usability,support,supported,63,"Python 3 was 6.22.2, Python 2.7 used 6.22.0. (Python 2.7 isn't supported in conda-forge any more and I rarely make the effort to rebuild the py2k branch.). I've stopped looking now as I think you're in a much better position than me to make sense of what the issue is but ping me if I can be useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:161,usability,stop,stopped,161,"Python 3 was 6.22.2, Python 2.7 used 6.22.0. (Python 2.7 isn't supported in conda-forge any more and I rarely make the effort to rebuild the py2k branch.). I've stopped looking now as I think you're in a much better position than me to make sense of what the issue is but ping me if I can be useful.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:19,availability,error,error,19,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:42,availability,avail,available,42,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:512,availability,error,error,512,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:19,performance,error,error,19,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:512,performance,error,error,512,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:42,reliability,availab,available,42,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:208,reliability,doe,does,208,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:19,safety,error,error,19,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:42,safety,avail,available,42,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:488,safety,prevent,prevent,488,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:512,safety,error,error,512,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:42,security,availab,available,42,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:488,security,preven,prevent,488,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:19,usability,error,error,19,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6467:512,usability,error,error,512,"The second kind of error (`no constructor available for 'TChain'`) happens when invoking the constructor of TChain from `__init__`, in particular an overload with default arguments. The issue is that a match does not happen with the `(const char *name, const char *title="""")` overload when just providing `name`. This needs to be fixed. @Allen319 , as a temporary workaround in case you need it, you can do `n = Ntuple(""DataTree"", """")` instead of `n = Ntuple(""DataTree"")` and that should prevent the constructor error.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6467
https://github.com/root-project/root/issues/6468:129,availability,fault,fault,129,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:8,deployability,instal,installing,8,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:129,energy efficiency,fault,fault,129,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:244,interoperability,bind,bindings,244,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:462,interoperability,bind,bindings,462,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:244,modifiability,bind,bindings,244,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:462,modifiability,bind,bindings,462,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:129,performance,fault,fault,129,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:1537,performance,cach,cache,1537,">first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12, fConverter = 0x555556ff99f0, fEnclosingScope = 24, . fName = 0x7fffdc42ebf0}. (gdb) p *pyobj. $10 = {ob_base = {ob_refcnt = 2, ob_type = 0x555558872b90}, fObject = 0x55555781aeb0, fFlags = 1031}. ```. Looks like maybe there is something wrong with the cppyy data member cache in this case? (whatever that is).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:1646,performance,cach,cache,1646,">first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12, fConverter = 0x555556ff99f0, fEnclosingScope = 24, . fName = 0x7fffdc42ebf0}. (gdb) p *pyobj. $10 = {ob_base = {ob_refcnt = 2, ob_type = 0x555558872b90}, fObject = 0x55555781aeb0, fFlags = 1031}. ```. Looks like maybe there is something wrong with the cppyy data member cache in this case? (whatever that is).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:1702,performance,cach,cache,1702,">first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12, fConverter = 0x555556ff99f0, fEnclosingScope = 24, . fName = 0x7fffdc42ebf0}. (gdb) p *pyobj. $10 = {ob_base = {ob_refcnt = 2, ob_type = 0x555558872b90}, fObject = 0x55555781aeb0, fFlags = 1031}. ```. Looks like maybe there is something wrong with the cppyy data member cache in this case? (whatever that is).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:1723,performance,cach,cache,1723,">first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12, fConverter = 0x555556ff99f0, fEnclosingScope = 24, . fName = 0x7fffdc42ebf0}. (gdb) p *pyobj. $10 = {ob_base = {ob_refcnt = 2, ob_type = 0x555558872b90}, fObject = 0x55555781aeb0, fFlags = 1031}. ```. Looks like maybe there is something wrong with the cppyy data member cache in this case? (whatever that is).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:2272,performance,cach,cache,2272,">first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12, fConverter = 0x555556ff99f0, fEnclosingScope = 24, . fName = 0x7fffdc42ebf0}. (gdb) p *pyobj. $10 = {ob_base = {ob_refcnt = 2, ob_type = 0x555558872b90}, fObject = 0x55555781aeb0, fFlags = 1031}. ```. Looks like maybe there is something wrong with the cppyy data member cache in this case? (whatever that is).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:129,reliability,fault,fault,129,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:129,safety,fault,fault,129,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:100,security,sign,signal,100,". After installing the appropriate debuginfo, I have a bit more information:. ```. Program received signal SIGSEGV, Segmentation fault. CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. 33 if (it->first == pyprop->fOffset) {. (gdb) bt. #0 CPyCppyy::pp_get (pyprop=0x7fffdc42ebb0, pyobj=0x7fffdc42ec40) at /usr/src/debug/root-6.22.02-1.fc32.x86_64/bindings/pyroot/cppyy/CPyCppyy/src/CPPDataMember.cxx:33. #1 0x00007ffff7b6bd27 in _PyObject_GenericGetAttrWithDict () from /lib64/libpython3.8.so.1.0. #2 0x00007ffff7b5f713 in _PyEval_EvalFrameDefault () from /lib64/libpython3.8.so.1.0. #3 0x00007ffff7b5dd54 in _PyEval_EvalCodeWithName () from /lib64/libpython3.8.so.1.0. #4 0x00007ffff7bd8e79 in PyEval_EvalCodeEx () from /lib64/libpython3.8.so.1.0. #5 0x00007ffff7bd8e3b in PyEval_EvalCode () from /lib64/libpython3.8.so.1.0. #6 0x00007ffff7bfa068 in run_eval_code_obj () from /lib64/libpython3.8.so.1.0. #7 0x00007ffff7bf9783 in run_mod () from /lib64/libpython3.8.so.1.0. #8 0x00007ffff7ae59ce in PyRun_FileExFlags () from /lib64/libpython3.8.so.1.0. #9 0x00007ffff7ae5186 in PyRun_SimpleFileExFlags () from /lib64/libpython3.8.so.1.0. #10 0x00007ffff7adc351 in Py_RunMain.cold () from /lib64/libpython3.8.so.1.0. #11 0x00007ffff7bcc969 in Py_BytesMain () from /lib64/libpython3.8.so.1.0. #12 0x00007ffff7db2042 in __libc_start_main () from /lib64/libc.so.6. #13 0x000055555555507e in _start (). (gdb) list. 28 {. 29 // cache lookup for low level views. 30 if (pyprop->fFlags & kIsCachable) {. 31 CPyCppyy::CI_DatamemberCache_t& cache = pyobj->GetDatamemberCache();. 32 for (auto it = cache.begin(); it != cache.end(); ++it) {. 33 if (it->first == pyprop->fOffset) {. 34 if (it->second) {. 35 Py_INCREF(it->second);. 36 return it->second;. 37 } else. (gdb) p *pyprop. $3 = {ob_base = {ob_refcnt = 2, ob_type = 0x7fffe9da7240 <CPyCppyy::CPPDataMember_Type>}, fOffset = 24, fFlags = 12",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:322,deployability,API,API,322,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:306,integrability,pub,public,306,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:322,integrability,API,API,322,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:322,interoperability,API,API,322,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:50,performance,memor,memory,50,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:103,performance,cach,cache,103,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:138,performance,I/O,I/O,138,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:404,performance,I/O,I/O,404,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:529,performance,memor,memory,529,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:664,performance,perform,performance,664,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:483,reliability,doe,does,483,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:50,usability,memor,memory,50,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:529,usability,memor,memory,529,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:664,usability,perform,performance,664,"> suggests that cppyy is reading some unallocated memory. > something wrong with the cppyy data member cache in this case. nah, just ROOT I/O scribbling where it should not b/c the TTree pythonizations pass references to `CPPInstance` internals that they should not touch (`CPPInstance` is not part of the public CPyCppyy API b/c the representation in PyPy/cppyy is quite different). And yes, after ROOT I/O has (unwittingly, to be fair) corrupted the `CPPInstance` internals, cppyy does, indeed, poke in all the wrong places in memory. > (whatever that is). A feature that allows you to write `ev.foo[i]` in a loop and not lose an order of magnitude (or more) in performance.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:270,energy efficiency,Load,Load,270,"Thank you for the report @cozzyd , I'll see how I can fix the `SetBranchAddress` pythonization. Another option you have is not to use `SetBranchAddress`, but just iterate on the tree and access the branch as an attribute like this:. ```python. import ROOT. ROOT.gSystem.Load(""libmwe.so""). f = ROOT.TFile(""out.root"");. t = f.Get(""tree"");. for entry in t:. ev = entry.event. print(ev.iev). print(ev.bar). print(ev.foo[0]). print(ev.foo[1]). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:366,integrability,event,event,366,"Thank you for the report @cozzyd , I'll see how I can fix the `SetBranchAddress` pythonization. Another option you have is not to use `SetBranchAddress`, but just iterate on the tree and access the branch as an attribute like this:. ```python. import ROOT. ROOT.gSystem.Load(""libmwe.so""). f = ROOT.TFile(""out.root"");. t = f.Get(""tree"");. for entry in t:. ev = entry.event. print(ev.iev). print(ev.bar). print(ev.foo[0]). print(ev.foo[1]). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:270,performance,Load,Load,270,"Thank you for the report @cozzyd , I'll see how I can fix the `SetBranchAddress` pythonization. Another option you have is not to use `SetBranchAddress`, but just iterate on the tree and access the branch as an attribute like this:. ```python. import ROOT. ROOT.gSystem.Load(""libmwe.so""). f = ROOT.TFile(""out.root"");. t = f.Get(""tree"");. for entry in t:. ev = entry.event. print(ev.iev). print(ev.bar). print(ev.foo[0]). print(ev.foo[1]). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:187,security,access,access,187,"Thank you for the report @cozzyd , I'll see how I can fix the `SetBranchAddress` pythonization. Another option you have is not to use `SetBranchAddress`, but just iterate on the tree and access the branch as an attribute like this:. ```python. import ROOT. ROOT.gSystem.Load(""libmwe.so""). f = ROOT.TFile(""out.root"");. t = f.Get(""tree"");. for entry in t:. ev = entry.event. print(ev.iev). print(ev.bar). print(ev.foo[0]). print(ev.foo[1]). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:75,integrability,event,event,75,"Thanks @etejedor . It also looks like once I GetEntry once, I can access t.event (which lets me do random access easily enough by getting the Entry I want). Either way, it would be good to fix this for the benefit of keeping old code working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:66,security,access,access,66,"Thanks @etejedor . It also looks like once I GetEntry once, I can access t.event (which lets me do random access easily enough by getting the Entry I want). Either way, it would be good to fix this for the benefit of keeping old code working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/issues/6468:106,security,access,access,106,"Thanks @etejedor . It also looks like once I GetEntry once, I can access t.event (which lets me do random access easily enough by getting the Entry I want). Either way, it would be good to fix this for the benefit of keeping old code working.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6468
https://github.com/root-project/root/pull/6469:185,availability,down,down,185,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:230,availability,fault,faulty,230,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:230,energy efficiency,fault,faulty,230,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:230,performance,fault,faulty,230,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:230,reliability,fault,faulty,230,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:120,safety,test,testing,120,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:230,safety,fault,faulty,230,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:120,testability,test,testing,120,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:214,testability,simpl,simple,214,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:148,usability,Close,Close,148,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:214,usability,simpl,simple,214,Note:. Such big PR is not good because they are hard to debug in case of problem. The recent recent example with the PR testing IsBatch in TCanvas::Close prove it. It was easy to track down because it was a single simple PR. This faulty code is present in this big PR. I suggest you remove this big PR. We cannot be confident with it.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:19,availability,fault,faulty,19,"Hi @couet, . >This faulty code is present in this big PR. . yes. That is why it is WIP. . My idea is to chop big PR into smaller pieces and discuss/merge them. But to keep the big PR so one can actually see the list of changes until there will be none. Does it fit to the repository policy? If not, I will remove it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:19,energy efficiency,fault,faulty,19,"Hi @couet, . >This faulty code is present in this big PR. . yes. That is why it is WIP. . My idea is to chop big PR into smaller pieces and discuss/merge them. But to keep the big PR so one can actually see the list of changes until there will be none. Does it fit to the repository policy? If not, I will remove it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:272,integrability,repositor,repository,272,"Hi @couet, . >This faulty code is present in this big PR. . yes. That is why it is WIP. . My idea is to chop big PR into smaller pieces and discuss/merge them. But to keep the big PR so one can actually see the list of changes until there will be none. Does it fit to the repository policy? If not, I will remove it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:272,interoperability,repositor,repository,272,"Hi @couet, . >This faulty code is present in this big PR. . yes. That is why it is WIP. . My idea is to chop big PR into smaller pieces and discuss/merge them. But to keep the big PR so one can actually see the list of changes until there will be none. Does it fit to the repository policy? If not, I will remove it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:19,performance,fault,faulty,19,"Hi @couet, . >This faulty code is present in this big PR. . yes. That is why it is WIP. . My idea is to chop big PR into smaller pieces and discuss/merge them. But to keep the big PR so one can actually see the list of changes until there will be none. Does it fit to the repository policy? If not, I will remove it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:19,reliability,fault,faulty,19,"Hi @couet, . >This faulty code is present in this big PR. . yes. That is why it is WIP. . My idea is to chop big PR into smaller pieces and discuss/merge them. But to keep the big PR so one can actually see the list of changes until there will be none. Does it fit to the repository policy? If not, I will remove it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:253,reliability,Doe,Does,253,"Hi @couet, . >This faulty code is present in this big PR. . yes. That is why it is WIP. . My idea is to chop big PR into smaller pieces and discuss/merge them. But to keep the big PR so one can actually see the list of changes until there will be none. Does it fit to the repository policy? If not, I will remove it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:19,safety,fault,faulty,19,"Hi @couet, . >This faulty code is present in this big PR. . yes. That is why it is WIP. . My idea is to chop big PR into smaller pieces and discuss/merge them. But to keep the big PR so one can actually see the list of changes until there will be none. Does it fit to the repository policy? If not, I will remove it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:283,security,polic,policy,283,"Hi @couet, . >This faulty code is present in this big PR. . yes. That is why it is WIP. . My idea is to chop big PR into smaller pieces and discuss/merge them. But to keep the big PR so one can actually see the list of changes until there will be none. Does it fit to the repository policy? If not, I will remove it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:111,availability,fault,faulty,111,"Well, we have other PRs tagged [WIP] ... so I guess that's fine.. I just do no like the idea of having clearly faulty code in a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:111,energy efficiency,fault,faulty,111,"Well, we have other PRs tagged [WIP] ... so I guess that's fine.. I just do no like the idea of having clearly faulty code in a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:111,performance,fault,faulty,111,"Well, we have other PRs tagged [WIP] ... so I guess that's fine.. I just do no like the idea of having clearly faulty code in a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:111,reliability,fault,faulty,111,"Well, we have other PRs tagged [WIP] ... so I guess that's fine.. I just do no like the idea of having clearly faulty code in a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:111,safety,fault,faulty,111,"Well, we have other PRs tagged [WIP] ... so I guess that's fine.. I just do no like the idea of having clearly faulty code in a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:103,usability,clear,clearly,103,"Well, we have other PRs tagged [WIP] ... so I guess that's fine.. I just do no like the idea of having clearly faulty code in a PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:151,availability,fault,faulty,151,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:175,availability,fault,fault,175,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:435,deployability,log,logical,435,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:151,energy efficiency,fault,faulty,151,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:175,energy efficiency,fault,fault,175,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:151,performance,fault,faulty,151,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:175,performance,fault,fault,175,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:151,reliability,fault,faulty,151,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:175,reliability,fault,fault,175,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:151,safety,fault,faulty,151,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:175,safety,fault,fault,175,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:435,safety,log,logical,435,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:435,security,log,logical,435,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:435,testability,log,logical,435,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:143,usability,clear,clearly,143,"Dear @couet ,. > so I guess that's fine.. . OK. I've put [Do not merge] to the title, as I don't see if there is a label for such requests. . >clearly faulty code in a PR. My fault. I've replaced that with suggestion from @pcanal. >This sounds like an ""obvious thing"" ...padsave is equal to gPad on line 780... did I missed soothing ? Maybe that is because of cast. I was trying to pay with it, but w/o much success. The IsBatch() was logical and did the job for that separate case... Will have a look soon. Best regards,. Andrii. Edit: but for the proper cast one should replace C-like cast with something else.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:20,deployability,log,logical,20,"> The IsBatch() was logical. No it is not. IsBatch ""just"" mean that there is attached screen but the code is still dealing with pad and canvas and current canvases (for example to store them in pdf file or ROOT file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:147,energy efficiency,current,current,147,"> The IsBatch() was logical. No it is not. IsBatch ""just"" mean that there is attached screen but the code is still dealing with pad and canvas and current canvases (for example to store them in pdf file or ROOT file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:20,safety,log,logical,20,"> The IsBatch() was logical. No it is not. IsBatch ""just"" mean that there is attached screen but the code is still dealing with pad and canvas and current canvases (for example to store them in pdf file or ROOT file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:20,security,log,logical,20,"> The IsBatch() was logical. No it is not. IsBatch ""just"" mean that there is attached screen but the code is still dealing with pad and canvas and current canvases (for example to store them in pdf file or ROOT file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:20,testability,log,logical,20,"> The IsBatch() was logical. No it is not. IsBatch ""just"" mean that there is attached screen but the code is still dealing with pad and canvas and current canvases (for example to store them in pdf file or ROOT file).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/pull/6469:23,performance,content,content,23,Closing this PR as the content was either merged or present in other PRs. Thanks to all the participants!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6469
https://github.com/root-project/root/issues/6470:66,energy efficiency,current,current,66,Thank you for the complete report! I confirm I can reproduce with current master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:18,safety,compl,complete,18,Thank you for the complete report! I confirm I can reproduce with current master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:18,security,compl,complete,18,Thank you for the complete report! I confirm I can reproduce with current master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:37,usability,confirm,confirm,37,Thank you for the complete report! I confirm I can reproduce with current master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:140,deployability,automat,automatically,140,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:126,integrability,wrap,wrapper,126,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:126,interoperability,wrapper,wrapper,126,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:230,modifiability,inherit,inherits,230,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:830,modifiability,inherit,inherits,830,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:782,reliability,doe,does,782,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:140,testability,automat,automatically,140,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:20,usability,behavi,behaviour,20,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:545,usability,behavi,behaviour,545,"The reason for this behaviour seems to be that all the Python classes in the reproducer (`B`, `C` and `D`) get a `Dispatcher` wrapper class automatically created (`Dispatcher1`, `Dispatcher2` and `Dispatcher3`, respectively) that inherits from `A`. Since for `B` and `C` `fun1` is overridden in Python, `Dispatcher1` and `Dispatcher2` define a `fun1` implementation that redirects the call to the Python `fun1` of `B` and `C`, respectively. That is not the case of `D`, whose `Dispatcher3` defines no `fun1`. What I described above explains the behaviour reported in this ticket. When calling `d.fun2()`, which in turn calls `fun1`, the latter will be resolved to `A::fun1`, whereas one would expect that it is the `fun1` defined in Python by `B` that is called instead. This issue does not exist in upstream cppyy: `Dispatcher3` inherits from `Dispatcher1` (`B`'s dispatcher) and not from `A` directly, which means that the call to `fun1` from `fun2` will be resolved to `Dispatcher1::fun1`, which will redirect the call to Python (`B`'s `fun1`).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:15,reliability,doe,does,15,"Hi Vanya, what does this break for LHCb, how critical is this?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:88,energy efficiency,current,current,88,"Dear Axel,. I cannot speak on behalf of LHCb, but it affects my own project and several current of physics analyses by our group. It definitely prevents us from migration to new PyROOT - without the fix we are forced to use ROOT 6.20. . Cheers, Vanya.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:144,safety,prevent,prevents,144,"Dear Axel,. I cannot speak on behalf of LHCb, but it affects my own project and several current of physics analyses by our group. It definitely prevents us from migration to new PyROOT - without the fix we are forced to use ROOT 6.20. . Cheers, Vanya.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6470:144,security,preven,prevents,144,"Dear Axel,. I cannot speak on behalf of LHCb, but it affects my own project and several current of physics analyses by our group. It definitely prevents us from migration to new PyROOT - without the fix we are forced to use ROOT 6.20. . Cheers, Vanya.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6470
https://github.com/root-project/root/issues/6471:4,deployability,updat,updates,4,Any updates in this field?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6471
https://github.com/root-project/root/issues/6471:4,safety,updat,updates,4,Any updates in this field?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6471
https://github.com/root-project/root/issues/6471:4,security,updat,updates,4,Any updates in this field?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6471
https://github.com/root-project/root/issues/6471:81,deployability,depend,dependencies,81,Related forum post: https://root-forum.cern.ch/t/reading-root-files-with-minimal-dependencies/58899/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6471
https://github.com/root-project/root/issues/6471:81,integrability,depend,dependencies,81,Related forum post: https://root-forum.cern.ch/t/reading-root-files-with-minimal-dependencies/58899/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6471
https://github.com/root-project/root/issues/6471:81,modifiability,depend,dependencies,81,Related forum post: https://root-forum.cern.ch/t/reading-root-files-with-minimal-dependencies/58899/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6471
https://github.com/root-project/root/issues/6471:81,safety,depend,dependencies,81,Related forum post: https://root-forum.cern.ch/t/reading-root-files-with-minimal-dependencies/58899/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6471
https://github.com/root-project/root/issues/6471:81,testability,depend,dependencies,81,Related forum post: https://root-forum.cern.ch/t/reading-root-files-with-minimal-dependencies/58899/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6471
https://github.com/root-project/root/issues/6471:73,usability,minim,minimal-dependencies,73,Related forum post: https://root-forum.cern.ch/t/reading-root-files-with-minimal-dependencies/58899/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6471
https://github.com/root-project/root/issues/6473:592,deployability,artifact,artifact,592,"It's debatable whether it's a bug or a feature. You can set the column width with the option `colsize`:. ```cpp. TTree t;. int x = 42;. t.Branch(""out_x"", &x);. t.Fill();. // truncated column name. t.Scan();. // full column name. t.Scan("""", """", ""colsize=32"");. ```. ```. ************************. * Row * out_x.out *. ************************. * 0 * 42 *. ************************. ***********************************************. * Row * out_x.out_x *. ***********************************************. * 0 * 42 *. ***********************************************. ```. So the truncation is an artifact of the smallish default column width. Not sure what to do now with this information :sweat_smile: :",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:40,reliability,doe,does,40,"I would have called it feature since it does exactly what it's supposed to do ;) But I agree, the truncation may be confusing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:468,availability,sli,slightly,468,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]. In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:468,reliability,sli,slightly,468,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]. In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:482,safety,compl,complicated,482,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]. In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:482,security,compl,complicated,482,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]. In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:66,testability,simpl,simplest,66,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]. In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:124,testability,simpl,simplify,124,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]. In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:66,usability,simpl,simplest,66,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]. In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:124,usability,simpl,simplify,124,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]. In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/issues/6473:287,usability,clear,clear,287,"Both limitation/feature are present at the moment because of the ""simplest to implement factor"". I guess adding the code to simplify the name when possible should be straight-forward-ish. Switching from a fixed columns size by default to ""fit the name of all the columns"" should also be clear/straight-forward [albeit it might need a up to a reasonable maximum ...]. In case the name is truncated it might be usefull to add trailing dots .. but that might actually be slightly more complicated",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6473
https://github.com/root-project/root/pull/6478:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6478
https://github.com/root-project/root/pull/6478:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6478
https://github.com/root-project/root/pull/6486:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6486
https://github.com/root-project/root/pull/6488:25,availability,error,error,25,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:57,availability,error,error,57,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:88,deployability,log,log,88,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:31,integrability,messag,message,31,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:31,interoperability,messag,message,31,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:25,performance,error,error,25,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:57,performance,error,error,57,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:25,safety,error,error,25,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:57,safety,error,error,57,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:88,safety,log,log,88,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:88,security,log,log,88,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:65,testability,context,context,65,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:88,testability,log,log,88,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:25,usability,error,error,25,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6488:57,usability,error,error,57,"Could you add the actual error message (and not just the error's context) to the commit log, please?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6488
https://github.com/root-project/root/pull/6493:229,deployability,Build,Build,229,"I agree Philipe, thanks a lot for the suggestion. . I did not know about this trick, is it documented somewhere ? . Also the current situation when creating an Histogram is not thread safe overall, see for example code in . TH1::Build. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. and a similar issues is in TGraph2D::GetHistogram(). Maybe worth opening a new Issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:125,energy efficiency,current,current,125,"I agree Philipe, thanks a lot for the suggestion. . I did not know about this trick, is it documented somewhere ? . Also the current situation when creating an Histogram is not thread safe overall, see for example code in . TH1::Build. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. and a similar issues is in TGraph2D::GetHistogram(). Maybe worth opening a new Issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:184,safety,safe,safe,184,"I agree Philipe, thanks a lot for the suggestion. . I did not know about this trick, is it documented somewhere ? . Also the current situation when creating an Histogram is not thread safe overall, see for example code in . TH1::Build. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. and a similar issues is in TGraph2D::GetHistogram(). Maybe worth opening a new Issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:91,usability,document,documented,91,"I agree Philipe, thanks a lot for the suggestion. . I did not know about this trick, is it documented somewhere ? . Also the current situation when creating an Histogram is not thread safe overall, see for example code in . TH1::Build. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. and a similar issues is in TGraph2D::GetHistogram(). Maybe worth opening a new Issue.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:27,usability,document,documentation,27,Indeed it seems the actual documentation is sparse. (See the new issue https://github.com/root-project/root/issues/6500),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:363,availability,state,state,363,"The line. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. is thread ""safe"" because the container used is itself looking the access see:. https://github.com/root-project/root/blob/e0e721efc69b9b106a7b251caa94555ad195d945/core/base/src/TDirectory.cxx#L241. and because gDirectory is thread local. Of course, since TH1::AddDirectoryStatus() is global state, by definition the behavior can be affected by other threads. Humm actually, there *is* a problem. In order that code to really be thread safe `TH1::fgAddDirectory` needs to be an `std::atomic`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:102,deployability,contain,container,102,"The line. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. is thread ""safe"" because the container used is itself looking the access see:. https://github.com/root-project/root/blob/e0e721efc69b9b106a7b251caa94555ad195d945/core/base/src/TDirectory.cxx#L241. and because gDirectory is thread local. Of course, since TH1::AddDirectoryStatus() is global state, by definition the behavior can be affected by other threads. Humm actually, there *is* a problem. In order that code to really be thread safe `TH1::fgAddDirectory` needs to be an `std::atomic`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:235,energy efficiency,core,core,235,"The line. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. is thread ""safe"" because the container used is itself looking the access see:. https://github.com/root-project/root/blob/e0e721efc69b9b106a7b251caa94555ad195d945/core/base/src/TDirectory.cxx#L241. and because gDirectory is thread local. Of course, since TH1::AddDirectoryStatus() is global state, by definition the behavior can be affected by other threads. Humm actually, there *is* a problem. In order that code to really be thread safe `TH1::fgAddDirectory` needs to be an `std::atomic`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:363,integrability,state,state,363,"The line. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. is thread ""safe"" because the container used is itself looking the access see:. https://github.com/root-project/root/blob/e0e721efc69b9b106a7b251caa94555ad195d945/core/base/src/TDirectory.cxx#L241. and because gDirectory is thread local. Of course, since TH1::AddDirectoryStatus() is global state, by definition the behavior can be affected by other threads. Humm actually, there *is* a problem. In order that code to really be thread safe `TH1::fgAddDirectory` needs to be an `std::atomic`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:84,safety,safe,safe,84,"The line. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. is thread ""safe"" because the container used is itself looking the access see:. https://github.com/root-project/root/blob/e0e721efc69b9b106a7b251caa94555ad195d945/core/base/src/TDirectory.cxx#L241. and because gDirectory is thread local. Of course, since TH1::AddDirectoryStatus() is global state, by definition the behavior can be affected by other threads. Humm actually, there *is* a problem. In order that code to really be thread safe `TH1::fgAddDirectory` needs to be an `std::atomic`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:507,safety,safe,safe,507,"The line. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. is thread ""safe"" because the container used is itself looking the access see:. https://github.com/root-project/root/blob/e0e721efc69b9b106a7b251caa94555ad195d945/core/base/src/TDirectory.cxx#L241. and because gDirectory is thread local. Of course, since TH1::AddDirectoryStatus() is global state, by definition the behavior can be affected by other threads. Humm actually, there *is* a problem. In order that code to really be thread safe `TH1::fgAddDirectory` needs to be an `std::atomic`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:139,security,access,access,139,"The line. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. is thread ""safe"" because the container used is itself looking the access see:. https://github.com/root-project/root/blob/e0e721efc69b9b106a7b251caa94555ad195d945/core/base/src/TDirectory.cxx#L241. and because gDirectory is thread local. Of course, since TH1::AddDirectoryStatus() is global state, by definition the behavior can be affected by other threads. Humm actually, there *is* a problem. In order that code to really be thread safe `TH1::fgAddDirectory` needs to be an `std::atomic`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:388,usability,behavi,behavior,388,"The line. https://root.cern.ch/root/html606/TH1_8cxx_source.html#l00728. is thread ""safe"" because the container used is itself looking the access see:. https://github.com/root-project/root/blob/e0e721efc69b9b106a7b251caa94555ad195d945/core/base/src/TDirectory.cxx#L241. and because gDirectory is thread local. Of course, since TH1::AddDirectoryStatus() is global state, by definition the behavior can be affected by other threads. Humm actually, there *is* a problem. In order that code to really be thread safe `TH1::fgAddDirectory` needs to be an `std::atomic`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:44,deployability,contain,container,44,Thank you Philippe. . Nice to know that the container as gDirectory is using RW locks. Are also other lists accessible by gROOT using similar locks ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:80,performance,lock,locks,80,Thank you Philippe. . Nice to know that the container as gDirectory is using RW locks. Are also other lists accessible by gROOT using similar locks ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:142,performance,lock,locks,142,Thank you Philippe. . Nice to know that the container as gDirectory is using RW locks. Are also other lists accessible by gROOT using similar locks ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:80,security,lock,locks,80,Thank you Philippe. . Nice to know that the container as gDirectory is using RW locks. Are also other lists accessible by gROOT using similar locks ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:108,security,access,accessible,108,Thank you Philippe. . Nice to know that the container as gDirectory is using RW locks. Are also other lists accessible by gROOT using similar locks ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:142,security,lock,locks,142,Thank you Philippe. . Nice to know that the container as gDirectory is using RW locks. Are also other lists accessible by gROOT using similar locks ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:55,deployability,log,log,55,"Yes, see for example the list of commits shown by `git log -S UseRWLock` and in particular 2ca647d3e7342c24603b6711edc0ed44d57baa2e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:55,safety,log,log,55,"Yes, see for example the list of commits shown by `git log -S UseRWLock` and in particular 2ca647d3e7342c24603b6711edc0ed44d57baa2e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:55,security,log,log,55,"Yes, see for example the list of commits shown by `git log -S UseRWLock` and in particular 2ca647d3e7342c24603b6711edc0ed44d57baa2e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:55,testability,log,log,55,"Yes, see for example the list of commits shown by `git log -S UseRWLock` and in particular 2ca647d3e7342c24603b6711edc0ed44d57baa2e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:62,usability,UseR,UseRWLock,62,"Yes, see for example the list of commits shown by `git log -S UseRWLock` and in particular 2ca647d3e7342c24603b6711edc0ed44d57baa2e",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:52,availability,operat,operations,52,"Those should probably stay because it is a ""set"" of operations. Without the lock and if multiple threads are creating a TFormula with the same name at the same time then the Find/Remove/Add would be intermixed, resulting in unpredictable results (for example 2 formula with the same name would then be allowed in the list).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:199,modifiability,interm,intermixed,199,"Those should probably stay because it is a ""set"" of operations. Without the lock and if multiple threads are creating a TFormula with the same name at the same time then the Find/Remove/Add would be intermixed, resulting in unpredictable results (for example 2 formula with the same name would then be allowed in the list).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:76,performance,lock,lock,76,"Those should probably stay because it is a ""set"" of operations. Without the lock and if multiple threads are creating a TFormula with the same name at the same time then the Find/Remove/Add would be intermixed, resulting in unpredictable results (for example 2 formula with the same name would then be allowed in the list).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:160,performance,time,time,160,"Those should probably stay because it is a ""set"" of operations. Without the lock and if multiple threads are creating a TFormula with the same name at the same time then the Find/Remove/Add would be intermixed, resulting in unpredictable results (for example 2 formula with the same name would then be allowed in the list).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6493:76,security,lock,lock,76,"Those should probably stay because it is a ""set"" of operations. Without the lock and if multiple threads are creating a TFormula with the same name at the same time then the Find/Remove/Add would be intermixed, resulting in unpredictable results (for example 2 formula with the same name would then be allowed in the list).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6493
https://github.com/root-project/root/pull/6497:11,deployability,build,build,11,@phsft-bot build just on mac1015/cxx17,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6497
https://github.com/root-project/root/pull/6498:83,deployability,fail,fail,83,> It would probably be good to add a test for this ... Problem with test - it must fail anyway. Just avoid invalid arguments in TString::Replace. I will adjust commit soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6498
https://github.com/root-project/root/pull/6498:83,reliability,fail,fail,83,> It would probably be good to add a test for this ... Problem with test - it must fail anyway. Just avoid invalid arguments in TString::Replace. I will adjust commit soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6498
https://github.com/root-project/root/pull/6498:37,safety,test,test,37,> It would probably be good to add a test for this ... Problem with test - it must fail anyway. Just avoid invalid arguments in TString::Replace. I will adjust commit soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6498
https://github.com/root-project/root/pull/6498:68,safety,test,test,68,> It would probably be good to add a test for this ... Problem with test - it must fail anyway. Just avoid invalid arguments in TString::Replace. I will adjust commit soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6498
https://github.com/root-project/root/pull/6498:101,safety,avoid,avoid,101,> It would probably be good to add a test for this ... Problem with test - it must fail anyway. Just avoid invalid arguments in TString::Replace. I will adjust commit soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6498
https://github.com/root-project/root/pull/6498:37,testability,test,test,37,> It would probably be good to add a test for this ... Problem with test - it must fail anyway. Just avoid invalid arguments in TString::Replace. I will adjust commit soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6498
https://github.com/root-project/root/pull/6498:68,testability,test,test,68,> It would probably be good to add a test for this ... Problem with test - it must fail anyway. Just avoid invalid arguments in TString::Replace. I will adjust commit soon.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6498
https://github.com/root-project/root/pull/6499:107,safety,safe,safe,107,Should one actually have a look at all the casts between double/float and int? Maybe even use some kind of safe cast function?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6499
https://github.com/root-project/root/pull/6503:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6503
https://github.com/root-project/root/issues/6504:5,deployability,fail,failing,5,"This failing case is on root-fedora30-1.cern.ch with. ```. /usr/bin/cmake -DCMAKE_BUILD_TYPE=""Debug"" -Dminimal=""ON"" -Droottest=""ON"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:133,deployability,build,build,133,"This failing case is on root-fedora30-1.cern.ch with. ```. /usr/bin/cmake -DCMAKE_BUILD_TYPE=""Debug"" -Dminimal=""ON"" -Droottest=""ON"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:5,reliability,fail,failing,5,"This failing case is on root-fedora30-1.cern.ch with. ```. /usr/bin/cmake -DCMAKE_BUILD_TYPE=""Debug"" -Dminimal=""ON"" -Droottest=""ON"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:35,deployability,configurat,configuration,35,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:175,deployability,build,build,175,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:209,deployability,build,build,209,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:215,deployability,instal,install,215,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1761,deployability,build,build,1761,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1530,energy efficiency,cpu,cpu,1530,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1546,energy efficiency,gpu,gpu,1546,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:35,integrability,configur,configuration,35,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:35,modifiability,configur,configuration,35,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1530,performance,cpu,cpu,1530,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:1546,performance,gpu,gpu,1546,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:35,security,configur,configuration,35,"On the other the jenkins generated configuration works:. ```. cmake -DCMAKE_BUILD_TYPE=""Debug"" -DCMAKE_CXX_FLAGS=""-UNDEBUG"" -DCMAKE_CXX_STANDARD=""14"" -DCMAKE_INSTALL_PREFIX=""/build/workspace/root-pullrequests-build/install"" -DLLVM_ENABLE_ASSERTIONS=""On"" -Dalien=""Off"" -Darrow=""Off"" -Dasimage=""On"" -Dbuiltin_afterimage=""On"" -Dbuiltin_cfitsio=""Off"" -Dbuiltin_davix=""On"" -Dbuiltin_fftw3=""Off"" -Dbuiltin_freetype=""Off"" -Dbuiltin_ftgl=""On"" -Dbuiltin_gl2ps=""On"" -Dbuiltin_glew=""On"" -Dbuiltin_gsl=""Off"" -Dbuiltin_lz4=""On"" -Dbuiltin_lzma=""On"" -Dbuiltin_openssl=""Off"" -Dbuiltin_pcre=""On"" -Dbuiltin_tbb=""On"" -Dbuiltin_unuran=""On"" -Dbuiltin_vc=""On"" -Dbuiltin_vdt=""On"" -Dbuiltin_veccore=""On"" -Dbuiltin_xrootd=""On"" -Dbuiltin_xxhash=""On"" -Dbuiltin_zlib=""On"" -Dbuiltin_zstd=""Off"" -Dccache=""ON"" -Dcefweb=""Off"" -Dclad=""On"" -Dcocoa=""Off"" -Dcuda=""Off"" -Dcudnn=""Off"" -Ddataframe=""On"" -Ddavix=""On"" -Ddcache=""Off"" -Ddev=""Off"" -Ddistcc=""Off"" -Dfail-on-missing=""On"" -Dfcgi=""Off"" -Dfftw3=""On"" -Dfitsio=""On"" -Dfortran=""On"" -Dgdml=""On"" -Dgfal=""Off"" -Dgsl_shared=""Off"" -Dgviz=""Off"" -Dhttp=""On"" -Dimt=""On"" -Dlibcxx=""Off"" -Dmathmore=""On"" -Dmemstat=""Off"" -Dminuit2=""On"" -Dmlp=""On"" -Dmonalisa=""Off"" -Dmpi=""Off"" -Dmysql=""On"" -Dodbc=""Off"" -Dopengl=""On"" -Doracle=""Off"" -Dpgsql=""On"" -Dpyroot=""On"" -Dpyroot2=""On"" -Dpyroot3=""On"" -Dpyroot_legacy=""Off"" -Dpythia6=""Off"" -Dpythia6_nolink=""Off"" -Dpythia8=""On"" -Dqt5web=""Off"" -Dr=""Off"" -Droofit=""On"" -Droottest=""ON"" -Dshadowpw=""On"" -Dsoversion=""On"" -Dspectrum=""On"" -Dsqlite=""On"" -Dssl=""On"" -Dtesting=""ON"" -Dtmva=""On"" -Dtmva-cpu=""On"" -Dtmva-gpu=""Off"" -Dtmva-pymva=""On"" -Dtmva-rmva=""Off"" -Dunuran=""On"" -During=""Off"" -Dvc=""On"" -Dvdt=""On"" -Dveccore=""On"" -Dvecgeom=""Off"" -Dvmc=""On"" -Dwin_broken_tests=""Off"" -Dx11=""On"" -Dxml=""On"" -Dxproofd=""Off"" -Dxrootd=""On"" /build/workspace/manual/root -G Ninja. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:49,deployability,build,build,49,just turning minimal OFF also leads to a working build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:13,usability,minim,minimal,13,just turning minimal OFF also leads to a working build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:43,deployability,fail,failed,43,"@pcanal is it still an issue? I tried, but failed to reproduce (with master on Ubuntu)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:43,reliability,fail,failed,43,"@pcanal is it still an issue? I tried, but failed to reproduce (with master on Ubuntu)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:49,deployability,build,build,49,"Let's close this issue. A lot has changed in the build system in the last 3 years, and we can create a new issue in case problems like this pop up again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/issues/6504:6,usability,close,close,6,"Let's close this issue. A lot has changed in the build system in the last 3 years, and we can create a new issue in case problems like this pop up again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6504
https://github.com/root-project/root/pull/6505:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:58,deployability,fail,fails,58,"Hi @couet ,. could you, please, have a look? It seems the fails in chacks are just about the CI configuration. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:96,deployability,configurat,configuration,96,"Hi @couet ,. could you, please, have a look? It seems the fails in chacks are just about the CI configuration. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:96,integrability,configur,configuration,96,"Hi @couet ,. could you, please, have a look? It seems the fails in chacks are just about the CI configuration. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:96,modifiability,configur,configuration,96,"Hi @couet ,. could you, please, have a look? It seems the fails in chacks are just about the CI configuration. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:58,reliability,fail,fails,58,"Hi @couet ,. could you, please, have a look? It seems the fails in chacks are just about the CI configuration. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:96,security,configur,configuration,96,"Hi @couet ,. could you, please, have a look? It seems the fails in chacks are just about the CI configuration. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:18,deployability,updat,update,18,@andriish can you update this one according to my comments ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:18,safety,updat,update,18,@andriish can you update this one according to my comments ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:18,security,updat,update,18,@andriish can you update this one according to my comments ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:73,safety,test,test,73,"Hi @andriish ,. Thanks for the space before :-) can you also look at the test structure I pointed ? 2 ifs like that on the same line makes it hard to read and not easy to set break point in gdb. Best. Olivier",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:73,testability,test,test,73,"Hi @andriish ,. Thanks for the space before :-) can you also look at the test structure I pointed ? 2 ifs like that on the same line makes it hard to read and not easy to set break point in gdb. Best. Olivier",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:46,integrability,coupl,couple,46,"Hi @couet ,. I've put spaces there and around couple other &&. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:46,modifiability,coupl,couple,46,"Hi @couet ,. I've put spaces there and around couple other &&. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6505:46,testability,coupl,couple,46,"Hi @couet ,. I've put spaces there and around couple other &&. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6505
https://github.com/root-project/root/pull/6506:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:262,deployability,fail,fails,262,"This does not fix #6447 the pad4.cxx program still crashes on ubuntu. but it fixes the issue with interactive ROOT on Mac. Macro pad4.C:. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. //c->cd(1);//works. c->cd();//fails. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:315,energy efficiency,Draw,Draw,315,"This does not fix #6447 the pad4.cxx program still crashes on ubuntu. but it fixes the issue with interactive ROOT on Mac. Macro pad4.C:. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. //c->cd(1);//works. c->cd();//fails. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:5,reliability,doe,does,5,"This does not fix #6447 the pad4.cxx program still crashes on ubuntu. but it fixes the issue with interactive ROOT on Mac. Macro pad4.C:. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. //c->cd(1);//works. c->cd();//fails. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:262,reliability,fail,fails,262,"This does not fix #6447 the pad4.cxx program still crashes on ubuntu. but it fixes the issue with interactive ROOT on Mac. Macro pad4.C:. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. //c->cd(1);//works. c->cd();//fails. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:98,usability,interact,interactive,98,"This does not fix #6447 the pad4.cxx program still crashes on ubuntu. but it fixes the issue with interactive ROOT on Mac. Macro pad4.C:. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. //c->cd(1);//works. c->cd();//fails. TText* t= new TText(0.5,0.5,""some text"");. t->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:100,availability,error,error,100,"Hi @couet ,. >This does not fix #6447 the pad4.cxx program still crashes on ubuntu. yes, I see. The error, however, appears in another place. Will have a look. Thank you! Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:100,performance,error,error,100,"Hi @couet ,. >This does not fix #6447 the pad4.cxx program still crashes on ubuntu. yes, I see. The error, however, appears in another place. Will have a look. Thank you! Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:19,reliability,doe,does,19,"Hi @couet ,. >This does not fix #6447 the pad4.cxx program still crashes on ubuntu. yes, I see. The error, however, appears in another place. Will have a look. Thank you! Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:100,safety,error,error,100,"Hi @couet ,. >This does not fix #6447 the pad4.cxx program still crashes on ubuntu. yes, I see. The error, however, appears in another place. Will have a look. Thank you! Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6506:100,usability,error,error,100,"Hi @couet ,. >This does not fix #6447 the pad4.cxx program still crashes on ubuntu. yes, I see. The error, however, appears in another place. Will have a look. Thank you! Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6506
https://github.com/root-project/root/pull/6507:52,deployability,manag,managed,52,"Hi @couet ,. using zevis as a test application I've managed to eliminate many other crashes and now there is only one that looks not related to graphics. Will try to debug it. . Meanwhile, would you have a look at the other pull requests for TPad? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/pull/6507:52,energy efficiency,manag,managed,52,"Hi @couet ,. using zevis as a test application I've managed to eliminate many other crashes and now there is only one that looks not related to graphics. Will try to debug it. . Meanwhile, would you have a look at the other pull requests for TPad? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/pull/6507:30,safety,test,test,30,"Hi @couet ,. using zevis as a test application I've managed to eliminate many other crashes and now there is only one that looks not related to graphics. Will try to debug it. . Meanwhile, would you have a look at the other pull requests for TPad? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/pull/6507:52,safety,manag,managed,52,"Hi @couet ,. using zevis as a test application I've managed to eliminate many other crashes and now there is only one that looks not related to graphics. Will try to debug it. . Meanwhile, would you have a look at the other pull requests for TPad? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/pull/6507:30,testability,test,test,30,"Hi @couet ,. using zevis as a test application I've managed to eliminate many other crashes and now there is only one that looks not related to graphics. Will try to debug it. . Meanwhile, would you have a look at the other pull requests for TPad? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6507
https://github.com/root-project/root/issues/6510:22,performance,multi-thread,multi-thread,22,How is this uses in a multi-thread enviroment? I.e. I seem to see a description of the crash but not a description of what is being run.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:265,deployability,manag,managed,265,"Hi @pcanal ,. > How is this uses in a multi-thread enviroment. That is used in a multi-thread program. >not a description of what is being run. Yes, that is a kind of ""collaboration"" code for event display. It is not very large but not very small. So far I haven't managed to mage a standalone reproducer, but as far as I understand there should be a general approach in ROOT how to deal with static variables within a class, so I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:265,energy efficiency,manag,managed,265,"Hi @pcanal ,. > How is this uses in a multi-thread enviroment. That is used in a multi-thread program. >not a description of what is being run. Yes, that is a kind of ""collaboration"" code for event display. It is not very large but not very small. So far I haven't managed to mage a standalone reproducer, but as far as I understand there should be a general approach in ROOT how to deal with static variables within a class, so I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:192,integrability,event,event,192,"Hi @pcanal ,. > How is this uses in a multi-thread enviroment. That is used in a multi-thread program. >not a description of what is being run. Yes, that is a kind of ""collaboration"" code for event display. It is not very large but not very small. So far I haven't managed to mage a standalone reproducer, but as far as I understand there should be a general approach in ROOT how to deal with static variables within a class, so I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:400,modifiability,variab,variables,400,"Hi @pcanal ,. > How is this uses in a multi-thread enviroment. That is used in a multi-thread program. >not a description of what is being run. Yes, that is a kind of ""collaboration"" code for event display. It is not very large but not very small. So far I haven't managed to mage a standalone reproducer, but as far as I understand there should be a general approach in ROOT how to deal with static variables within a class, so I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:38,performance,multi-thread,multi-thread,38,"Hi @pcanal ,. > How is this uses in a multi-thread enviroment. That is used in a multi-thread program. >not a description of what is being run. Yes, that is a kind of ""collaboration"" code for event display. It is not very large but not very small. So far I haven't managed to mage a standalone reproducer, but as far as I understand there should be a general approach in ROOT how to deal with static variables within a class, so I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:81,performance,multi-thread,multi-thread,81,"Hi @pcanal ,. > How is this uses in a multi-thread enviroment. That is used in a multi-thread program. >not a description of what is being run. Yes, that is a kind of ""collaboration"" code for event display. It is not very large but not very small. So far I haven't managed to mage a standalone reproducer, but as far as I understand there should be a general approach in ROOT how to deal with static variables within a class, so I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:265,safety,manag,managed,265,"Hi @pcanal ,. > How is this uses in a multi-thread enviroment. That is used in a multi-thread program. >not a description of what is being run. Yes, that is a kind of ""collaboration"" code for event display. It is not very large but not very small. So far I haven't managed to mage a standalone reproducer, but as far as I understand there should be a general approach in ROOT how to deal with static variables within a class, so I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:322,testability,understand,understand,322,"Hi @pcanal ,. > How is this uses in a multi-thread enviroment. That is used in a multi-thread program. >not a description of what is being run. Yes, that is a kind of ""collaboration"" code for event display. It is not very large but not very small. So far I haven't managed to mage a standalone reproducer, but as far as I understand there should be a general approach in ROOT how to deal with static variables within a class, so I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:238,deployability,stack,stack,238,"What I don't understand yet is why 2 threads would be executing something that seems to be (usually) only triggered by a user action/GUI. . If/Since creating the standalone reproducer is not trivial, a first step would be to get the full stack trace of when/where this portion of the code is called (i.e. the stack trace of the at least 2 threads that are running this code at the same time).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:309,deployability,stack,stack,309,"What I don't understand yet is why 2 threads would be executing something that seems to be (usually) only triggered by a user action/GUI. . If/Since creating the standalone reproducer is not trivial, a first step would be to get the full stack trace of when/where this portion of the code is called (i.e. the stack trace of the at least 2 threads that are running this code at the same time).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:386,performance,time,time,386,"What I don't understand yet is why 2 threads would be executing something that seems to be (usually) only triggered by a user action/GUI. . If/Since creating the standalone reproducer is not trivial, a first step would be to get the full stack trace of when/where this portion of the code is called (i.e. the stack trace of the at least 2 threads that are running this code at the same time).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:13,testability,understand,understand,13,"What I don't understand yet is why 2 threads would be executing something that seems to be (usually) only triggered by a user action/GUI. . If/Since creating the standalone reproducer is not trivial, a first step would be to get the full stack trace of when/where this portion of the code is called (i.e. the stack trace of the at least 2 threads that are running this code at the same time).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:244,testability,trace,trace,244,"What I don't understand yet is why 2 threads would be executing something that seems to be (usually) only triggered by a user action/GUI. . If/Since creating the standalone reproducer is not trivial, a first step would be to get the full stack trace of when/where this portion of the code is called (i.e. the stack trace of the at least 2 threads that are running this code at the same time).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:315,testability,trace,trace,315,"What I don't understand yet is why 2 threads would be executing something that seems to be (usually) only triggered by a user action/GUI. . If/Since creating the standalone reproducer is not trivial, a first step would be to get the full stack trace of when/where this portion of the code is called (i.e. the stack trace of the at least 2 threads that are running this code at the same time).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:121,usability,user,user,121,"What I don't understand yet is why 2 threads would be executing something that seems to be (usually) only triggered by a user action/GUI. . If/Since creating the standalone reproducer is not trivial, a first step would be to get the full stack trace of when/where this portion of the code is called (i.e. the stack trace of the at least 2 threads that are running this code at the same time).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:121,performance,lock,lock,121,> o I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Taking the one global lock is a heavy/costly solution is should be reserved to the last resort but to properly address it we need to understand what is coming (see also my potential fix (which may or may not break the single thread case) suggested on the PR),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:121,security,lock,lock,121,> o I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Taking the one global lock is a heavy/costly solution is should be reserved to the last resort but to properly address it we need to understand what is coming (see also my potential fix (which may or may not break the single thread case) suggested on the PR),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:232,testability,understand,understand,232,> o I've expected this will be quite an easy case for the ROOT experts even w/o a reproducer code. Taking the one global lock is a heavy/costly solution is should be reserved to the last resort but to properly address it we need to understand what is coming (see also my potential fix (which may or may not break the single thread case) suggested on the PR),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:880,availability,Error,Error,880,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:968,availability,Error,Error,968,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:236,energy efficiency,Draw,Draw,236,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:1037,energy efficiency,core,core,1037,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:880,performance,Error,Error,880,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:968,performance,Error,Error,968,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:880,safety,Error,Error,880,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:968,safety,Error,Error,968,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:731,usability,clear,clear,731,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:880,usability,Error,Error,880,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:968,usability,Error,Error,968,"Hi @couet , @lmoneta , @pcanal ,. here is a reproducer. ```. #include <TCanvas.h>. #include <TBox.h>. #include <thread>. #include <vector>. TCanvas* C=nullptr;. void test_function(const int& id). {. C->cd(id);. TPad* p= new TPad();. p->Draw();. p->cd();. TBox *x = new TBox( );. for (int i=0; i<10; i++) p->ShowGuidelines(x, kButton1Down, 'l', true );. delete x;. delete p;. return;. }. int main(int argc, char **argv) {. C= new TCanvas(""C"",""C"",1024,768);. const int N=20;. C->Divide(1,N);. std::vector<std::thread> threads;. std::vector<int> ids;. for (int j=0; j<N; j++) ids.push_back(j+1);. for (size_t j=0; j<ids.size(); j++). threads.push_back(std::thread(test_function,ids[j]));. for (auto& th : threads) th.join();. threads.clear();. delete C;. return 0;. }. ```. I do. ```. g++ $(root-config --glibs --cflags ) -g pad9.cxx -o pad9.exe. ./pad9.exe. ````. and get. ```. *** Error in `./pad9.exe': double free or corruption (fasttop): 0x00007f125c001100 ***. *** Error in `./pad9.exe. *** Break *** segmentation violation. Aborted (core dumped). ```. if I comment line with ``p->ShowGuidelines`` everything is fine. ROOT 6.22.02/gcc 4.8.5/CentOS7 x64_64. Best regards,. Andrii. Sorry if there are more crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:124,usability,user,user,124,"This reproducer is a bit misleading because `ShowGuidelines` is an internal method and is not supposed to be called by some user program. Do you encounter this crash with a ""normal"" user program ? But I will try to see why this reproducer crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:182,usability,user,user,182,"This reproducer is a bit misleading because `ShowGuidelines` is an internal method and is not supposed to be called by some user program. Do you encounter this crash with a ""normal"" user program ? But I will try to see why this reproducer crashes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:49,integrability,event,event,49,"Hi @couet ,. > a ""normal"" user program. Yes. The event display. The whole set of pull requests and bug reports I did over the last month is about it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:26,usability,user,user,26,"Hi @couet ,. > a ""normal"" user program. Yes. The event display. The whole set of pull requests and bug reports I did over the last month is about it. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:103,interoperability,specif,specific,103,_The whole set of pull requests and bug reports I did over the last month is about it._. Do you have a specific PR for that one ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:19,integrability,event,event,19,"Hi @couet ,. > The event display. I mean zevis, the codebase from https://github.com/root-project/root/issues/6344. > Do you have a specific PR for that one ? . So no, it looks it is more efficient to split all the issues into independent PRs. . There were many small issues occurring here and there and many are already closed (Thank you!). There are couple that still remain. Of course if I see some other 'easy' issues I report them, but honestly to say I'm happy with ROOT as it is (Thanks again). So the reported issues and PRs are quite thematic and are mostly about graphics. The issues: #6373 #6375 #6446 #6510 . The PR: #6505 #6511 #6537 (and partially #6547). Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:352,integrability,coupl,couple,352,"Hi @couet ,. > The event display. I mean zevis, the codebase from https://github.com/root-project/root/issues/6344. > Do you have a specific PR for that one ? . So no, it looks it is more efficient to split all the issues into independent PRs. . There were many small issues occurring here and there and many are already closed (Thank you!). There are couple that still remain. Of course if I see some other 'easy' issues I report them, but honestly to say I'm happy with ROOT as it is (Thanks again). So the reported issues and PRs are quite thematic and are mostly about graphics. The issues: #6373 #6375 #6446 #6510 . The PR: #6505 #6511 #6537 (and partially #6547). Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:132,interoperability,specif,specific,132,"Hi @couet ,. > The event display. I mean zevis, the codebase from https://github.com/root-project/root/issues/6344. > Do you have a specific PR for that one ? . So no, it looks it is more efficient to split all the issues into independent PRs. . There were many small issues occurring here and there and many are already closed (Thank you!). There are couple that still remain. Of course if I see some other 'easy' issues I report them, but honestly to say I'm happy with ROOT as it is (Thanks again). So the reported issues and PRs are quite thematic and are mostly about graphics. The issues: #6373 #6375 #6446 #6510 . The PR: #6505 #6511 #6537 (and partially #6547). Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:352,modifiability,coupl,couple,352,"Hi @couet ,. > The event display. I mean zevis, the codebase from https://github.com/root-project/root/issues/6344. > Do you have a specific PR for that one ? . So no, it looks it is more efficient to split all the issues into independent PRs. . There were many small issues occurring here and there and many are already closed (Thank you!). There are couple that still remain. Of course if I see some other 'easy' issues I report them, but honestly to say I'm happy with ROOT as it is (Thanks again). So the reported issues and PRs are quite thematic and are mostly about graphics. The issues: #6373 #6375 #6446 #6510 . The PR: #6505 #6511 #6537 (and partially #6547). Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:352,testability,coupl,couple,352,"Hi @couet ,. > The event display. I mean zevis, the codebase from https://github.com/root-project/root/issues/6344. > Do you have a specific PR for that one ? . So no, it looks it is more efficient to split all the issues into independent PRs. . There were many small issues occurring here and there and many are already closed (Thank you!). There are couple that still remain. Of course if I see some other 'easy' issues I report them, but honestly to say I'm happy with ROOT as it is (Thanks again). So the reported issues and PRs are quite thematic and are mostly about graphics. The issues: #6373 #6375 #6446 #6510 . The PR: #6505 #6511 #6537 (and partially #6547). Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:188,usability,efficien,efficient,188,"Hi @couet ,. > The event display. I mean zevis, the codebase from https://github.com/root-project/root/issues/6344. > Do you have a specific PR for that one ? . So no, it looks it is more efficient to split all the issues into independent PRs. . There were many small issues occurring here and there and many are already closed (Thank you!). There are couple that still remain. Of course if I see some other 'easy' issues I report them, but honestly to say I'm happy with ROOT as it is (Thanks again). So the reported issues and PRs are quite thematic and are mostly about graphics. The issues: #6373 #6375 #6446 #6510 . The PR: #6505 #6511 #6537 (and partially #6547). Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:321,usability,close,closed,321,"Hi @couet ,. > The event display. I mean zevis, the codebase from https://github.com/root-project/root/issues/6344. > Do you have a specific PR for that one ? . So no, it looks it is more efficient to split all the issues into independent PRs. . There were many small issues occurring here and there and many are already closed (Thank you!). There are couple that still remain. Of course if I see some other 'easy' issues I report them, but honestly to say I'm happy with ROOT as it is (Thanks again). So the reported issues and PRs are quite thematic and are mostly about graphics. The issues: #6373 #6375 #6446 #6510 . The PR: #6505 #6511 #6537 (and partially #6547). Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:7,usability,close,close,7,can we close this ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:151,integrability,event,event,151,"Hi @couet ,. I don't know. I cannot check anything with nightlies/master because of #7202 , so it makes sense to keep it open. Honestly to say I don't event know where to get that package from #7202 in /cvmfs. Any searches in the internet don't provide any useful info. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:180,modifiability,pac,package,180,"Hi @couet ,. I don't know. I cannot check anything with nightlies/master because of #7202 , so it makes sense to keep it open. Honestly to say I don't event know where to get that package from #7202 in /cvmfs. Any searches in the internet don't provide any useful info. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:282,usability,close,close,282,"OK, . I've checked with . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc8-opt/bin/root. and the issue is still there. Of course, I know how to fix that for *my* case -- I just have to disable the `ShowGuidelines` and I'm happy to do that. So I don't mind if you close this issue, even if the reproducer still crashes. In short: I don't mind if you close it. Best regards,. Andrii .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/issues/6510:368,usability,close,close,368,"OK, . I've checked with . /cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc8-opt/bin/root. and the issue is still there. Of course, I know how to fix that for *my* case -- I just have to disable the `ShowGuidelines` and I'm happy to do that. So I don't mind if you close this issue, even if the reproducer still crashes. In short: I don't mind if you close it. Best regards,. Andrii .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6510
https://github.com/root-project/root/pull/6511:25,safety,test,test,25,"""Hopefully"" ? you cannot test ? I must admit I am not sure to understand this fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:25,testability,test,test,25,"""Hopefully"" ? you cannot test ? I must admit I am not sure to understand this fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:62,testability,understand,understand,62,"""Hopefully"" ? you cannot test ? I must admit I am not sure to understand this fix.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:195,modifiability,Concern,Concerning,195,"Hi @couet ,. I've tested it and it fixes things for me. I wrote hopefully because I cannot write a simple reproducer. . Please read it as ""fixes for my case and hopefully for all similar cases"". Concerning the explanation, it looks like two threads are simultaneously in the scope where the pointer is not zero. Then one c deletes the pointer and the other one derefences null pointer. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:18,safety,test,tested,18,"Hi @couet ,. I've tested it and it fixes things for me. I wrote hopefully because I cannot write a simple reproducer. . Please read it as ""fixes for my case and hopefully for all similar cases"". Concerning the explanation, it looks like two threads are simultaneously in the scope where the pointer is not zero. Then one c deletes the pointer and the other one derefences null pointer. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:18,testability,test,tested,18,"Hi @couet ,. I've tested it and it fixes things for me. I wrote hopefully because I cannot write a simple reproducer. . Please read it as ""fixes for my case and hopefully for all similar cases"". Concerning the explanation, it looks like two threads are simultaneously in the scope where the pointer is not zero. Then one c deletes the pointer and the other one derefences null pointer. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:99,testability,simpl,simple,99,"Hi @couet ,. I've tested it and it fixes things for me. I wrote hopefully because I cannot write a simple reproducer. . Please read it as ""fixes for my case and hopefully for all similar cases"". Concerning the explanation, it looks like two threads are simultaneously in the scope where the pointer is not zero. Then one c deletes the pointer and the other one derefences null pointer. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:195,testability,Concern,Concerning,195,"Hi @couet ,. I've tested it and it fixes things for me. I wrote hopefully because I cannot write a simple reproducer. . Please read it as ""fixes for my case and hopefully for all similar cases"". Concerning the explanation, it looks like two threads are simultaneously in the scope where the pointer is not zero. Then one c deletes the pointer and the other one derefences null pointer. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:253,testability,simul,simultaneously,253,"Hi @couet ,. I've tested it and it fixes things for me. I wrote hopefully because I cannot write a simple reproducer. . Please read it as ""fixes for my case and hopefully for all similar cases"". Concerning the explanation, it looks like two threads are simultaneously in the scope where the pointer is not zero. Then one c deletes the pointer and the other one derefences null pointer. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:99,usability,simpl,simple,99,"Hi @couet ,. I've tested it and it fixes things for me. I wrote hopefully because I cannot write a simple reproducer. . Please read it as ""fixes for my case and hopefully for all similar cases"". Concerning the explanation, it looks like two threads are simultaneously in the scope where the pointer is not zero. Then one c deletes the pointer and the other one derefences null pointer. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:886,energy efficiency,Draw,Draw,886,"Here is the suspected code. ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. // Get Primitives. prims = gPad->GetListOfPrimitives();. n = TMath::Min(15,prims->GetSize());. Int_t lineColor = TColor::GetColor(239, 202, 0);. TAttBBox2D *cur = dynamic_cast<TAttBBox2D *>( object );. if (cur) {. //create invisible TPad above gPad. if (!tmpGuideLinePad){. tmpGuideLinePad = new TPad(""tmpGuideLinePad"", ""tmpGuideLinePad"", 0, 0, 1, 1);. Double_t x1, y1, x2, y2;. gPad->GetRange(x1, y1, x2, y2);. tmpGuideLinePad->Range(x1, y1, x2, y2);. tmpGuideLinePad->SetFillStyle(0);. tmpGuideLinePad->SetFillColor(0);. tmpGuideLinePad->Draw();. tmpGuideLinePad->cd();. gPad->GetRange(x1, y1, x2, y2);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:87,usability,Guid,Guidelines,87,"Here is the suspected code. ```. static TPad * tmpGuideLinePad;. //delete all existing Guidelines and create new invisible pad. if (tmpGuideLinePad) {. if (object == tmpGuideLinePad) { // in case of funny button click combination. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. return;. }. tmpGuideLinePad->Delete();. tmpGuideLinePad = 0;. }. // Get Primitives. prims = gPad->GetListOfPrimitives();. n = TMath::Min(15,prims->GetSize());. Int_t lineColor = TColor::GetColor(239, 202, 0);. TAttBBox2D *cur = dynamic_cast<TAttBBox2D *>( object );. if (cur) {. //create invisible TPad above gPad. if (!tmpGuideLinePad){. tmpGuideLinePad = new TPad(""tmpGuideLinePad"", ""tmpGuideLinePad"", 0, 0, 1, 1);. Double_t x1, y1, x2, y2;. gPad->GetRange(x1, y1, x2, y2);. tmpGuideLinePad->Range(x1, y1, x2, y2);. tmpGuideLinePad->SetFillStyle(0);. tmpGuideLinePad->SetFillColor(0);. tmpGuideLinePad->Draw();. tmpGuideLinePad->cd();. gPad->GetRange(x1, y1, x2, y2);. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:34,usability,prefer,prefer,34,As I am not expert in that area I prefer to ask @pcanal approval.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:63,safety,unsaf,unsafety,63,I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:26,testability,understand,understand,26,I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:65,deployability,stack,stack,65,One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:95,security,access,accessing,95,One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:35,testability,understand,understand,35,One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:71,testability,trace,traces,71,One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:24,usability,help,helpful,24,One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:349,deployability,stack,stack,349,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:776,reliability,pra,practical,776,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:83,safety,unsaf,unsafety,83,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:379,security,access,accessing,379,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:46,testability,understand,understand,46,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:319,testability,understand,understand,319,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:355,testability,trace,traces,355,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:528,testability,understand,understand,528,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:308,usability,help,helpful,308,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6511:656,usability,close,close,656,"Quoting @pcanal:. > I am a bit lost ... Do we understand the reason for the thread unsafety? What data is there a race condition on? [Note for example that gPad is thread-local and in-itself not a cause for problem (unless several threads have their gPad pointing to the same pad). > One thing that would be helpful to understand the scope is the 2 stack traces of the 2 threads accessing the same pointer. Since you @andriish also found a workaround for your problem, it would be better to only change the code in ROOT once we understand exactly what the problem on the ROOT side is and how it is solved by this change (or another change). Therefore I'll close this PR here, but please feel free to engage with us again either here on GitHub or on the ROOT forum if you have practical problems again! Thanks",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6511
https://github.com/root-project/root/pull/6513:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:271,interoperability,coordinat,coordinates,271,"When I run this script in interstice root I do not get a crash:. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",20,200);. const int N=20;. C->cd();. C->Divide(N,1);. C->cd(1);. TArrow* a = new TArrow();. a->PaintArrow(10, 10, 5, 5, 0.01);. }. ```. Note that the arrow coordinates are valid in that case. Even if I do:. ```. a->PaintArrow(10, 10, 10, 10, 0.01);. ```. I do not get a crash. So I do not really understand the protection you added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:287,safety,valid,valid,287,"When I run this script in interstice root I do not get a crash:. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",20,200);. const int N=20;. C->cd();. C->Divide(N,1);. C->cd(1);. TArrow* a = new TArrow();. a->PaintArrow(10, 10, 5, 5, 0.01);. }. ```. Note that the arrow coordinates are valid in that case. Even if I do:. ```. a->PaintArrow(10, 10, 10, 10, 0.01);. ```. I do not get a crash. So I do not really understand the protection you added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:411,testability,understand,understand,411,"When I run this script in interstice root I do not get a crash:. ```. {. TCanvas* C= new TCanvas(""canvas"",""canvas"",20,200);. const int N=20;. C->cd();. C->Divide(N,1);. C->cd(1);. TArrow* a = new TArrow();. a->PaintArrow(10, 10, 5, 5, 0.01);. }. ```. Note that the arrow coordinates are valid in that case. Even if I do:. ```. a->PaintArrow(10, 10, 10, 10, 0.01);. ```. I do not get a crash. So I do not really understand the protection you added.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:501,deployability,stack,stack,501,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:947,deployability,Stack,StackTrace,947,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:859,energy efficiency,optim,optimized,859,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1006,energy efficiency,core,core,1006,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1171,energy efficiency,core,core,1171,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1278,energy efficiency,optim,optimized,1278,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1298,energy efficiency,optim,optimized,1298,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1318,energy efficiency,optim,optimized,1318,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1338,energy efficiency,optim,optimized,1338,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1365,energy efficiency,optim,optimized,1365,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1389,energy efficiency,optim,optimized,1389,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1669,interoperability,coordinat,coordinated,1669,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:859,performance,optimiz,optimized,859,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1278,performance,optimiz,optimized,1278,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1298,performance,optimiz,optimized,1298,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1318,performance,optimiz,optimized,1318,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1338,performance,optimiz,optimized,1338,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1365,performance,optimiz,optimized,1365,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1389,performance,optimiz,optimized,1389,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:391,safety,except,exception,391,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1211,security,sign,signal,1211,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:177,testability,understand,understand,177,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:507,testability,trace,trace,507,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1631,testability,simpl,simple,1631,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/pull/6513:1631,usability,simpl,simple,1631,"Dear @couet ,. 1) sorry for diappearing. DESY has changed the mail setup and I've noticed that quite late... Now reading the mails. 2) >I do not get a crash. So I do not really understand the protection you added. I see that in the code I do. ``` . g++ $(root-config --glibs --cflags ) arrow.cxx -g -o arrow.exe . ./arrow.exe. ```. and get. ```. $ ./arrow.exe . *** Break *** floating point exception. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007fa672acc46c in __libc_waitpid (pid=1369358, stat_loc=stat_loc. entry=0x7ffc45f54860, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007fa672a49f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007fa67745b5dc in TUnixSystem::StackTrace (this=0x1c20980) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:2408. #3 0x00007fa67745e06a in TUnixSystem::DispatchSignals (this=0x1c20980, sig=kSigFloatingException) at /usr/src/debug/root-6.22.02/core/unix/src/TUnixSystem.cxx:3646. #4 <signal handler called>. #5 TArrow::PaintArrow (this=0x2812cd0, x1=<optimized out>, y1=<optimized out>, x2=<optimized out>, y2=<optimized out>, arrowsize=<optimized out>, option=<optimized out>) at /usr/src/debug/root-6.22.02/graf2d/graf/src/TArrow.cxx:275. #6 0x0000000000400e1b in main (argc=1, argv=0x7ffc45f57528) at arrow.cxx:85. ===========================================================. ```. The reason if quite simple: when the pad is too small the coordinated rounded from float to int are the same. Then the code divides over their difference which is 0. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6513
https://github.com/root-project/root/issues/6518:750,availability,error,error,750,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1107,availability,error,error,1107,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:682,deployability,log,logic,682,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:46,energy efficiency,Draw,Draw,46,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:397,energy efficiency,Draw,Draw,397,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:707,energy efficiency,Load,LoadTree,707,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:998,energy efficiency,Draw,Draw,998,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1080,energy efficiency,Load,LoadTree,1080,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1261,energy efficiency,Load,LoadTree,1261,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1369,energy efficiency,Load,LoadTree,1369,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:925,integrability,event,event,925,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1401,integrability,event,event,1401,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:707,performance,Load,LoadTree,707,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:750,performance,error,error,750,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1080,performance,Load,LoadTree,1080,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1107,performance,error,error,1107,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1261,performance,Load,LoadTree,1261,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1369,performance,Load,LoadTree,1369,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:731,reliability,doe,does,731,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:305,safety,avoid,avoids,305,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:432,safety,except,except,432,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:682,safety,log,logic,682,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:750,safety,error,error,750,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1107,safety,error,error,1107,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:682,security,log,logic,682,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:682,testability,log,logic,682,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:26,usability,behavi,behavior,26,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:750,usability,error,error,750,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:1107,usability,error,error,1107,"Hi,. I double-checked the behavior of `TTree::Draw` and `TTreeReader` when reading ""misaligned"" friends in a number of situations: as `TTrees`/`TChains`, friends longer/shorter than the main tree, friends with/without a `TTreeIndex`. With the path at https://github.com/root-project/root/pull/7131, which avoids an infinite loop with `TTreeReader` + indexed friend tree, `TTreeReader` and `TTree::Draw` behave the same in all cases except the one reported here. This means e.g. that switching from using a `TTree` to using a `TChain` to read the same data can change the number of entries `TTreeReader` reads in case of a friend that's larger than the main `TTree`. The problematic logic is that of `TTree::LoadTree(entry)`, which does not return an error if `entry` is larger than the number of entries in the main tree as long as the friend tree has enough entries (again note that `TChain` behaves differently, ending the event loop as soon as the main tree entries are over, and `TTree/TChain::Draw` also behaves like that). In particular, these lines are what causes `TTree::LoadTree` to not return an error:. https://github.com/root-project/root/blob/8d616f45e399d3a918b6a78edf98aa54219eb5d2/tree/tree/src/TTree.cxx#L6447-L6452. <hr>. Now, should `TTree::LoadTree` behave differently, or should `TTreeReader::SetEntryBase` not rely (just) on the return value of `LoadTree` to decide whether the event loop is over?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:0,interoperability,Semant,Semantically,0,"Semantically the right termination condition is ""no more entries in the branch **actually** used"" .... which none of the tool does properly if I understand correctly ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:126,reliability,doe,does,126,"Semantically the right termination condition is ""no more entries in the branch **actually** used"" .... which none of the tool does properly if I understand correctly ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:145,testability,understand,understand,145,"Semantically the right termination condition is ""no more entries in the branch **actually** used"" .... which none of the tool does properly if I understand correctly ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:121,usability,tool,tool,121,"Semantically the right termination condition is ""no more entries in the branch **actually** used"" .... which none of the tool does properly if I understand correctly ...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:14,reliability,doe,doesn,14,"Correct, that doesn't seem to be a thing. . This is my repro: https://gist.github.com/eguiraud/f5b8f045d993acd1c62a242a957c1a94",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:223,availability,consist,consistent,223,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:101,deployability,depend,depends,101,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:54,energy efficiency,Draw,Draw,54,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:246,energy efficiency,Draw,Draw,246,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:101,integrability,depend,depends,101,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:101,modifiability,depend,depends,101,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:101,safety,depend,depends,101,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:101,testability,depend,depends,101,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:35,usability,behavi,behavior,35,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:82,usability,stop,stopping,82,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:193,usability,behavi,behavior,193,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:223,usability,consist,consistent,223,"Do you actually want to change the behavior of TTree::Draw and TTreeReader so the stopping condition depends on the branches that are being read? That is a lot more work than ""just"" making the behavior of TTreeReader+TTree consistent with TTree::Draw and TTreeReader+TChain.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/issues/6518:59,testability,plan,plan,59,I think we __eventually__ should but in the short term you plan is good enough (in my humble opinion),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6518
https://github.com/root-project/root/pull/6519:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:9,availability,failur,failures,9,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:9,deployability,fail,failures,9,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:56,deployability,configurat,configuration,56,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:56,integrability,configur,configuration,56,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:146,integrability,messag,message,146,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:146,interoperability,messag,message,146,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:56,modifiability,configur,configuration,56,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:9,performance,failur,failures,9,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:118,performance,time,time,118,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:9,reliability,fail,failures,9,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:4,safety,test,test,4,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:88,safety,test,test,88,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:56,security,configur,configuration,56,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:4,testability,test,test,4,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:88,testability,test,test,88,"The test failures are unrelated (mac1015/cxx17 : python configuration problem. WIndows: test with known problem, this time ""maybe"" related to the message `Warning in <TClassTable::Add>: class ROOT::Detail::TTypedIter<class TEnumConstant> already in TClassTable`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:9,safety,compl,completely,9,I..e now completely ready for review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:30,safety,review,review,30,I..e now completely ready for review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:9,security,compl,completely,9,I..e now completely ready for review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:30,testability,review,review,30,I..e now completely ready for review.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:167,availability,servic,services,167,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:332,availability,servic,services,332,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:535,availability,servic,services,535,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:756,availability,servic,services,756,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:2,deployability,Build,Build,2,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:8,deployability,fail,failed,8,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:88,deployability,build,build,88,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:122,deployability,build,build,122,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:167,deployability,servic,services,167,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:219,deployability,build,build,219,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:251,deployability,Fail,Failing,251,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:332,deployability,servic,services,332,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:384,deployability,build,build,384,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:535,deployability,servic,services,535,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:587,deployability,build,build,587,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:756,deployability,servic,services,756,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:808,deployability,build,build,808,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:167,integrability,servic,services,167,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:332,integrability,servic,services,332,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:535,integrability,servic,services,535,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:756,integrability,servic,services,756,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:167,modifiability,servic,services,167,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:332,modifiability,servic,services,332,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:535,modifiability,servic,services,535,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:756,modifiability,servic,services,756,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:8,reliability,fail,failed,8,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:251,reliability,Fail,Failing,251,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:259,safety,test,tests,259,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:396,safety,test,testReport,396,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:599,safety,test,testReport,599,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:820,safety,test,testReport,820,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:259,testability,test,tests,259,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:396,testability,test,testReport,396,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:599,testability,test,testReport,599,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:820,testability,test,testReport,820,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:73,usability,User,Users,73,> Build failed on mac1015/cxx17. > Running on macphsft20.dyndns.cern.ch:/Users/sftnight/build/workspace/root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/console). > . > ### Failing tests:. > * [projectroot.runtutorials.test_import_pandas](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot/runtutorials/test_import_pandas/). > * [projectroot.roottest.python.cling.roottest_python_cling_api](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_api/). > * [projectroot.roottest.python.cling.roottest_python_cling_class](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/97532/testReport/projectroot.roottest.python/cling/roottest_python_cling_class/). I fixed that (just now)!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:10,availability,failur,failure,10,"The macos failure is infrastructure related (git area needs cleanup, an incomplete apply has left traces).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:10,deployability,fail,failure,10,"The macos failure is infrastructure related (git area needs cleanup, an incomplete apply has left traces).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:21,deployability,infrastructur,infrastructure,21,"The macos failure is infrastructure related (git area needs cleanup, an incomplete apply has left traces).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:10,performance,failur,failure,10,"The macos failure is infrastructure related (git area needs cleanup, an incomplete apply has left traces).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:10,reliability,fail,failure,10,"The macos failure is infrastructure related (git area needs cleanup, an incomplete apply has left traces).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/pull/6519:98,testability,trace,traces,98,"The macos failure is infrastructure related (git area needs cleanup, an incomplete apply has left traces).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6519
https://github.com/root-project/root/issues/6520:1504,availability,Error,Error,1504,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:407,deployability,fail,fail,407,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:413,deployability,depend,depending,413,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1534,deployability,fail,failed,1534,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:466,energy efficiency,load,loaded,466,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:413,integrability,depend,depending,413,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:771,integrability,event,eventually,771,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1369,integrability,event,events,1369,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:413,modifiability,depend,depending,413,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:326,performance,perform,perform,326,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:430,performance,content,contents,430,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:466,performance,load,loaded,466,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1504,performance,Error,Error,1504,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:407,reliability,fail,fail,407,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1534,reliability,fail,failed,1534,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:413,safety,depend,depending,413,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1120,safety,Reme,Remember,1120,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1504,safety,Error,Error,1504,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:413,testability,depend,depending,413,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:6,usability,clear,clear,6,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:326,usability,perform,perform,326,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:490,usability,Support,SupportsBulkRead,490,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:782,usability,support,support,782,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1504,usability,Error,Error,1504,"To be clear, it seems to me that the following:. ```C++. diff --git a/tree/tree/src/TBranch.cxx b/tree/tree/src/TBranch.cxx. index c69a3a95e3..e80e45d8be 100644. --- a/tree/tree/src/TBranch.cxx. +++ b/tree/tree/src/TBranch.cxx. @@ -1403,6 +1403,7 @@ Int_t TBranch::GetBasketAndFirst(TBasket *&basket, Long64_t &first,. /// to perform bulk IO (reasonable type, single TLeaf, etc); the bulk IO may. /// still fail, depending on the contents of the individual TBaskets loaded. Bool_t TBranch::SupportsBulkRead() const {. + return true;. return (fNleaves == 1) &&. (static_cast<TLeaf*>(fLeaves.UncheckedAt(0))->GetDeserializeType() != TLeaf::DeserializeType::kDestructive);. }. @@ -1432,7 +1433,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). // TODO: eventually support multiple leaves. if (R__unlikely(fNleaves != 1)) return -1;. TLeaf *leaf = static_cast<TLeaf*>(fLeaves.UncheckedAt(0));. - if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. +// if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {return -1;}. . // Remember which entry we are reading. fReadEntry = entry;. @@ -1488,8 +1489,7 @@ Int_t TBranch::GetBulkEntries(Long64_t entry, TBuffer &user_buf). Int_t N = ((fNextBasketEntry < 0) ? fEntryNumber : fNextBasketEntry) - first;. //printf(""Requesting %d events; fNextBasketEntry=%lld; first=%lld.\n"", N, fNextBasketEntry, first);. if (R__unlikely(!leaf->ReadBasketFast(user_buf, N))) {. - Error(""GetBulkEntries"", ""Leaf failed to read.\n"");. - return -1;. + leaf->ReadBasket(user_buf);. }. user_buf.SetBufferOffset(bufbegin);. ```. works just fine with all the basic types.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:654,availability,down,down,654,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:368,deployability,updat,updating,368,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:33,integrability,interfac,interface,33,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:132,integrability,rout,routine,132,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:381,integrability,buffer,buffer,381,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:570,integrability,buffer,buffer,570,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:33,interoperability,interfac,interface,33,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:33,modifiability,interfac,interface,33,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:447,modifiability,reu,reusable,447,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:687,performance,time,time,687,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:729,performance,content,content,729,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:330,safety,test,test,330,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:368,safety,updat,updating,368,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:368,security,updat,updating,368,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:556,security,modif,modifying,556,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:197,testability,Simpl,SimpleReadFunc,197,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:215,testability,Simpl,SimpleBulkReadFunc,215,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:330,testability,test,test,330,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:186,usability,user,user,186,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:197,usability,Simpl,SimpleReadFunc,197,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:215,usability,Simpl,SimpleBulkReadFunc,215,"The original idea was to have to interface GetBulkEntries and GetEntriesSerialized where in the former the byte-swap is done by the routine and in the later the byte-swap is done by the user. (See SimpleReadFunc vs SimpleBulkReadFunc in https://github.com/root-project/root/blob/28f728b67b5409580ec0ba4d71fa9ab35683fb26/tree/tree/test/BulkApi.cxx). GetBulkEntries was updating the buffer associated with the TBasket in place and thus is no longer reusable (unless the leaf reading was non destructive .. for example for char). GetEntriesSerialized was not modifying the buffer and hence did not care about the destructiveness ... It looks like somewhere down the line (likely around the time we introduced the TBufferFile as the content passing mechanism) this distinction became moot (GetBulkEntries is discarding the basket anyway and in the lastest PR, I have to make a copy when it make not be done) .... . But then again, scanning through the git history, I am even more confused ... (why would TLeafF ever be considered non-destructive ...).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:230,availability,Error,Error,230,"Also I am confused about the fact that `TBranch::GetEntriesSerialized` will simply ignore destructive DeserializeType as well. ```. 1512 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {. 1513 Error(""GetEntriesSerialized"", ""Encountered a branch with destructive deserialization; failing.\n"");. 1514 return -1;. ```. so my question remains: how can I bulk read a bunch of `int`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:316,deployability,fail,failing,316,"Also I am confused about the fact that `TBranch::GetEntriesSerialized` will simply ignore destructive DeserializeType as well. ```. 1512 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {. 1513 Error(""GetEntriesSerialized"", ""Encountered a branch with destructive deserialization; failing.\n"");. 1514 return -1;. ```. so my question remains: how can I bulk read a bunch of `int`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:230,performance,Error,Error,230,"Also I am confused about the fact that `TBranch::GetEntriesSerialized` will simply ignore destructive DeserializeType as well. ```. 1512 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {. 1513 Error(""GetEntriesSerialized"", ""Encountered a branch with destructive deserialization; failing.\n"");. 1514 return -1;. ```. so my question remains: how can I bulk read a bunch of `int`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:316,reliability,fail,failing,316,"Also I am confused about the fact that `TBranch::GetEntriesSerialized` will simply ignore destructive DeserializeType as well. ```. 1512 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {. 1513 Error(""GetEntriesSerialized"", ""Encountered a branch with destructive deserialization; failing.\n"");. 1514 return -1;. ```. so my question remains: how can I bulk read a bunch of `int`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:230,safety,Error,Error,230,"Also I am confused about the fact that `TBranch::GetEntriesSerialized` will simply ignore destructive DeserializeType as well. ```. 1512 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {. 1513 Error(""GetEntriesSerialized"", ""Encountered a branch with destructive deserialization; failing.\n"");. 1514 return -1;. ```. so my question remains: how can I bulk read a bunch of `int`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:76,testability,simpl,simply,76,"Also I am confused about the fact that `TBranch::GetEntriesSerialized` will simply ignore destructive DeserializeType as well. ```. 1512 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {. 1513 Error(""GetEntriesSerialized"", ""Encountered a branch with destructive deserialization; failing.\n"");. 1514 return -1;. ```. so my question remains: how can I bulk read a bunch of `int`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:76,usability,simpl,simply,76,"Also I am confused about the fact that `TBranch::GetEntriesSerialized` will simply ignore destructive DeserializeType as well. ```. 1512 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {. 1513 Error(""GetEntriesSerialized"", ""Encountered a branch with destructive deserialization; failing.\n"");. 1514 return -1;. ```. so my question remains: how can I bulk read a bunch of `int`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:230,usability,Error,Error,230,"Also I am confused about the fact that `TBranch::GetEntriesSerialized` will simply ignore destructive DeserializeType as well. ```. 1512 if (R__unlikely(leaf->GetDeserializeType() == TLeaf::DeserializeType::kDestructive)) {. 1513 Error(""GetEntriesSerialized"", ""Encountered a branch with destructive deserialization; failing.\n"");. 1514 return -1;. ```. so my question remains: how can I bulk read a bunch of `int`s?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1126,availability,Error,Error,1126,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1223,deployability,fail,failing,1223,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:123,energy efficiency,current,current,123,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:975,performance,memor,memory,975,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1126,performance,Error,Error,1126,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:560,reliability,doe,does,560,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1223,reliability,fail,failing,1223,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1303,reliability,doe,does,1303,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1126,safety,Error,Error,1126,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:6,usability,clear,clear,6,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:975,usability,memor,memory,975,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1126,usability,Error,Error,1126,"To be clear:. ```C++. 1 #include <TTree.h>. 2 #include <TBufferFile.h>. 3. 4 int foo() {. 5 // Otherwise, we keep with the current ROOT defaults. 6 auto tree = new TTree(""T"", ""A ROOT tree."");. 7 short f = 1;. 8 tree->Branch(""myBranch"", &f, 32000, 1);. 9 for (Long64_t ev = 0; ev < 32000; ev++) {. 10 tree->Fill();. 11 }. 12 tree->Print();. 13. 14 TBufferFile branchbuf(TBuffer::kWrite, 32 * 1024);. 15 TBranch *branchF = tree->GetBranch(""myBranch"");. 16. 17 auto count = branchF->GetBulkRead().GetEntriesSerialized(0, branchbuf);. 18 return count;. 19 }. ```. does not work:. ```. Processing foo.cc... ******************************************************************************. *Tree :T : A ROOT tree. *. *Entries : 32000 : Total = 65257 bytes File Size = 0 *. * : : Tree compression factor = 1.00 *. ******************************************************************************. *Br 0 :myBranch : myBranch/S *. *Entries : 32000 : Total Size= 64957 bytes All baskets in memory *. *Baskets : 2 : Basket Size= 32000 bytes Compression= 1.00 *. *............................................................................*. Error in <TBranch::GetEntriesSerialized>: Encountered a branch with destructive deserialization; failing. (int) -1. ```. However if I change `f` to be an `int` or a `float`, it does.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:14,deployability,patch,patch,14,"BTW, with the patch above I managed to get bool, short, int, float, int64_t to work, while ""char"" still fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:28,deployability,manag,managed,28,"BTW, with the patch above I managed to get bool, short, int, float, int64_t to work, while ""char"" still fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:104,deployability,fail,fails,104,"BTW, with the patch above I managed to get bool, short, int, float, int64_t to work, while ""char"" still fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:28,energy efficiency,manag,managed,28,"BTW, with the patch above I managed to get bool, short, int, float, int64_t to work, while ""char"" still fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:104,reliability,fail,fails,104,"BTW, with the patch above I managed to get bool, short, int, float, int64_t to work, while ""char"" still fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:14,safety,patch,patch,14,"BTW, with the patch above I managed to get bool, short, int, float, int64_t to work, while ""char"" still fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:28,safety,manag,managed,28,"BTW, with the patch above I managed to get bool, short, int, float, int64_t to work, while ""char"" still fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:14,security,patch,patch,14,"BTW, with the patch above I managed to get bool, short, int, float, int64_t to work, while ""char"" still fails...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:7,deployability,updat,updated,7,@kft I updated the tests to reproduced the issues you reported and everything match your description ... except that I see a success for 'char'. How does it fail for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:157,deployability,fail,fail,157,@kft I updated the tests to reproduced the issues you reported and everything match your description ... except that I see a success for 'char'. How does it fail for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:149,reliability,doe,does,149,@kft I updated the tests to reproduced the issues you reported and everything match your description ... except that I see a success for 'char'. How does it fail for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:157,reliability,fail,fail,157,@kft I updated the tests to reproduced the issues you reported and everything match your description ... except that I see a success for 'char'. How does it fail for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:7,safety,updat,updated,7,@kft I updated the tests to reproduced the issues you reported and everything match your description ... except that I see a success for 'char'. How does it fail for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:19,safety,test,tests,19,@kft I updated the tests to reproduced the issues you reported and everything match your description ... except that I see a success for 'char'. How does it fail for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:105,safety,except,except,105,@kft I updated the tests to reproduced the issues you reported and everything match your description ... except that I see a success for 'char'. How does it fail for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:7,security,updat,updated,7,@kft I updated the tests to reproduced the issues you reported and everything match your description ... except that I see a success for 'char'. How does it fail for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:19,testability,test,tests,19,@kft I updated the tests to reproduced the issues you reported and everything match your description ... except that I see a success for 'char'. How does it fail for you?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:165,safety,test,test,165,@ktf The only lingering question is whether the char support works (see earlier comment). So closing for the moment but feel free to reopen once you get a chance to test this. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:165,testability,test,test,165,@ktf The only lingering question is whether the char support works (see earlier comment). So closing for the moment but feel free to reopen once you get a chance to test this. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:53,usability,support,support,53,@ktf The only lingering question is whether the char support works (see earlier comment). So closing for the moment but feel free to reopen once you get a chance to test this. Thanks.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2,usability,confirm,confirm,2,"I confirm that with 6.24/02 all the issues I had are gone and we did not find any new one, at least so far. The issue with `char` was most likely due to a (now corrected) handling of arrays on our side.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1430,availability,Error,ErrorHandler,1430,"ins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:620,deployability,Stack,StackTrace,620,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1731,deployability,Toolchain,Toolchain,1731,".vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:371,energy efficiency,optim,optimized,371,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:534,energy efficiency,core,core,534,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:779,energy efficiency,core,core,779,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:902,energy efficiency,optim,optimized,902,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:930,energy efficiency,optim,optimized,930,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:956,energy efficiency,optim,optimized,956,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1327,energy efficiency,core,core,1327,"1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuil",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1951,energy efficiency,optim,optimized,1951,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2099,energy efficiency,core,core,2099,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2242,energy efficiency,optim,optimized,2242,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2577,energy efficiency,optim,optimized,2577,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2599,energy efficiency,optim,optimized,2599,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:371,performance,optimiz,optimized,371,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:902,performance,optimiz,optimized,902,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:930,performance,optimiz,optimized,930,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:956,performance,optimiz,optimized,956,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1430,performance,Error,ErrorHandler,1430,"ins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1951,performance,optimiz,optimized,1951,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2242,performance,optimiz,optimized,2242,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2577,performance,optimiz,optimized,2577,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2599,performance,optimiz,optimized,2599,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1430,safety,Error,ErrorHandler,1430,"ins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:416,security,sandbox,sandbox,416,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:424,security,sandbox,sandbox,424,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:661,security,sandbox,sandbox,661,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:669,security,sandbox,sandbox,669,"Spoke too early: reopening this since we still see a similar issue:. ```. [229504:internal-dpl-aod-reader]: #0 0x00007fe1961dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1118,security,sandbox,sandbox,1118,"61dddff in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TEr",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1126,security,sandbox,sandbox,1126,"in wait4 () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1209,security,sandbox,sandbox,1209," #1 0x00007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEnt",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1217,security,sandbox,sandbox,1217,"007fe19614d0e7 in ?? () from /lib/x86_64-linux-gnu/libc.so.6. [229504:internal-dpl-aod-reader]: #2 0x00007fe1969d55bc in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1622,security,sandbox,sandbox,1622,"race (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/se",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1630,security,sandbox,sandbox,1630,"is=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/a",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1981,security,sandbox,sandbox,1981,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1989,security,sandbox,sandbox,1989,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2286,security,sandbox,sandbox,2286,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:2294,security,sandbox,sandbox,2294,"6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which kind of branch actually causes this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1430,usability,Error,ErrorHandler,1430,"ins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. [229504:internal-dpl-aod-reader]: #3 TUnixSystem::StackTrace (this=0x89e2a0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6520:1731,usability,Tool,Toolchain,1731,".vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. [229504:internal-dpl-aod-reader]: #4 0x00007fe1968ab27a in DefaultErrorHandler (level=<optimized out>, abort_bool=<optimized out>, location=<optimized out>, msg=0x3ab1bb0 ""fExtraBasket == nullptr && \""fExtraBasket should have been set to nullptr by GetFreshBasket\"" violated at line 1523 of `/mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-""...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TErrorDefaultHandler.cxx:174. [229504:internal-dpl-aod-reader]: #5 0x00007fe196962149 in ErrorHandler(Int_t, const char *, const char *, typedef __va_list_tag __va_list_tag *) (level=6000, location=0x7fe198af8752 """", fmt=0x7fff2c9644d0 ""\021\001"", ap=0x7fff2c9644c0) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/ubuntu2004_x86-64/GCC-Toolchain/v10.2.0-alice2-1/include/c++/10.2.0/bits/basic_string.h:186. [229504:internal-dpl-aod-reader]: #6 0x00007fe196962b68 in Fatal (location=location. [229504:internal-dpl-aod-reader]: entry=0x7fe198af8752 """", fmt=<optimized out>) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/core/foundation/src/TError.cxx:249. [229504:internal-dpl-aod-reader]: #7 0x00007fe198a575a2 in TBranch::GetBulkEntries (this=0x15b3670, entry=<optimized out>, user_buf=...) at /mnt/mesos/sandbox/sandbox/jenkins/workspace/DailyBuilds/DailyO2-ubuntu2004/daily-tags.vHOm1z6zVq/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:1523. [229504:internal-dpl-aod-reader]: #8 0x00007fe19c51fb50 in ROOT::Experimental::Internal::TBulkBranchRead::GetBulkEntries (user_buf=..., evt=<optimized out>, this=<optimized out>) at /home/sekihata/alice/sw/ubuntu2004_x86-64/ROOT/v6-24-02-6/include/TBranch.h:316. ```. albeit I do not know yet which k",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6520
https://github.com/root-project/root/issues/6523:2,deployability,Updat,Update,2,**Update: see the [gist](https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee) for some comments from Philippe.**,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2,safety,Updat,Update,2,**Update: see the [gist](https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee) for some comments from Philippe.**,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:2,security,Updat,Update,2,**Update: see the [gist](https://gist.github.com/vepadulano/fc09150516193f1a801e0991591958ee) for some comments from Philippe.**,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:575,reliability,doe,doesn,575,"One way to go about this would be to mimic the suggested usage of the TFile the TTree is attached to as per the `TTree::ChangeFile` [docs](https://root.cern/doc/master/classTTree.html#a4680b0dfd17292acc29ba9a8f33788a3) in TBufferMerger. . One of the main limitations I see is that TBufferMerger is [hardwired](https://github.com/root-project/root/blob/9822d0e2733cf802d8b2c3c7b6bc134296a171b8/io/io/src/TBufferMerger.cxx#L24-L43) to the initial TFile it is constructed with. Supposing we modify `TTree::ChangeFile` to check the tree is attached to a TBufferMergerFile, if it doesn't get deleted (like Philippe suggests in the gist comments) then we still have to find a way to change its name to not collide with the original one. If instead it still gets deleted then we have to create a new TBufferMergerFile and not a simple TFile, but we couldn't attach it to the TBufferMerger inside `TTree::ChangeFile`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:488,security,modif,modify,488,"One way to go about this would be to mimic the suggested usage of the TFile the TTree is attached to as per the `TTree::ChangeFile` [docs](https://root.cern/doc/master/classTTree.html#a4680b0dfd17292acc29ba9a8f33788a3) in TBufferMerger. . One of the main limitations I see is that TBufferMerger is [hardwired](https://github.com/root-project/root/blob/9822d0e2733cf802d8b2c3c7b6bc134296a171b8/io/io/src/TBufferMerger.cxx#L24-L43) to the initial TFile it is constructed with. Supposing we modify `TTree::ChangeFile` to check the tree is attached to a TBufferMergerFile, if it doesn't get deleted (like Philippe suggests in the gist comments) then we still have to find a way to change its name to not collide with the original one. If instead it still gets deleted then we have to create a new TBufferMergerFile and not a simple TFile, but we couldn't attach it to the TBufferMerger inside `TTree::ChangeFile`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:821,testability,simpl,simple,821,"One way to go about this would be to mimic the suggested usage of the TFile the TTree is attached to as per the `TTree::ChangeFile` [docs](https://root.cern/doc/master/classTTree.html#a4680b0dfd17292acc29ba9a8f33788a3) in TBufferMerger. . One of the main limitations I see is that TBufferMerger is [hardwired](https://github.com/root-project/root/blob/9822d0e2733cf802d8b2c3c7b6bc134296a171b8/io/io/src/TBufferMerger.cxx#L24-L43) to the initial TFile it is constructed with. Supposing we modify `TTree::ChangeFile` to check the tree is attached to a TBufferMergerFile, if it doesn't get deleted (like Philippe suggests in the gist comments) then we still have to find a way to change its name to not collide with the original one. If instead it still gets deleted then we have to create a new TBufferMergerFile and not a simple TFile, but we couldn't attach it to the TBufferMerger inside `TTree::ChangeFile`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:821,usability,simpl,simple,821,"One way to go about this would be to mimic the suggested usage of the TFile the TTree is attached to as per the `TTree::ChangeFile` [docs](https://root.cern/doc/master/classTTree.html#a4680b0dfd17292acc29ba9a8f33788a3) in TBufferMerger. . One of the main limitations I see is that TBufferMerger is [hardwired](https://github.com/root-project/root/blob/9822d0e2733cf802d8b2c3c7b6bc134296a171b8/io/io/src/TBufferMerger.cxx#L24-L43) to the initial TFile it is constructed with. Supposing we modify `TTree::ChangeFile` to check the tree is attached to a TBufferMergerFile, if it doesn't get deleted (like Philippe suggests in the gist comments) then we still have to find a way to change its name to not collide with the original one. If instead it still gets deleted then we have to create a new TBufferMergerFile and not a simple TFile, but we couldn't attach it to the TBufferMerger inside `TTree::ChangeFile`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:846,performance,time,times,846,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:987,performance,time,time,987,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:1037,performance,time,times,1037,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:261,reliability,doe,doesn,261,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:380,reliability,doe,doesn,380,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:698,safety,compl,complication,698,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:1054,safety,compl,complication,1054,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:213,security,control,controlled,213,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:274,security,access,access,274,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:698,security,compl,complication,698,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:1054,security,compl,complication,1054,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:213,testability,control,controlled,213,"Since merging implies the intention of creating a single file at the end, I recommend disabling the mechanism to change files by setting the max `TTree` size to the maximum possible size. This mechanism cannot be controlled from within `TBufferMerger` since it doesn't have access to the objects that are being merged, so I think that it will be difficult to find a solution that doesn't involve changing `TTree` as well (i.e. like adding a `ChangeFile` method to `TBufferMerger` and calling that from `TTree::ChangeFile` if necessary. That shouldn't change the file the `TTree` is associated with, but the output file used by `TBufferMerger` to have the expected effect). Note, however, that as a complication you may have multiple threads writing to different trees each attached to a different `TBufferMergerFile` switching files at different times as they reach their size limit and that may trigger several small files to appear in the end if they reach their limit around the same time and try to change files `nthreads` number of times... Another complication is what happens to other kinds of objects (like histograms), as they may now be split among several output files rather than being in one merged output file. Disabling the mechanism sounds like the better option to me.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/issues/6523:216,usability,user,users,216,"A better option for disabling the mechanism that I just considered with @vepadulano is to change `TTree::ChangeFile` to be a noop if the file it's attached to is a `TBufferMergerFile`. That has the advantage that if users try to use `TTree` with `TBufferMerger` by hand (i.e. outside of `RDataFrame`), then it would work for them too.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6523
https://github.com/root-project/root/pull/6526:46,availability,error,error,46,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:52,integrability,messag,message,52,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:75,integrability,Filter,Filter,75,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:52,interoperability,messag,message,52,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:46,performance,error,error,46,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:37,reliability,doe,does,37,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:46,safety,error,error,46,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:169,safety,input,input,169,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:46,usability,error,error,46,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:169,usability,input,input,169,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:188,usability,clear,clearly,188,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:292,usability,user,user,292,That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`?\. And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:48,availability,error,error,48,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:409,availability,error,error,409,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:54,integrability,messag,message,54,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:77,integrability,Filter,Filter,77,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:54,interoperability,messag,message,54,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:433,modifiability,variab,variable,433,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:538,modifiability,variab,variable,538,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:48,performance,error,error,48,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:409,performance,error,error,409,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:39,reliability,doe,does,39,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:48,safety,error,error,48,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:171,safety,input,input,171,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:409,safety,error,error,409,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:48,usability,error,error,48,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:171,usability,input,input,171,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:190,usability,clear,clearly,190,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:294,usability,user,user,294,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:409,usability,error,error,409,> That's great! Out of curiousity: How does the error message look like for `Filter('x = 0')`? > And I don't think that this breaks any existing code. Writing back to the input arguments is clearly a super weird thing in RDF and would rely on implementation details that are not visible to the user. Very similar to this:. ```. root [0] auto func = [](const double doub) {. doub += 1.;. }. ROOT_prompt_1:1:6: error: cannot assign to variable 'doub' with const-qualified type 'const double'. doub += 1.;. ~~~~ ^. ROOT_prompt_0:1:29: note: variable 'doub' declared const here. auto func = [](const double doub) {. ~~~~~~~~~~~~~^~~~. ```,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:139,availability,error,error,139,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:409,availability,Error,Error,409,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:490,availability,error,error,490,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:680,availability,state,state,680,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:72,integrability,Filter,Filter,72,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:630,integrability,event,event,630,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:680,integrability,state,state,680,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:163,modifiability,variab,variable,163,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:304,modifiability,variab,variable,304,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:139,performance,error,error,139,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:409,performance,Error,Error,409,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:490,performance,error,error,490,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:520,performance,time,time,520,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:139,safety,error,error,139,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:409,safety,Error,Error,409,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:490,safety,error,error,490,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:139,usability,error,error,139,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:409,usability,Error,Error,409,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:490,usability,error,error,490,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:560,usability,indicat,indicate,560,"Correct, more precisely:. ```cpp. ROOT::RDataFrame(1).Define(""x"", ""42"").Filter(""x = 42"").Count().GetValue(). ```. ```. input_line_15:2:47: error: cannot assign to variable 'var0' with const-qualified type 'const int'. auto lambda1 = [](const int var0){return var0 = 42. ~~~~ ^. input_line_15:2:29: note: variable 'var0' declared const here. auto lambda1 = [](const int var0){return var0 = 42. ~~~~~~~~~~^~~~. Error in <TRint::HandleTermInput()>: std::runtime_error caught: . RDataFrame: An error occurred during just-in-time compilation. The lines above might indicate the cause of the crash. All RDF objects that have not run an event loop yet should be considered in an invalid state. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:0,deployability,Releas,Release,0,Release notes are updated at https://github.com/root-project/root/pull/6530,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:18,deployability,updat,updated,18,Release notes are updated at https://github.com/root-project/root/pull/6530,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:18,safety,updat,updated,18,Release notes are updated at https://github.com/root-project/root/pull/6530,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:18,security,updat,updated,18,Release notes are updated at https://github.com/root-project/root/pull/6530,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6526:24,energy efficiency,green,green,24,"All done, will merge if green",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6526
https://github.com/root-project/root/pull/6528:94,deployability,stack,stack,94,"Although on second thoughts we are introducing a different behaviour when the TFile is on the stack since we don't delete it anymore now. Its contents are still completely accessible even after the change of the TTree to new files, whereas the TFile on the heap would be destroyed. This gist. https://gist.github.com/vepadulano/ae831444e0e5e919f288957c8100eabe. outputs. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. TFile on Stack name tree_setmaxsize_seq.root. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:499,deployability,Stack,Stack,499,"Although on second thoughts we are introducing a different behaviour when the TFile is on the stack since we don't delete it anymore now. Its contents are still completely accessible even after the change of the TTree to new files, whereas the TFile on the heap would be destroyed. This gist. https://gist.github.com/vepadulano/ae831444e0e5e919f288957c8100eabe. outputs. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. TFile on Stack name tree_setmaxsize_seq.root. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:142,performance,content,contents,142,"Although on second thoughts we are introducing a different behaviour when the TFile is on the stack since we don't delete it anymore now. Its contents are still completely accessible even after the change of the TTree to new files, whereas the TFile on the heap would be destroyed. This gist. https://gist.github.com/vepadulano/ae831444e0e5e919f288957c8100eabe. outputs. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. TFile on Stack name tree_setmaxsize_seq.root. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:161,safety,compl,completely,161,"Although on second thoughts we are introducing a different behaviour when the TFile is on the stack since we don't delete it anymore now. Its contents are still completely accessible even after the change of the TTree to new files, whereas the TFile on the heap would be destroyed. This gist. https://gist.github.com/vepadulano/ae831444e0e5e919f288957c8100eabe. outputs. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. TFile on Stack name tree_setmaxsize_seq.root. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:161,security,compl,completely,161,"Although on second thoughts we are introducing a different behaviour when the TFile is on the stack since we don't delete it anymore now. Its contents are still completely accessible even after the change of the TTree to new files, whereas the TFile on the heap would be destroyed. This gist. https://gist.github.com/vepadulano/ae831444e0e5e919f288957c8100eabe. outputs. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. TFile on Stack name tree_setmaxsize_seq.root. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:172,security,access,accessible,172,"Although on second thoughts we are introducing a different behaviour when the TFile is on the stack since we don't delete it anymore now. Its contents are still completely accessible even after the change of the TTree to new files, whereas the TFile on the heap would be destroyed. This gist. https://gist.github.com/vepadulano/ae831444e0e5e919f288957c8100eabe. outputs. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. TFile on Stack name tree_setmaxsize_seq.root. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:59,usability,behavi,behaviour,59,"Although on second thoughts we are introducing a different behaviour when the TFile is on the stack since we don't delete it anymore now. Its contents are still completely accessible even after the change of the TTree to new files, whereas the TFile on the heap would be destroyed. This gist. https://gist.github.com/vepadulano/ae831444e0e5e919f288957c8100eabe. outputs. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. TFile on Stack name tree_setmaxsize_seq.root. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:333,availability,Error,Error,333,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:363,availability,error,error,363,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:451,availability,Error,Error,451,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:502,deployability,fail,failed,502,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:26,performance,content,content,26,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:333,performance,Error,Error,333,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:363,performance,error,error,363,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:451,performance,Error,Error,451,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:502,reliability,fail,failed,502,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:333,safety,Error,Error,333,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:363,safety,error,error,363,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:451,safety,Error,Error,451,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:615,safety,avoid,avoid,615,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:15,security,modif,modify,15,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:4,usability,user,user,4,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:333,usability,Error,Error,333,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:363,usability,error,error,363,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:451,usability,Error,Error,451,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:607,usability,user,user,607,"The user could modify the content of the original TFile, which holds a portion of the data in the TTree, i.e. https://gist.github.com/vepadulano/ed0644351771d97ff2624f0ddf015b83. I get the output. ```. Fill: Switching to new file: tree_setmaxsize_seq_1.root. Fill: Switching to new file: tree_setmaxsize_seq_2.root. Entries in tree: Error in <TFile::ReadBuffer>: error reading all requested bytes from file tree_setmaxsize_seq_2.root, got 270 of 300. Error in <TFile::Init>: tree_setmaxsize_seq_2.root failed to read the file type data. 15966. ```. Maybe it's just something that we leave to the thoughtful user to avoid?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:28,performance,content,content,28,"> The user could modify the content of the original TFile, which holds a portion of the data in the TTree. that shouldn't be a problem, and should certainly not corrupt the TTree entries that have already been written to the file. There is something weird going on in that gist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:17,security,modif,modify,17,"> The user could modify the content of the original TFile, which holds a portion of the data in the TTree. that shouldn't be a problem, and should certainly not corrupt the TTree entries that have already been written to the file. There is something weird going on in that gist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:6,usability,user,user,6,"> The user could modify the content of the original TFile, which holds a portion of the data in the TTree. that shouldn't be a problem, and should certainly not corrupt the TTree entries that have already been written to the file. There is something weird going on in that gist.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:62,deployability,updat,updated,62,Yes indeed I wasn't saving the last file of the tree (see the updated gist). Sorry!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:62,safety,updat,updated,62,Yes indeed I wasn't saving the last file of the tree (see the updated gist). Sorry!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6528:62,security,updat,updated,62,Yes indeed I wasn't saving the last file of the tree (see the updated gist). Sorry!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6528
https://github.com/root-project/root/pull/6532:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos7-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:241,availability,down,down,241,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:131,deployability,depend,dependency,131,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:489,deployability,depend,depend,489,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:574,deployability,version,version,574,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:145,energy efficiency,Core,Core,145,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:475,energy efficiency,Core,Core,475,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:664,energy efficiency,current,current,664,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:131,integrability,depend,dependency,131,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:489,integrability,depend,depend,489,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:574,integrability,version,version,574,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:131,modifiability,depend,dependency,131,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:489,modifiability,depend,depend,489,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:574,modifiability,version,version,574,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:131,safety,depend,dependency,131,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:489,safety,depend,depend,489,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:672,safety,compl,complexities,672,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:672,security,compl,complexities,672,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:131,testability,depend,dependency,131,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:489,testability,depend,depend,489,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:566,usability,minim,minimal,566,"@oshadura thanks for taking the lead on this! @pcanal, @jblomer, I see here a good opportunity to finally disentangle the implicit dependency of Core on RIO due to the need to read the rdict.pcm files. Would it be possible to sink this work down in libFoundation? The benefits will be that you will get (b) and (d) (per https://github.com/root-project/root/pull/6532#discussion_r509533782) at relatively cheap implementation cost. The big advantage will be that regular ROOT Core will not depend on entire RIO for reading rdict.pcm files assuming we are aiming at a minimal version of IO capable of reading/writing root files. IMO, that'd disentangle a lot of the current complexities in ROOT's bootstrapping facilities.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:124,availability,down,downsides,124,"@pcanal @jblomer, I agree with @vgvassilev - we had a chat today and it looks could be a pretty simple solution without any downsides and hacks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:138,security,hack,hacks,138,"@pcanal @jblomer, I agree with @vgvassilev - we had a chat today and it looks could be a pretty simple solution without any downsides and hacks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:96,testability,simpl,simple,96,"@pcanal @jblomer, I agree with @vgvassilev - we had a chat today and it looks could be a pretty simple solution without any downsides and hacks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:96,usability,simpl,simple,96,"@pcanal @jblomer, I agree with @vgvassilev - we had a chat today and it looks could be a pretty simple solution without any downsides and hacks.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:143,testability,simpl,simple,143,"Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:77,usability,custom,custom,77,"Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:143,usability,simpl,simple,143,"Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:235,energy efficiency,reduc,reduce,235,"> Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward. @pcanal, would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:227,performance,content,content,227,"> Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward. @pcanal, would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:145,testability,simpl,simple,145,"> Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward. @pcanal, would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:196,testability,simpl,simplifying,196,"> Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward. @pcanal, would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:79,usability,custom,custom,79,"> Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward. @pcanal, would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:145,usability,simpl,simple,145,"> Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward. @pcanal, would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:196,usability,simpl,simplifying,196,"> Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward. @pcanal, would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:291,usability,custom,custom,291,"> Yes this is a way towards this. There are more steps (TFile, TKey and adding custom streamers for the TProto* classes and a few others) so not simple but likely straight-forward. @pcanal, would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:59,energy efficiency,reduc,reduce,59,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:281,integrability,transform,transform,281,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:281,interoperability,transform,transform,281,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:51,performance,content,content,51,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:320,performance,time,time,320,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:446,performance,time,time,446,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:216,reliability,doe,does,216,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:437,safety,test,testing,437,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:230,security,access,access,230,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:20,testability,simpl,simplifying,20,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:147,testability,simpl,simplify,147,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:295,testability,simpl,simple,295,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:437,testability,test,testing,437,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:20,usability,simpl,simplifying,20,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:115,usability,custom,custom,115,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:147,usability,simpl,simplify,147,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:183,usability,custom,custom,183,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:295,usability,simpl,simple,295,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:352,usability,custom,custom,352,"> @vgvassilev would simplifying the rdict.pcm file content reduce the amount of things we need to sink? Do we need custom streamers for it? If you simplify things, you still need the custom streamer (because RIOLite does not have access to Cling) *and* you need to add new code to transform the simple form into the run-time form. So it just split the custom streamer in 2 part :). None of this is ""hard"" but it is need some typing (and testing) time.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:8,deployability,version,version,8,Another version of this PR: https://github.com/root-project/root/pull/6766,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:8,integrability,version,version,8,Another version of this PR: https://github.com/root-project/root/pull/6766,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6532:8,modifiability,version,version,8,Another version of this PR: https://github.com/root-project/root/pull/6766,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6532
https://github.com/root-project/root/pull/6534:36,security,hack,hacktoberfest,36,voice from a bystander: looks like [hacktoberfest spam](https://blog.domenic.me/hacktoberfest/) to me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6534
https://github.com/root-project/root/pull/6534:80,security,hack,hacktoberfest,80,voice from a bystander: looks like [hacktoberfest spam](https://blog.domenic.me/hacktoberfest/) to me,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6534
https://github.com/root-project/root/issues/6535:118,deployability,releas,releases,118,I apologise to revive only now this item. I was curious to understand why this is a need and if with the newer ROOT 6 releases an equally usable solution can be found.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6535
https://github.com/root-project/root/issues/6535:59,testability,understand,understand,59,I apologise to revive only now this item. I was curious to understand why this is a need and if with the newer ROOT 6 releases an equally usable solution can be found.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6535
https://github.com/root-project/root/issues/6535:138,usability,usab,usable,138,I apologise to revive only now this item. I was curious to understand why this is a need and if with the newer ROOT 6 releases an equally usable solution can be found.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6535
https://github.com/root-project/root/issues/6535:219,performance,time,time,219,"Dear Danilo,. after some years I cannot remember the exact details of that ticket any longer. I think, it was related to the ""1"", ""0"", or """" option in the constructor of the base method, which probably has changed over time. Since this issue did not caused any problems any longer in the last years, I believe you can close the ticket. Thank you for your efforts to improve ROOT! Best wishes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6535
https://github.com/root-project/root/issues/6535:40,safety,reme,remember,40,"Dear Danilo,. after some years I cannot remember the exact details of that ticket any longer. I think, it was related to the ""1"", ""0"", or """" option in the constructor of the base method, which probably has changed over time. Since this issue did not caused any problems any longer in the last years, I believe you can close the ticket. Thank you for your efforts to improve ROOT! Best wishes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6535
https://github.com/root-project/root/issues/6535:318,usability,close,close,318,"Dear Danilo,. after some years I cannot remember the exact details of that ticket any longer. I think, it was related to the ""1"", ""0"", or """" option in the constructor of the base method, which probably has changed over time. Since this issue did not caused any problems any longer in the last years, I believe you can close the ticket. Thank you for your efforts to improve ROOT! Best wishes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6535
https://github.com/root-project/root/pull/6537:159,availability,Error,Error,159,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:428,deployability,stack,stack,428,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1050,deployability,Stack,StackTrace,1050,"ich is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:786,energy efficiency,optim,optimized,786,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:976,energy efficiency,core,core,976,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1100,energy efficiency,core,core,1100,"rash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gp",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1260,energy efficiency,core,core,1260," *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. =======================",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1386,energy efficiency,core,core,1386,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1488,energy efficiency,core,core,1488,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1912,energy efficiency,optim,optimized,1912,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2055,energy efficiency,optim,optimized,2055,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2164,energy efficiency,optim,optimized,2164,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2186,energy efficiency,optim,optimized,2186,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:92,performance,time,time,92,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:159,performance,Error,Error,159,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:786,performance,optimiz,optimized,786,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1912,performance,optimiz,optimized,1912,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2055,performance,optimiz,optimized,2055,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2164,performance,optimiz,optimized,2164,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2186,performance,optimiz,optimized,2186,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:159,safety,Error,Error,159,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2221,safety,test,test,2221,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:194,security,access,accessing,194,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1528,security,sign,signal,1528,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:434,testability,trace,trace,434,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2221,testability,test,test,2221,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:62,usability,close,closed,62,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:159,usability,Error,Error,159,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:176,usability,Clear,Clear,176,"Hi @couet ,. the reproducer is the same as in #6447 (Which is closed now, I know). But this time the crash happens later, in the destructor. ```. ./pad4.exe . Error in <TList::Clear>: A list is accessing an object (0x2b7f740) already deleted (list name = TList). *** Break *** segmentation violation. ===========================================================. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1618,usability,Close,Close,1618,"========. There was a crash (kSigSegmentationViolation). This is the entire stack trace of all threads:. ===========================================================. gdb.printing.register_pretty_printer(gdb.current_objfile(),. #0 0x00007f9b7558746c in __libc_waitpid (pid=1463649, stat_loc=stat_loc. entry=0x7ffce938d760, options=options. entry=0) at ../sysdeps/unix/sysv/linux/waitpid.c:31. #1 0x00007f9b75504f62 in do_system (line=<optimized out>) at ../sysdeps/posix/system.c:148. #2 0x00007f9b78f9a4bc in TUnixSystem::Exec (this=0x1e1e960, shellcmd=0x2b7f4b0 ""X/etc/gdb-backtrace.sh 1463630 1>&2"") at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2120. #3 0x00007f9b78f9ad16 in TUnixSystem::StackTrace (this=0x1e1e960) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:2411. #4 0x00007f9b78f9e5f4 in TUnixSystem::DispatchSignals (this=0x1e1e960, sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3649. #5 0x00007f9b78f96794 in SigHandler (sig=kSigSegmentationViolation) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:407. #6 0x00007f9b78f9e4fc in sighandler (sig=11) at Projects/ROOT/root/core/unix/src/TUnixSystem.cxx:3620. #7 <signal handler called>. #8 0x0000000000000000 in ?? (). #9 0x00007f9b77f28ed4 in TCanvas::Close (this=0x1e9efd0, option=0x7f9b77f92e51 """") at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:782. #10 0x00007f9b77f28bc5 in TCanvas::Destructor (this=0x1e9efd0) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:697. #11 0x00007f9b77f28969 in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:668. #12 0x00007f9b77f28a0a in TCanvas::~TCanvas (this=0x1e9efd0, __in_chrg=<optimized out>) at Projects/ROOT/root/graf2d/gpad/src/TCanvas.cxx:669. #13 0x0000000000401293 in main (argc=<optimized out>, argv=<optimized out>) at /Projects/zevis/test/pad4.cxx:16. ===========================================================. ```. master/gcc4.8.5/CentOS7. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:65,performance,time,time,65,"Hi @couet ,. would you have a look here again when you have some time? Also, just to know for the future, what is the policy on PRs? Namely, if all tests should pass before the review, if the same person approve and merge? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:148,safety,test,tests,148,"Hi @couet ,. would you have a look here again when you have some time? Also, just to know for the future, what is the policy on PRs? Namely, if all tests should pass before the review, if the same person approve and merge? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:177,safety,review,review,177,"Hi @couet ,. would you have a look here again when you have some time? Also, just to know for the future, what is the policy on PRs? Namely, if all tests should pass before the review, if the same person approve and merge? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:118,security,polic,policy,118,"Hi @couet ,. would you have a look here again when you have some time? Also, just to know for the future, what is the policy on PRs? Namely, if all tests should pass before the review, if the same person approve and merge? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:148,testability,test,tests,148,"Hi @couet ,. would you have a look here again when you have some time? Also, just to know for the future, what is the policy on PRs? Namely, if all tests should pass before the review, if the same person approve and merge? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:177,testability,review,review,177,"Hi @couet ,. would you have a look here again when you have some time? Also, just to know for the future, what is the policy on PRs? Namely, if all tests should pass before the review, if the same person approve and merge? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:197,usability,person,person,197,"Hi @couet ,. would you have a look here again when you have some time? Also, just to know for the future, what is the policy on PRs? Namely, if all tests should pass before the review, if the same person approve and merge? Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:18,performance,time,times,18,I just spend some times testing it. It seems good.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:24,safety,test,testing,24,I just spend some times testing it. It seems good.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:24,testability,test,testing,24,I just spend some times testing it. It seems good.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3558,availability,fault,fault,3558,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1656,energy efficiency,alloc,allocator,1656,"...... OK. PNG output................................................ OK. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInter",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3558,energy efficiency,fault,fault,3558,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3558,performance,fault,fault,3558,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3558,reliability,fault,fault,3558,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:412,safety,Test,Test,412,"I undo ... it cannot stay like that .... ```. % ./stressGraphics. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3081,safety,test,test,3081,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3167,safety,test,test,3167,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3244,safety,test,test,3244,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3333,safety,test,test,3333,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3558,safety,fault,fault,3558,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3531,security,modif,modify,3531,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:412,testability,Test,Test,412,"I undo ... it cannot stay like that .... ```. % ./stressGraphics. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3081,testability,test,test,3081,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3167,testability,test,test,3167,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3244,testability,test,test,3244,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3333,testability,test,test,3333,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2,usability,undo,undo,2,"I undo ... it cannot stay like that .... ```. % ./stressGraphics. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:879,usability,User,Users,879,"I undo ... it cannot stay like that .... ```. % ./stressGraphics. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCom",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1012,usability,User,Users,1012,"annot stay like that .... ```. % ./stressGraphics. Create ./cernstaff.root. (TFile *) nullptr. **********************************************************************. * Starting Graphics - S T R E S S suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::Met",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1213,usability,User,Users,1213,"suite *. **********************************************************************. * Starting Basic Graphics - S T R E S S *. **********************************************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Us",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1361,usability,User,Users,1361,"**********************************************. Test 1: TLine..................................................... OK. PDF output................................................ OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, ",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1503,usability,User,Users,1503,"................................... OK. GIF output................................................ OK. JPG output................................................ OK. PNG output................................................ OK. [/usr/lib/system/libsystem_platform.dylib] _sigtramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1780,usability,User,Users,1780,"ramp (no debug info). [/usr/lib/system/libsystem_kernel.dylib] fstat$INODE64 (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char cons",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:1927,usability,User,Users,1927,"vas::Constructor(char const*, char const*, int, int, int, int) (no debug info). [/Users/couet/git/couet-root-bin/lib/libGpad.so] TCanvas::TCanvas(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2071,usability,User,Users,2071,"s(char const*, char const*, int, int, int, int) (no debug info). [<unknown binary>] (no debug info). [<unknown binary>] (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/coue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2214,usability,User,Users,2214,"s/couet/git/couet-root-bin/lib/libCling.so] cling::IncrementalExecutor::executeWrapper(llvm::StringRef, cling::Value*) const (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2389,usability,User,Users,2389,"lib/libCling.so] cling::Interpreter::RunFunction(clang::FunctionDecl const*, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::Interpreter::EvaluateInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/syst",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2574,usability,User,Users,2574,"teInternal(std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should hav",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2701,usability,User,Users,2701,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2833,usability,User,Users,2833,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:2950,usability,User,Users,2950,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3054,usability,User,Users,3054,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3140,usability,User,Users,3140,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3217,usability,User,Users,3217,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/pull/6537:3306,usability,User,Users,3306,"std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > const&, cling::CompilationOptions, cling::Value*, cling::Transaction**, unsigned long) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaSema::actOnxCommand(llvm::StringRef, llvm::StringRef, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isXCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaParser::isCommand(cling::MetaSema::ActionResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] cling::MetaProcessor::process(llvm::StringRef, cling::Interpreter::CompilationResult&, cling::Value*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] HandleInterpreterException(cling::MetaProcessor*, char const*, cling::Interpreter::CompilationResult&, cling::Value*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLine(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCling.so] TCling::ProcessLineSynch(char const*, TInterpreter::EErrorCode*) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TApplication::ExecuteFile(char const*, int*, bool) (no debug info). [/Users/couet/git/couet-root-bin/lib/libCore.so] TROOT::ProcessLine(char const*, int*) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] TestReport2(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] tline() (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] stressGraphics(int) (no debug info). [/Users/couet/git/couet-root/test/./stressGraphics] main (no debug info). [/usr/lib/system/libdyld.dylib] start (no debug info). [<unknown binary>] (no debug info). ```. Note that running stressGraphics is a good idea when you modify Graphics files. (my fault, I should have done it).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6537
https://github.com/root-project/root/issues/6539:34,integrability,repositor,repository,34,"Oops, I see that there is another repository for the web site. I think an admin can transfer to there, or otherwise I'll close and reopen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6539:34,interoperability,repositor,repository,34,"Oops, I see that there is another repository for the web site. I think an admin can transfer to there, or otherwise I'll close and reopen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6539:121,usability,close,close,121,"Oops, I see that there is another repository for the web site. I think an admin can transfer to there, or otherwise I'll close and reopen.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6539:12,usability,close,close,12,"yes, better close and reopen",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6539
https://github.com/root-project/root/issues/6540:253,integrability,messag,message,253,"@Axel-Naumann It looks like http://root.cern.ch/bugs is an alias pointing to Jira. I am not sure where such aliases are defined. Is it possible to make it point to the ROOT Github Issues instead ? Also I guess we should change ""http"" to ""https"" in that message (I can do it if you agree)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:253,interoperability,messag,message,253,"@Axel-Naumann It looks like http://root.cern.ch/bugs is an alias pointing to Jira. I am not sure where such aliases are defined. Is it possible to make it point to the ROOT Github Issues instead ? Also I guess we should change ""http"" to ""https"" in that message (I can do it if you agree)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/issues/6540:44,usability,close,close,44,"So then this is fixed? If so, @couet please close the issue once #6541 is merged.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6540
https://github.com/root-project/root/pull/6542:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6542:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6542
https://github.com/root-project/root/pull/6543:11,deployability,build,build,11,@phsft-bot build.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6543
https://github.com/root-project/root/pull/6543:10,availability,failur,failures,10,unrelated failures (python setup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6543
https://github.com/root-project/root/pull/6543:10,deployability,fail,failures,10,unrelated failures (python setup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6543
https://github.com/root-project/root/pull/6543:10,performance,failur,failures,10,unrelated failures (python setup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6543
https://github.com/root-project/root/pull/6543:10,reliability,fail,failures,10,unrelated failures (python setup),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6543
https://github.com/root-project/root/pull/6544:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6544
https://github.com/root-project/root/pull/6547:20,deployability,patch,patch,20,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:169,deployability,version,version,169,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:161,energy efficiency,current,current,161,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:104,integrability,batch,batch,104,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:169,integrability,version,version,169,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:169,modifiability,version,version,169,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:104,performance,batch,batch,104,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:192,reliability,doe,does,192,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:20,safety,patch,patch,20,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:927,safety,avoid,avoiding,927,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:20,security,patch,patch,20,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6547:412,usability,behavi,behaviour,412,"Hi @bellenot ,. The patch fixes the crash in reproducer in #6483 . The reason of the crash is that in a batch mode the ListFonts() from TVirtualX is called. The current version of ListFonts() does not return 0 fonts (but it should!) and then the functions that try to deal with fonts crash everything. Right now I cannot recall the exact call chain that leads to crash, but here are just some cases of undefined behaviour:. ```. char **TGFontPool::GetFontFamilies(). {. Int_t i, numNames;. char *family, *end, *p;. THashTable familyTable(100);. familyTable.SetOwner();. char **nameList;. char **dst;. // coverity[returned_null]. // coverity[dereference]. nameList = gVirtualX->ListFonts(""*"", 10000, numNames);. for (i = 0; i < numNames; i++) { <-- numNames is not initialized explicitly . ```. The second part of the fix is in the TGResourcePool.cxx . Basically the fix is for the case when no fonts were given back, i.e. just avoiding null pointer dereference. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6547
https://github.com/root-project/root/pull/6548:84,energy efficiency,alloc,allocator,84,"@pcanal On Windows, strangely `TClassEdit::GetNormalizedName` returns `vector<float,allocator<float> >` for the demangled type `std::vector<float,class std::allocator<float> >`. I think I'm missing something as I would have expected `vector<float>` as normalized type.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6548
https://github.com/root-project/root/pull/6548:157,energy efficiency,alloc,allocator,157,"@pcanal On Windows, strangely `TClassEdit::GetNormalizedName` returns `vector<float,allocator<float> >` for the demangled type `std::vector<float,class std::allocator<float> >`. I think I'm missing something as I would have expected `vector<float>` as normalized type.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6548
https://github.com/root-project/root/pull/6551:49,testability,simpl,simplest,49,"@vgvassilev Upon reflection, I think this is the simplest/easier fix...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:49,usability,simpl,simplest,49,"@vgvassilev Upon reflection, I think this is the simplest/easier fix...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:146,safety,risk,risk,146,"> I think that will work. We should be careful for any new addition of code involving gStipples. > . > LGTM! Thanks @vgvassilev ! And I think the risk is low, and the fix is easy :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/pull/6551:146,security,risk,risk,146,"> I think that will work. We should be careful for any new addition of code involving gStipples. > . > LGTM! Thanks @vgvassilev ! And I think the risk is low, and the fix is easy :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6551
https://github.com/root-project/root/issues/6552:193,energy efficiency,load,loading,193,"Thank you for reporting this difference. The reason is that new PyROOT has split in a few libraries, when it used to be only one in the old PyROOT. In this case, the deserialization causes the loading and initialization of `libROOTPythonizations`, but `libcppyy` has not been loaded yet, leading to the crash you see. `import ROOT` makes sure everything is loaded and initialized by the time you deserialize. Is it an issue though that you need to import ROOT prior to deserializing ROOT objects in Python?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:276,energy efficiency,load,loaded,276,"Thank you for reporting this difference. The reason is that new PyROOT has split in a few libraries, when it used to be only one in the old PyROOT. In this case, the deserialization causes the loading and initialization of `libROOTPythonizations`, but `libcppyy` has not been loaded yet, leading to the crash you see. `import ROOT` makes sure everything is loaded and initialized by the time you deserialize. Is it an issue though that you need to import ROOT prior to deserializing ROOT objects in Python?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:357,energy efficiency,load,loaded,357,"Thank you for reporting this difference. The reason is that new PyROOT has split in a few libraries, when it used to be only one in the old PyROOT. In this case, the deserialization causes the loading and initialization of `libROOTPythonizations`, but `libcppyy` has not been loaded yet, leading to the crash you see. `import ROOT` makes sure everything is loaded and initialized by the time you deserialize. Is it an issue though that you need to import ROOT prior to deserializing ROOT objects in Python?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:193,performance,load,loading,193,"Thank you for reporting this difference. The reason is that new PyROOT has split in a few libraries, when it used to be only one in the old PyROOT. In this case, the deserialization causes the loading and initialization of `libROOTPythonizations`, but `libcppyy` has not been loaded yet, leading to the crash you see. `import ROOT` makes sure everything is loaded and initialized by the time you deserialize. Is it an issue though that you need to import ROOT prior to deserializing ROOT objects in Python?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:276,performance,load,loaded,276,"Thank you for reporting this difference. The reason is that new PyROOT has split in a few libraries, when it used to be only one in the old PyROOT. In this case, the deserialization causes the loading and initialization of `libROOTPythonizations`, but `libcppyy` has not been loaded yet, leading to the crash you see. `import ROOT` makes sure everything is loaded and initialized by the time you deserialize. Is it an issue though that you need to import ROOT prior to deserializing ROOT objects in Python?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:357,performance,load,loaded,357,"Thank you for reporting this difference. The reason is that new PyROOT has split in a few libraries, when it used to be only one in the old PyROOT. In this case, the deserialization causes the loading and initialization of `libROOTPythonizations`, but `libcppyy` has not been loaded yet, leading to the crash you see. `import ROOT` makes sure everything is loaded and initialized by the time you deserialize. Is it an issue though that you need to import ROOT prior to deserializing ROOT objects in Python?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:387,performance,time,time,387,"Thank you for reporting this difference. The reason is that new PyROOT has split in a few libraries, when it used to be only one in the old PyROOT. In this case, the deserialization causes the loading and initialization of `libROOTPythonizations`, but `libcppyy` has not been loaded yet, leading to the crash you see. `import ROOT` makes sure everything is loaded and initialized by the time you deserialize. Is it an issue though that you need to import ROOT prior to deserializing ROOT objects in Python?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:861,deployability,contain,contains,861,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1109,deployability,patch,patch,1109,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:970,energy efficiency,Current,Currently,970,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:231,integrability,sub,subtasks,231,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:596,integrability,inject,inject,596,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:149,performance,parallel,parallel,149,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:264,performance,parallel,parallel,264,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1109,safety,patch,patch,1109,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1144,safety,avoid,avoid,1144,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:596,security,inject,inject,596,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:933,security,access,accessing,933,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:1109,security,patch,patch,1109,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:469,usability,custom,custom,469,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:734,usability,custom,custom,734,"Hi Enric, . Thank you very much! . Indeed it is a kind of problem. I rely on pickling in my project for two cases:. 1. implicitely, where I use the `parallel python`/`multiprocess`/`multiprocessing`/`pathos` to split the task into subtasks that can be executed in parallel in different processes or even on different nodes. Behind the scene such stuff relies on serialization/deserialization of objects via `pickle` or `dill`. 2. explicitely where I store my data into custom `shelve`-like database, that relies on serialization of objects via pickling. - for (1) I do not know if I can properly inject ""import ROOT"" into the code flow at all vital occurances. . - for (2) of course I can pre-import `ROOT` for all manipulations with custom database, but it is rather unnatural solution. E.g. opening a (originally `ROOT`-blind) database I need to know that it contains some `ROOT`-objects, and in this case use `import ROOT` before accessing objects from the database. Currently I've added `import ROOT` just in the code of database, but it is not a perfect solution. It is acceptable as kind of a temporary patch, but if possible I'd like to avoid it in the long-term future. . . .",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:430,availability,error,error,430,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:233,deployability,modul,modules,233,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:253,deployability,modul,module,253,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:404,deployability,modul,module,404,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:146,energy efficiency,load,loaded,146,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:181,energy efficiency,load,loading,181,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:223,modifiability,extens,extension,223,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:233,modifiability,modul,modules,233,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:253,modifiability,modul,module,253,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:404,modifiability,modul,module,404,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:146,performance,load,loaded,146,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:181,performance,load,loading,181,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:430,performance,error,error,430,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:442,reliability,doe,does,442,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:233,safety,modul,modules,233,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:253,safety,modul,module,253,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:404,safety,modul,module,404,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:430,safety,error,error,430,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:41,usability,close,closer,41,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:430,usability,error,error,430,"Thank you for the clarification. I had a closer look to this. The problem resides in that, during the deserialization, `libROOTPythonizations` is loaded, which in turn triggers the loading of `libcppyy`. Both libraries are extension modules. During the module initialization of `libROOTPythonizations`, it calls into `libcppyy`, but the latter has not been initialized yet (it has not been imported as a module), which causes the error. This does not happen during `import ROOT`, where all the imports are properly done. What I can try to do is ensure `libcppyy` is imported during the initialization of `libROOTPythonizations`. Let's see how that goes.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:104,safety,test,test,104,I made a PR with a possible solution: https://github.com/root-project/root/pull/6654 . Could you please test it and let me know if it makes your use case work?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:104,testability,test,test,104,I made a PR with a possible solution: https://github.com/root-project/root/pull/6654 . Could you please test it and let me know if it makes your use case work?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:29,availability,fault,fault,29,I don't see the segmentation fault in your reproducer anymore if I apply the fix of the aforementioned PR. I am merging. Please let me know if you have any further problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:29,energy efficiency,fault,fault,29,I don't see the segmentation fault in your reproducer anymore if I apply the fix of the aforementioned PR. I am merging. Please let me know if you have any further problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:29,performance,fault,fault,29,I don't see the segmentation fault in your reproducer anymore if I apply the fix of the aforementioned PR. I am merging. Please let me know if you have any further problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:29,reliability,fault,fault,29,I don't see the segmentation fault in your reproducer anymore if I apply the fix of the aforementioned PR. I am merging. Please let me know if you have any further problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:29,safety,fault,fault,29,I don't see the segmentation fault in your reproducer anymore if I apply the fix of the aforementioned PR. I am merging. Please let me know if you have any further problem.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:75,availability,fault,fault,75,"Hi Enric, . Thank you very much. How can I test the fix? . I still see seg.fault for `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:75,energy efficiency,fault,fault,75,"Hi Enric, . Thank you very much. How can I test the fix? . I still see seg.fault for `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:75,performance,fault,fault,75,"Hi Enric, . Thank you very much. How can I test the fix? . I still see seg.fault for `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:75,reliability,fault,fault,75,"Hi Enric, . Thank you very much. How can I test the fix? . I still see seg.fault for `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:43,safety,test,test,43,"Hi Enric, . Thank you very much. How can I test the fix? . I still see seg.fault for `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:75,safety,fault,fault,75,"Hi Enric, . Thank you very much. How can I test the fix? . I still see seg.fault for `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:43,testability,test,test,43,"Hi Enric, . Thank you very much. How can I test the fix? . I still see seg.fault for `source /cvmfs/sft.cern.ch/lcg/views/dev3/latest/x86_64-centos7-gcc9-opt/setup.sh`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:43,safety,test,test,43,"I just merged it, so you should be able to test it in dev3 tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6552:43,testability,test,test,43,"I just merged it, so you should be able to test it in dev3 tomorrow.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6552
https://github.com/root-project/root/issues/6556:155,reliability,doe,does,155,"Looking into that. This kind of overlap where all the vertices of one shape are outside (or worse on the surface) of the other can be missed, because TGeo does not generate points on the surface of the solids (as the Geant4 checker). Some overlaps like this can be detected if increasing the number of points generated on the segments connecting adjacent vertices, using:. `gGeoManager->SetNmeshPoints(N); // where the default is 1000, so N has to be larger`. This does not help in this particular case. Note that this is not a bug, but a known limitation of the algorithm used in ROOT, having a strategy to allow some false negatives to gain checking speed. I'll see if something can be done w/o producing false positives.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:465,reliability,doe,does,465,"Looking into that. This kind of overlap where all the vertices of one shape are outside (or worse on the surface) of the other can be missed, because TGeo does not generate points on the surface of the solids (as the Geant4 checker). Some overlaps like this can be detected if increasing the number of points generated on the segments connecting adjacent vertices, using:. `gGeoManager->SetNmeshPoints(N); // where the default is 1000, so N has to be larger`. This does not help in this particular case. Note that this is not a bug, but a known limitation of the algorithm used in ROOT, having a strategy to allow some false negatives to gain checking speed. I'll see if something can be done w/o producing false positives.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:265,safety,detect,detected,265,"Looking into that. This kind of overlap where all the vertices of one shape are outside (or worse on the surface) of the other can be missed, because TGeo does not generate points on the surface of the solids (as the Geant4 checker). Some overlaps like this can be detected if increasing the number of points generated on the segments connecting adjacent vertices, using:. `gGeoManager->SetNmeshPoints(N); // where the default is 1000, so N has to be larger`. This does not help in this particular case. Note that this is not a bug, but a known limitation of the algorithm used in ROOT, having a strategy to allow some false negatives to gain checking speed. I'll see if something can be done w/o producing false positives.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:265,security,detect,detected,265,"Looking into that. This kind of overlap where all the vertices of one shape are outside (or worse on the surface) of the other can be missed, because TGeo does not generate points on the surface of the solids (as the Geant4 checker). Some overlaps like this can be detected if increasing the number of points generated on the segments connecting adjacent vertices, using:. `gGeoManager->SetNmeshPoints(N); // where the default is 1000, so N has to be larger`. This does not help in this particular case. Note that this is not a bug, but a known limitation of the algorithm used in ROOT, having a strategy to allow some false negatives to gain checking speed. I'll see if something can be done w/o producing false positives.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:474,usability,help,help,474,"Looking into that. This kind of overlap where all the vertices of one shape are outside (or worse on the surface) of the other can be missed, because TGeo does not generate points on the surface of the solids (as the Geant4 checker). Some overlaps like this can be detected if increasing the number of points generated on the segments connecting adjacent vertices, using:. `gGeoManager->SetNmeshPoints(N); // where the default is 1000, so N has to be larger`. This does not help in this particular case. Note that this is not a bug, but a known limitation of the algorithm used in ROOT, having a strategy to allow some false negatives to gain checking speed. I'll see if something can be done w/o producing false positives.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:36,deployability,compos,composite,36,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:79,energy efficiency,current,currently,79,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:36,modifiability,compos,composite,36,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:70,reliability,doe,does,70,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:222,safety,detect,detected,222,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:222,security,detect,detected,222,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:180,testability,simpl,simple,180,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:89,usability,support,support,89,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:180,usability,simpl,simple,180,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:332,usability,support,supported,332,"The problem is that both shapes are composite, and TGeoCompositeShape does not currently support generating mesh points on segments. If you were to replace the pvPipeBottom with a simple tube the overlap would probably be detected, but of course you cannot do that. So you are hitting the boolean-boolean combination which is worst supported unfortunately by the geometry checker and can miss overlaps.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:168,availability,slo,slow,168,"Closing since this is one of the not supported overlap detection cases. The overlap checker tries to compromise between coverage and speed. In future we may support a ""slow & more accurate"" mode, like the one done for example by Geant4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:168,reliability,slo,slow,168,"Closing since this is one of the not supported overlap detection cases. The overlap checker tries to compromise between coverage and speed. In future we may support a ""slow & more accurate"" mode, like the one done for example by Geant4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:55,safety,detect,detection,55,"Closing since this is one of the not supported overlap detection cases. The overlap checker tries to compromise between coverage and speed. In future we may support a ""slow & more accurate"" mode, like the one done for example by Geant4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:55,security,detect,detection,55,"Closing since this is one of the not supported overlap detection cases. The overlap checker tries to compromise between coverage and speed. In future we may support a ""slow & more accurate"" mode, like the one done for example by Geant4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:120,testability,coverag,coverage,120,"Closing since this is one of the not supported overlap detection cases. The overlap checker tries to compromise between coverage and speed. In future we may support a ""slow & more accurate"" mode, like the one done for example by Geant4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:37,usability,support,supported,37,"Closing since this is one of the not supported overlap detection cases. The overlap checker tries to compromise between coverage and speed. In future we may support a ""slow & more accurate"" mode, like the one done for example by Geant4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6556:157,usability,support,support,157,"Closing since this is one of the not supported overlap detection cases. The overlap checker tries to compromise between coverage and speed. In future we may support a ""slow & more accurate"" mode, like the one done for example by Geant4.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6556
https://github.com/root-project/root/issues/6557:245,energy efficiency,model,models,245,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:396,energy efficiency,CPU,CPUs,396,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:408,energy efficiency,GPU,GPU,408,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:473,energy efficiency,model,models,473,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:554,energy efficiency,current,current,554,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:20,performance,Perform,Performance,20,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:212,performance,perform,performance,212,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:377,performance,parallel,parallelisation,377,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:396,performance,CPU,CPUs,396,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:408,performance,GPU,GPU,408,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:491,performance,time,time,491,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:55,safety,compl,completeness,55,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:498,safety,Except,Except,498,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:55,security,compl,completeness,55,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:245,security,model,models,245,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:473,security,model,models,473,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:20,usability,Perform,Performance,20,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:212,usability,perform,performance,212,"## Roo(Stats,Fit) - Performance Improvements. Just for completeness, here are some more ideas listed by John Harvey on JIRA ([ROOT-8647](https://sft.its.cern.ch/jira/browse/ROOT-8647)):. * Improvement of runtime performance in presence of large models starting from real use cases, e.g. from CMS. * Use multiprocess for RooStats calculators. * Take advantage of vectorisation, parallelisation on CPUs and/or GPU where it makes sense. * Removal of virtual functions (define models at compile time). Except for the last one, these ideas are all covered by current development efforts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:11,integrability,messag,message,11,"## Warning message on repeated named arguments. Emit warning message in RooCmdConfig when multiple named arguments of the same type are encountered, for which no chaining behavior is defined. *Originally suggested by Wouter Verkerke in [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:61,integrability,messag,message,61,"## Warning message on repeated named arguments. Emit warning message in RooCmdConfig when multiple named arguments of the same type are encountered, for which no chaining behavior is defined. *Originally suggested by Wouter Verkerke in [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:11,interoperability,messag,message,11,"## Warning message on repeated named arguments. Emit warning message in RooCmdConfig when multiple named arguments of the same type are encountered, for which no chaining behavior is defined. *Originally suggested by Wouter Verkerke in [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:61,interoperability,messag,message,61,"## Warning message on repeated named arguments. Emit warning message in RooCmdConfig when multiple named arguments of the same type are encountered, for which no chaining behavior is defined. *Originally suggested by Wouter Verkerke in [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:171,usability,behavi,behavior,171,"## Warning message on repeated named arguments. Emit warning message in RooCmdConfig when multiple named arguments of the same type are encountered, for which no chaining behavior is defined. *Originally suggested by Wouter Verkerke in [ROOT-2784](https://sft.its.cern.ch/jira/browse/ROOT-2784)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:205,availability,operat,operation,205,"## More efficient datasets. RooDataSet is very inefficient when loading values, as it only loads single values. RooDataSet could theoretically adopt memory from a std::vector, making importing a zero-copy operation. Further, RDataFrame snapshots or numpy arrays could be imported. *Originally suggested by Stephan Hageboeck in [ROOT-10366](https://sft.its.cern.ch/jira/browse/ROOT-10366)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:64,energy efficiency,load,loading,64,"## More efficient datasets. RooDataSet is very inefficient when loading values, as it only loads single values. RooDataSet could theoretically adopt memory from a std::vector, making importing a zero-copy operation. Further, RDataFrame snapshots or numpy arrays could be imported. *Originally suggested by Stephan Hageboeck in [ROOT-10366](https://sft.its.cern.ch/jira/browse/ROOT-10366)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:91,energy efficiency,load,loads,91,"## More efficient datasets. RooDataSet is very inefficient when loading values, as it only loads single values. RooDataSet could theoretically adopt memory from a std::vector, making importing a zero-copy operation. Further, RDataFrame snapshots or numpy arrays could be imported. *Originally suggested by Stephan Hageboeck in [ROOT-10366](https://sft.its.cern.ch/jira/browse/ROOT-10366)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:64,performance,load,loading,64,"## More efficient datasets. RooDataSet is very inefficient when loading values, as it only loads single values. RooDataSet could theoretically adopt memory from a std::vector, making importing a zero-copy operation. Further, RDataFrame snapshots or numpy arrays could be imported. *Originally suggested by Stephan Hageboeck in [ROOT-10366](https://sft.its.cern.ch/jira/browse/ROOT-10366)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:91,performance,load,loads,91,"## More efficient datasets. RooDataSet is very inefficient when loading values, as it only loads single values. RooDataSet could theoretically adopt memory from a std::vector, making importing a zero-copy operation. Further, RDataFrame snapshots or numpy arrays could be imported. *Originally suggested by Stephan Hageboeck in [ROOT-10366](https://sft.its.cern.ch/jira/browse/ROOT-10366)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:149,performance,memor,memory,149,"## More efficient datasets. RooDataSet is very inefficient when loading values, as it only loads single values. RooDataSet could theoretically adopt memory from a std::vector, making importing a zero-copy operation. Further, RDataFrame snapshots or numpy arrays could be imported. *Originally suggested by Stephan Hageboeck in [ROOT-10366](https://sft.its.cern.ch/jira/browse/ROOT-10366)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:8,usability,efficien,efficient,8,"## More efficient datasets. RooDataSet is very inefficient when loading values, as it only loads single values. RooDataSet could theoretically adopt memory from a std::vector, making importing a zero-copy operation. Further, RDataFrame snapshots or numpy arrays could be imported. *Originally suggested by Stephan Hageboeck in [ROOT-10366](https://sft.its.cern.ch/jira/browse/ROOT-10366)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:149,usability,memor,memory,149,"## More efficient datasets. RooDataSet is very inefficient when loading values, as it only loads single values. RooDataSet could theoretically adopt memory from a std::vector, making importing a zero-copy operation. Further, RDataFrame snapshots or numpy arrays could be imported. *Originally suggested by Stephan Hageboeck in [ROOT-10366](https://sft.its.cern.ch/jira/browse/ROOT-10366)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:59,availability,Error,Errors,59,"## RooFit should be able to plot unbinned data with TGraph[Errors]. When RooFit plots unbinned data, it automatically creates a histogram. However, data points might be scattered such that some bins might be empty (or others might be filled much more often, see attached plot) that the plot and normalisation of the curve might look wrong. ![138f1681def151a43a6d2b370aa6c72ca60c50c0](https://user-images.githubusercontent.com/6578603/229940963-1a6f9336-ff2d-40d7-9938-db19f69948b2.png). *Originally suggested by Stephan Hageboeck in [ROOT-9878](https://sft.its.cern.ch/jira/browse/ROOT-9878)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:104,deployability,automat,automatically,104,"## RooFit should be able to plot unbinned data with TGraph[Errors]. When RooFit plots unbinned data, it automatically creates a histogram. However, data points might be scattered such that some bins might be empty (or others might be filled much more often, see attached plot) that the plot and normalisation of the curve might look wrong. ![138f1681def151a43a6d2b370aa6c72ca60c50c0](https://user-images.githubusercontent.com/6578603/229940963-1a6f9336-ff2d-40d7-9938-db19f69948b2.png). *Originally suggested by Stephan Hageboeck in [ROOT-9878](https://sft.its.cern.ch/jira/browse/ROOT-9878)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:59,performance,Error,Errors,59,"## RooFit should be able to plot unbinned data with TGraph[Errors]. When RooFit plots unbinned data, it automatically creates a histogram. However, data points might be scattered such that some bins might be empty (or others might be filled much more often, see attached plot) that the plot and normalisation of the curve might look wrong. ![138f1681def151a43a6d2b370aa6c72ca60c50c0](https://user-images.githubusercontent.com/6578603/229940963-1a6f9336-ff2d-40d7-9938-db19f69948b2.png). *Originally suggested by Stephan Hageboeck in [ROOT-9878](https://sft.its.cern.ch/jira/browse/ROOT-9878)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:59,safety,Error,Errors,59,"## RooFit should be able to plot unbinned data with TGraph[Errors]. When RooFit plots unbinned data, it automatically creates a histogram. However, data points might be scattered such that some bins might be empty (or others might be filled much more often, see attached plot) that the plot and normalisation of the curve might look wrong. ![138f1681def151a43a6d2b370aa6c72ca60c50c0](https://user-images.githubusercontent.com/6578603/229940963-1a6f9336-ff2d-40d7-9938-db19f69948b2.png). *Originally suggested by Stephan Hageboeck in [ROOT-9878](https://sft.its.cern.ch/jira/browse/ROOT-9878)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:104,testability,automat,automatically,104,"## RooFit should be able to plot unbinned data with TGraph[Errors]. When RooFit plots unbinned data, it automatically creates a histogram. However, data points might be scattered such that some bins might be empty (or others might be filled much more often, see attached plot) that the plot and normalisation of the curve might look wrong. ![138f1681def151a43a6d2b370aa6c72ca60c50c0](https://user-images.githubusercontent.com/6578603/229940963-1a6f9336-ff2d-40d7-9938-db19f69948b2.png). *Originally suggested by Stephan Hageboeck in [ROOT-9878](https://sft.its.cern.ch/jira/browse/ROOT-9878)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:59,usability,Error,Errors,59,"## RooFit should be able to plot unbinned data with TGraph[Errors]. When RooFit plots unbinned data, it automatically creates a histogram. However, data points might be scattered such that some bins might be empty (or others might be filled much more often, see attached plot) that the plot and normalisation of the curve might look wrong. ![138f1681def151a43a6d2b370aa6c72ca60c50c0](https://user-images.githubusercontent.com/6578603/229940963-1a6f9336-ff2d-40d7-9938-db19f69948b2.png). *Originally suggested by Stephan Hageboeck in [ROOT-9878](https://sft.its.cern.ch/jira/browse/ROOT-9878)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:392,usability,user,user-images,392,"## RooFit should be able to plot unbinned data with TGraph[Errors]. When RooFit plots unbinned data, it automatically creates a histogram. However, data points might be scattered such that some bins might be empty (or others might be filled much more often, see attached plot) that the plot and normalisation of the curve might look wrong. ![138f1681def151a43a6d2b370aa6c72ca60c50c0](https://user-images.githubusercontent.com/6578603/229940963-1a6f9336-ff2d-40d7-9938-db19f69948b2.png). *Originally suggested by Stephan Hageboeck in [ROOT-9878](https://sft.its.cern.ch/jira/browse/ROOT-9878)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:52,availability,Error,Errors,52,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:149,availability,Error,Errors,149,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:161,availability,error,errors,161,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:191,deployability,automat,automatically,191,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:52,performance,Error,Errors,52,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:149,performance,Error,Errors,149,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:161,performance,error,errors,161,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:52,safety,Error,Errors,52,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:149,safety,Error,Errors,149,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:161,safety,error,errors,161,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:191,testability,automat,automatically,191,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:52,usability,Error,Errors,52,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:149,usability,Error,Errors,149,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:161,usability,error,errors,161,"## RooFit should be able to read data from a TGraph[Errors]. RooFit should be able to make an unbinned and weighted fit to data coming from a TGraph[Errors]. If errors are set, RooFit should automatically take care of weighting the data points correctly. This would make problems like this one much easier:. https://root-forum.cern.ch/t/max-likelihood-fit-with-a-tgraphasymmerrors-basically-how-to-do-a-unbinned-likelihood-fit/31903/9. *Originally suggested by Stephan Hageboeck in [9877](https://sft.its.cern.ch/jira/browse/ROOT-9877)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:27,reliability,doe,doesn,27,"## RooMultivariateGaussian doesn't allow the converiance matrix to be fit. The data type used to represent the covariance matrix in RooMultivariateGaussian is TMatrixDSym and not RooRealVar or RooListProxy and doesn't allow for it to be fit. This is not a bug but a new feature request. There is alway the possibility to write in this case your own pdf. This feature only got requested once in 2017, and in the request ticket there was no mention of a usecase. Without a clear usecase, we are not going to blindly implement features. *Originally suggested by Albert Bursche [ROOT-9052](https://sft.its.cern.ch/jira/browse/ROOT-9052)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:210,reliability,doe,doesn,210,"## RooMultivariateGaussian doesn't allow the converiance matrix to be fit. The data type used to represent the covariance matrix in RooMultivariateGaussian is TMatrixDSym and not RooRealVar or RooListProxy and doesn't allow for it to be fit. This is not a bug but a new feature request. There is alway the possibility to write in this case your own pdf. This feature only got requested once in 2017, and in the request ticket there was no mention of a usecase. Without a clear usecase, we are not going to blindly implement features. *Originally suggested by Albert Bursche [ROOT-9052](https://sft.its.cern.ch/jira/browse/ROOT-9052)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:471,usability,clear,clear,471,"## RooMultivariateGaussian doesn't allow the converiance matrix to be fit. The data type used to represent the covariance matrix in RooMultivariateGaussian is TMatrixDSym and not RooRealVar or RooListProxy and doesn't allow for it to be fit. This is not a bug but a new feature request. There is alway the possibility to write in this case your own pdf. This feature only got requested once in 2017, and in the request ticket there was no mention of a usecase. Without a clear usecase, we are not going to blindly implement features. *Originally suggested by Albert Bursche [ROOT-9052](https://sft.its.cern.ch/jira/browse/ROOT-9052)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:120,deployability,fail,failing-,120,## Make the `Offset()` option the default in createNLL(). As discussed here in the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/7?u=jonas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:120,reliability,fail,failing-,120,## Make the `Offset()` option the default in createNLL(). As discussed here in the forum:. https://root-forum.cern.ch/t/failing-chi2-fit/56309/7?u=jonas,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:73,energy efficiency,estimat,estimate,73,"## Multi-threaded generation/evaluation of toys. When generating toys to estimate uncertainties on parameters, each round of toys is independent of each other. These can be done in threads. Possible interference with multi-threaded likelihood evaluations. *Originally suggested by Stephan Hageboeck in [9822](https://sft.its.cern.ch/jira/browse/ROOT-9822)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:99,modifiability,paramet,parameters,99,"## Multi-threaded generation/evaluation of toys. When generating toys to estimate uncertainties on parameters, each round of toys is independent of each other. These can be done in threads. Possible interference with multi-threaded likelihood evaluations. *Originally suggested by Stephan Hageboeck in [9822](https://sft.its.cern.ch/jira/browse/ROOT-9822)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:3,performance,Multi-thread,Multi-threaded,3,"## Multi-threaded generation/evaluation of toys. When generating toys to estimate uncertainties on parameters, each round of toys is independent of each other. These can be done in threads. Possible interference with multi-threaded likelihood evaluations. *Originally suggested by Stephan Hageboeck in [9822](https://sft.its.cern.ch/jira/browse/ROOT-9822)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:217,performance,multi-thread,multi-threaded,217,"## Multi-threaded generation/evaluation of toys. When generating toys to estimate uncertainties on parameters, each round of toys is independent of each other. These can be done in threads. Possible interference with multi-threaded likelihood evaluations. *Originally suggested by Stephan Hageboeck in [9822](https://sft.its.cern.ch/jira/browse/ROOT-9822)*",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:23,integrability,interfac,interface,23,## Clarify and improve interface for multi-ranged simultaneous fits. See the following forum post:. https://root-forum.cern.ch/t/problem-with-simultaneous-fit-in-two-subranges-on-multiple-variables/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:166,integrability,sub,subranges-on-multiple-variables,166,## Clarify and improve interface for multi-ranged simultaneous fits. See the following forum post:. https://root-forum.cern.ch/t/problem-with-simultaneous-fit-in-two-subranges-on-multiple-variables/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:23,interoperability,interfac,interface,23,## Clarify and improve interface for multi-ranged simultaneous fits. See the following forum post:. https://root-forum.cern.ch/t/problem-with-simultaneous-fit-in-two-subranges-on-multiple-variables/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:23,modifiability,interfac,interface,23,## Clarify and improve interface for multi-ranged simultaneous fits. See the following forum post:. https://root-forum.cern.ch/t/problem-with-simultaneous-fit-in-two-subranges-on-multiple-variables/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:188,modifiability,variab,variables,188,## Clarify and improve interface for multi-ranged simultaneous fits. See the following forum post:. https://root-forum.cern.ch/t/problem-with-simultaneous-fit-in-two-subranges-on-multiple-variables/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:50,testability,simul,simultaneous,50,## Clarify and improve interface for multi-ranged simultaneous fits. See the following forum post:. https://root-forum.cern.ch/t/problem-with-simultaneous-fit-in-two-subranges-on-multiple-variables/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/issues/6557:142,testability,simul,simultaneous-fit-in-two-subranges-on-multiple-variables,142,## Clarify and improve interface for multi-ranged simultaneous fits. See the following forum post:. https://root-forum.cern.ch/t/problem-with-simultaneous-fit-in-two-subranges-on-multiple-variables/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6557
https://github.com/root-project/root/pull/6558:60,energy efficiency,current,current,60,"@pcanal I would claim the check is simply spurious with the current implementation. The whole method could actually be folded in GetBulkEntries, if one simply adds a fallback to the ReadBasketFast call.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:35,testability,simpl,simply,35,"@pcanal I would claim the check is simply spurious with the current implementation. The whole method could actually be folded in GetBulkEntries, if one simply adds a fallback to the ReadBasketFast call.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:152,testability,simpl,simply,152,"@pcanal I would claim the check is simply spurious with the current implementation. The whole method could actually be folded in GetBulkEntries, if one simply adds a fallback to the ReadBasketFast call.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:35,usability,simpl,simply,35,"@pcanal I would claim the check is simply spurious with the current implementation. The whole method could actually be folded in GetBulkEntries, if one simply adds a fallback to the ReadBasketFast call.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:152,usability,simpl,simply,152,"@pcanal I would claim the check is simply spurious with the current implementation. The whole method could actually be folded in GetBulkEntries, if one simply adds a fallback to the ReadBasketFast call.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:25,performance,time,time,25,"We commented at the same time. Indeed, I fully agree.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:169,availability,state,statement,169,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that . * remove the check on DestructiveSerialization. * Collapse the 2 functions into a single Impl functions. * Extend the test to cover the new known-to-work cases. * Create a new issue on the still failing one (char). * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:511,deployability,fail,failing,511,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that . * remove the check on DestructiveSerialization. * Collapse the 2 functions into a single Impl functions. * Extend the test to cover the new known-to-work cases. * Create a new issue on the still failing one (char). * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:169,integrability,state,statement,169,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that . * remove the check on DestructiveSerialization. * Collapse the 2 functions into a single Impl functions. * Extend the test to cover the new known-to-work cases. * Create a new issue on the still failing one (char). * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:285,modifiability,extens,extension,285,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that . * remove the check on DestructiveSerialization. * Collapse the 2 functions into a single Impl functions. * Extend the test to cover the new known-to-work cases. * Create a new issue on the still failing one (char). * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:423,modifiability,Exten,Extend,423,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that . * remove the check on DestructiveSerialization. * Collapse the 2 functions into a single Impl functions. * Extend the test to cover the new known-to-work cases. * Create a new issue on the still failing one (char). * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:511,reliability,fail,failing,511,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that . * remove the check on DestructiveSerialization. * Collapse the 2 functions into a single Impl functions. * Extend the test to cover the new known-to-work cases. * Create a new issue on the still failing one (char). * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:434,safety,test,test,434,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that . * remove the check on DestructiveSerialization. * Collapse the 2 functions into a single Impl functions. * Extend the test to cover the new known-to-work cases. * Create a new issue on the still failing one (char). * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:434,testability,test,test,434,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that . * remove the check on DestructiveSerialization. * Collapse the 2 functions into a single Impl functions. * Extend the test to cover the new known-to-work cases. * Create a new issue on the still failing one (char). * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:188,usability,prefer,prefer,188,"> The whole method could actually be folded in GetBulkEntries. Yes, I think so. There is only 2 differences between the two function and both could be handle with an if statement. I would prefer to finish/merge https://github.com/root-project/root/pull/6519 and then have a new PR (an extension of this one?) that . * remove the check on DestructiveSerialization. * Collapse the 2 functions into a single Impl functions. * Extend the test to cover the new known-to-work cases. * Create a new issue on the still failing one (char). * Remove/Deprecate the GetDeserializeType functions.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:40,interoperability,conflict,conflicts,40,"I'll close this old PR, since there are conflicts and @pcanal nicely explained in the previous comment how he expects this PR to be superseded by a new PR. @ktf, feel free to open a new PR if you want to work on this :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:5,usability,close,close,5,"I'll close this old PR, since there are conflicts and @pcanal nicely explained in the previous comment how he expects this PR to be superseded by a new PR. @ktf, feel free to open a new PR if you want to work on this :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6558:35,safety,accid,accident,35,"yes, indeed this was still open by accident. I have everything working since a while.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6558
https://github.com/root-project/root/pull/6559:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:11,deployability,build,build,11,@phsft-bot build just on ROOT-fedora30/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:11,deployability,build,build,11,@phsft-bot build with flags -DCTEST_TEST_EXCLUDE_NONE=On,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:171,availability,failur,failure,171,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:171,deployability,fail,failure,171,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:12,energy efficiency,core,core,12,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:163,performance,time,timeout,163,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:171,performance,failur,failure,171,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:171,reliability,fail,failure,171,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:24,safety,test,test,24,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:73,safety,test,test,73,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:163,safety,timeout,timeout,163,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:24,testability,test,test,24,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:73,testability,test,test,73,"projectroot.core.thread.test.gtest_core_thread_test_testInterpreterLock: test usually last 4 minutes, sometimes 16 minutes, sometimes a little more leading to the timeout failure.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:116,availability,failur,failure,116,projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_concurrency: pre-existing but hard to reproduce failure on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:116,deployability,fail,failure,116,projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_concurrency: pre-existing but hard to reproduce failure on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:116,performance,failur,failure,116,projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_concurrency: pre-existing but hard to reproduce failure on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:116,reliability,fail,failure,116,projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_concurrency: pre-existing but hard to reproduce failure on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:27,safety,test,test,27,projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_concurrency: pre-existing but hard to reproduce failure on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:27,testability,test,test,27,projectroot.tree.dataframe.test.gtest_tree_dataframe_test_dataframe_concurrency: pre-existing but hard to reproduce failure on windows.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:109,availability,failur,failures,109,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:395,availability,failur,failure,395,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:109,deployability,fail,failures,109,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:233,deployability,modul,module,233,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:395,deployability,fail,failure,395,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:223,modifiability,extens,extension,223,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:233,modifiability,modul,module,233,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:109,performance,failur,failures,109,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:395,performance,failur,failure,395,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:109,reliability,fail,failures,109,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:395,reliability,fail,failure,395,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:24,safety,review,review,24,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:233,safety,modul,module,233,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:24,testability,review,review,24,"This is ready for final review (@jblomer and @Axel-Naumann's comments (so far) has been addresses) and the 2 failures are pre-existing (mac11.0/cxx17 is missing ""SystemError: initialization of libcppyy3_8 did not return an extension module\n"" and ROOT-fedora32/noimt is having problems with std::unique_ptr, see https://github.com/root-project/root/pull/3760#issuecomment-747061692 for the same failure with master).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:18,availability,failur,failure,18,"The mac11.0/cxx17 failure is unrelated: `""SystemError: initialization of libcppyy3_8 did not return an extension module\n""`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:18,deployability,fail,failure,18,"The mac11.0/cxx17 failure is unrelated: `""SystemError: initialization of libcppyy3_8 did not return an extension module\n""`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:113,deployability,modul,module,113,"The mac11.0/cxx17 failure is unrelated: `""SystemError: initialization of libcppyy3_8 did not return an extension module\n""`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:103,modifiability,extens,extension,103,"The mac11.0/cxx17 failure is unrelated: `""SystemError: initialization of libcppyy3_8 did not return an extension module\n""`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:113,modifiability,modul,module,113,"The mac11.0/cxx17 failure is unrelated: `""SystemError: initialization of libcppyy3_8 did not return an extension module\n""`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:18,performance,failur,failure,18,"The mac11.0/cxx17 failure is unrelated: `""SystemError: initialization of libcppyy3_8 did not return an extension module\n""`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:18,reliability,fail,failure,18,"The mac11.0/cxx17 failure is unrelated: `""SystemError: initialization of libcppyy3_8 did not return an extension module\n""`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6559:113,safety,modul,module,113,"The mac11.0/cxx17 failure is unrelated: `""SystemError: initialization of libcppyy3_8 did not return an extension module\n""`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6559
https://github.com/root-project/root/pull/6560:143,deployability,Build,Build,143,@oshadura Now we've actually thought about using a proper `RootBuildOption` called `-Dasserts` to implement the same thing. What do you think? Build option or plain cmake variable (like the `ROOT_ENABLE_ASSERTS` above)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:171,modifiability,variab,variable,171,@oshadura Now we've actually thought about using a proper `RootBuildOption` called `-Dasserts` to implement the same thing. What do you think? Build option or plain cmake variable (like the `ROOT_ENABLE_ASSERTS` above)?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:103,deployability,build,builds,103,What do you think actually to merge it in a `dev` option? or you would like to have a separate one for builds and etc?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:104,deployability,modul,modules,104,"It could be added as a plain option (e.g. `asan` https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L193), but if you will be OK to have it as a part of `dev`, I think it would be easier then to maintain one more option :) It is up to you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:104,modifiability,modul,modules,104,"It could be added as a plain option (e.g. `asan` https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L193), but if you will be OK to have it as a part of `dev`, I think it would be easier then to maintain one more option :) It is up to you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:230,modifiability,maintain,maintain,230,"It could be added as a plain option (e.g. `asan` https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L193), but if you will be OK to have it as a part of `dev`, I think it would be easier then to maintain one more option :) It is up to you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:104,safety,modul,modules,104,"It could be added as a plain option (e.g. `asan` https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L193), but if you will be OK to have it as a part of `dev`, I think it would be easier then to maintain one more option :) It is up to you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:230,safety,maintain,maintain,230,"It could be added as a plain option (e.g. `asan` https://github.com/root-project/root/blob/master/cmake/modules/RootBuildOptions.cmake#L193), but if you will be OK to have it as a part of `dev`, I think it would be easier then to maintain one more option :) It is up to you!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:138,deployability,build,build,138,"Then I vote for the explicit option :) Another reason we want an option is that we can have defaults, which are always overwritten if the build option is set explicitely. This allows you to have a debug build without asserts, if you like.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:203,deployability,build,build,203,"Then I vote for the explicit option :) Another reason we want an option is that we can have defaults, which are always overwritten if the build option is set explicitely. This allows you to have a debug build without asserts, if you like.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:217,testability,assert,asserts,217,"Then I vote for the explicit option :) Another reason we want an option is that we can have defaults, which are always overwritten if the build option is set explicitely. This allows you to have a debug build without asserts, if you like.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:11,deployability,build,build,11,@phsft-bot build with `-Dasserts=ON`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:11,deployability,build,build,11,@phsft-bot build with flags -Dasserts=ON,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:160,availability,down,downside,160,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:206,deployability,log,logic,206,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:301,interoperability,specif,specify,301,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:88,reliability,doe,does,88,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:206,safety,log,logic,206,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:101,security,expos,exposed,101,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:206,security,log,logic,206,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:206,testability,log,logic,206,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:217,testability,assert,asserts,217,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6560:314,testability,assert,asserts,314,"Such as discussed on mattermost: I've switched to a plain cmake option so that the flag does not get exposed as feature by `root-config`. However, this has the downside that (without additional boilerplate logic) the asserts are always on for `CMAKE_BUILD_TYPE=Debug` and `dev=ON`, no matter what you specify for `asserts`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6560
https://github.com/root-project/root/pull/6561:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:102,deployability,fail,failing,102,"@andriish can you fork also [roottest](https://github.com/root-project/roottest), in order to fix the failing Windows build? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:118,deployability,build,build,118,"@andriish can you fork also [roottest](https://github.com/root-project/roottest), in order to fix the failing Windows build? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:102,reliability,fail,failing,102,"@andriish can you fork also [roottest](https://github.com/root-project/roottest), in order to fix the failing Windows build? Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:114,availability,Operat,Operation,114,. ``` . stderr: fatal: unable to access 'http://root.cern/git/root.git/': Failed to connect to root.cern port 80: Operation timed out. ```. Does not help.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:74,deployability,Fail,Failed,74,. ``` . stderr: fatal: unable to access 'http://root.cern/git/root.git/': Failed to connect to root.cern port 80: Operation timed out. ```. Does not help.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:124,performance,time,timed,124,. ``` . stderr: fatal: unable to access 'http://root.cern/git/root.git/': Failed to connect to root.cern port 80: Operation timed out. ```. Does not help.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:74,reliability,Fail,Failed,74,. ``` . stderr: fatal: unable to access 'http://root.cern/git/root.git/': Failed to connect to root.cern port 80: Operation timed out. ```. Does not help.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:140,reliability,Doe,Does,140,. ``` . stderr: fatal: unable to access 'http://root.cern/git/root.git/': Failed to connect to root.cern port 80: Operation timed out. ```. Does not help.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:33,security,access,access,33,. ``` . stderr: fatal: unable to access 'http://root.cern/git/root.git/': Failed to connect to root.cern port 80: Operation timed out. ```. Does not help.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:149,usability,help,help,149,. ``` . stderr: fatal: unable to access 'http://root.cern/git/root.git/': Failed to connect to root.cern port 80: Operation timed out. ```. Does not help.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/pull/6561:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6561
https://github.com/root-project/root/issues/6563:35,deployability,releas,release,35,"Fix merged into CMake, waiting for release of 3.19.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:10,availability,failur,failures,10,Addressed failures through #6789,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:10,deployability,fail,failures,10,Addressed failures through #6789,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:10,performance,failur,failures,10,Addressed failures through #6789,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6563:10,reliability,fail,failures,10,Addressed failures through #6789,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6563
https://github.com/root-project/root/issues/6565:128,usability,user,user-images,128,"I do not see this problem. The banner is visible for me:. <img width=""912"" alt=""Screenshot 2020-10-12 at 16 31 25"" src=""https://user-images.githubusercontent.com/4697738/95758205-6e547580-0ca8-11eb-837e-6cba235cea34.png"">.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6565
https://github.com/root-project/root/issues/6565:6,usability,close,close,6,Can I close ? this issues seems to be irrelevant now.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6565
https://github.com/root-project/root/issues/6566:105,deployability,releas,release,105,"A priori Python code is protected by the GIL, so this access wouldn't be an issue for threaded code (GIL release is ever only on the actual call into C++, not on any setup code to reach that point). Additionally, this is a workaround for ROOT/meta's buggy handling of enums. Since that is now fixed, this particular workaround is no longer necessary and can simply be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6566:54,security,access,access,54,"A priori Python code is protected by the GIL, so this access wouldn't be an issue for threaded code (GIL release is ever only on the actual call into C++, not on any setup code to reach that point). Additionally, this is a workaround for ROOT/meta's buggy handling of enums. Since that is now fixed, this particular workaround is no longer necessary and can simply be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6566:358,testability,simpl,simply,358,"A priori Python code is protected by the GIL, so this access wouldn't be an issue for threaded code (GIL release is ever only on the actual call into C++, not on any setup code to reach that point). Additionally, this is a workaround for ROOT/meta's buggy handling of enums. Since that is now fixed, this particular workaround is no longer necessary and can simply be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6566:358,usability,simpl,simply,358,"A priori Python code is protected by the GIL, so this access wouldn't be an issue for threaded code (GIL release is ever only on the actual call into C++, not on any setup code to reach that point). Additionally, this is a workaround for ROOT/meta's buggy handling of enums. Since that is now fixed, this particular workaround is no longer necessary and can simply be removed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6566
https://github.com/root-project/root/issues/6569:57,energy efficiency,current,currently,57,FWIW I don't agree with just closing this: the option is currently broken and it needs some action to deprecate / remove it. The issue should only be closed afterwards.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6569
https://github.com/root-project/root/issues/6569:150,usability,close,closed,150,FWIW I don't agree with just closing this: the option is currently broken and it needs some action to deprecate / remove it. The issue should only be closed afterwards.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6569
https://github.com/root-project/root/issues/6569:9,usability,close,close,9,"I try to close this again, now that this is merged:. https://github.com/root-project/root/pull/13856. :slightly_smiling_face:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6569
https://github.com/root-project/root/pull/6570:152,security,control,control,152,"`TTree::ChangeFile` dates back to the days where there was no way to create files larger than 2Gb. It is still ""useful"" in case where the user wants to control the output size of the files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:152,testability,control,control,152,"`TTree::ChangeFile` dates back to the days where there was no way to create files larger than 2Gb. It is still ""useful"" in case where the user wants to control the output size of the files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:138,usability,user,user,138,"`TTree::ChangeFile` dates back to the days where there was no way to create files larger than 2Gb. It is still ""useful"" in case where the user wants to control the output size of the files.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:52,usability,behavi,behavior,52,"Ok, maybe there is motivation to change the default behavior to never switching to a new file then -- the switching is a surprising thing, it could happen that you run a long job on some remote machine and then only copy back `file.root`, forgetting/ignoring `f__1.root`, `f__2.root` etc. What do you think?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:37,energy efficiency,current,current,37,"Yes, we might want to. Note that the current default is 100,000,000 bytes (100GB ish)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:131,performance,time,time,131,"Another issue has emerged with multithreaded RDF snapshot of a TChain. It seems like `TTree::ChangeFile` is still called, but this time within `TTree::CopyEntries`. It may be better to treat is in a different PR, since this one solves the original issue",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:60,performance,time,time,60,"> It seems like TTree::ChangeFile is still called, but this time within TTree::CopyEntries. . This tells us that we might want to move the protection inside TTree::ChangeFile. Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:224,testability,understand,understand,224,"> It seems like TTree::ChangeFile is still called, but this time within TTree::CopyEntries. . This tells us that we might want to move the protection inside TTree::ChangeFile. Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:201,usability,close,close,201,"> It seems like TTree::ChangeFile is still called, but this time within TTree::CopyEntries. . This tells us that we might want to move the protection inside TTree::ChangeFile. Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1438,availability,operat,operator,1438,"d `TFileMerger::PartialMerge`. The interesting part is that while usually `TFileMerger::fOutputFile` should be a derived of `TMemFile` (and that's why this PR works), in this particular case it isn't .Here is a call stack:. ```. #0 TFileMerger::PartialMerge (this=0x44b0108, in_type=14) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:815. #1 0x00007ffff7182b07 in ROOT::Experimental::TBufferMerger::Merge (this=0x44b00f0). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530. ```. And gdb tells us we're not dealing with a TMemFile anymore:. ```. (gdb) p this. $1 = (TFileMerger * const) 0x44b0108. (gdb) p this->fOutputFile. $2 = (TFile *) 0x4d63230. (gdb) p this->fOutputFile->InheritsFrom(""TMemFile""). $3 = false. ```. > Independently, before we close th",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:658,deployability,stack,stack,658,"> > It seems like TTree::ChangeFile is still called, but this time within TTree::CopyEntries. > . > This tells us that we might want to move the protection inside TTree::ChangeFile. I moved it and it still triggers it with this new reproducer https://gist.github.com/vepadulano/1cd2ac2296f85d10cf140166b08cf5c3. What happens is that when finalizing the MT Snapshot the TBufferMerger destructor is called, then follow `TBufferMerger::Merge` and `TFileMerger::PartialMerge`. The interesting part is that while usually `TFileMerger::fOutputFile` should be a derived of `TMemFile` (and that's why this PR works), in this particular case it isn't .Here is a call stack:. ```. #0 TFileMerger::PartialMerge (this=0x44b0108, in_type=14) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:815. #1 0x00007ffff7182b07 in ROOT::Experimental::TBufferMerger::Merge (this=0x44b00f0). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1068,energy efficiency,optim,optimized,1068," TTree::CopyEntries. > . > This tells us that we might want to move the protection inside TTree::ChangeFile. I moved it and it still triggers it with this new reproducer https://gist.github.com/vepadulano/1cd2ac2296f85d10cf140166b08cf5c3. What happens is that when finalizing the MT Snapshot the TBufferMerger destructor is called, then follow `TBufferMerger::Merge` and `TFileMerger::PartialMerge`. The interesting part is that while usually `TFileMerger::fOutputFile` should be a derived of `TMemFile` (and that's why this PR works), in this particular case it isn't .Here is a call stack:. ```. #0 TFileMerger::PartialMerge (this=0x44b0108, in_type=14) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:815. #1 0x00007ffff7182b07 in ROOT::Experimental::TBufferMerger::Merge (this=0x44b00f0). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1264,energy efficiency,optim,optimized,1264,"padulano/1cd2ac2296f85d10cf140166b08cf5c3. What happens is that when finalizing the MT Snapshot the TBufferMerger destructor is called, then follow `TBufferMerger::Merge` and `TFileMerger::PartialMerge`. The interesting part is that while usually `TFileMerger::fOutputFile` should be a derived of `TMemFile` (and that's why this PR works), in this particular case it isn't .Here is a call stack:. ```. #0 TFileMerger::PartialMerge (this=0x44b0108, in_type=14) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:815. #1 0x00007ffff7182b07 in ROOT::Experimental::TBufferMerger::Merge (this=0x44b00f0). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530. ```. And gdb tells us we're not dealing with a TMemFile anymore:. ```. (gdb) p this. $1 = (TFileMerger * con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:2652,integrability,messag,messages,2652,"ct/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530. ```. And gdb tells us we're not dealing with a TMemFile anymore:. ```. (gdb) p this. $1 = (TFileMerger * const) 0x44b0108. (gdb) p this->fOutputFile. $2 = (TFile *) 0x4d63230. (gdb) p this->fOutputFile->InheritsFrom(""TMemFile""). $3 = false. ```. > Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB). The original issue that triggered this investigation is in PyRDF (linked a few messages above). Unfortunately we don't have a full reproducer from the user, we just know that they were using IMT, although at some point in the discussion they tried with sequential execution and still got segfault. The fixes in this PR may be worth nonetheless though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:2652,interoperability,messag,messages,2652,"ct/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530. ```. And gdb tells us we're not dealing with a TMemFile anymore:. ```. (gdb) p this. $1 = (TFileMerger * const) 0x44b0108. (gdb) p this->fOutputFile. $2 = (TFile *) 0x4d63230. (gdb) p this->fOutputFile->InheritsFrom(""TMemFile""). $3 = false. ```. > Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB). The original issue that triggered this investigation is in PyRDF (linked a few messages above). Unfortunately we don't have a full reproducer from the user, we just know that they were using IMT, although at some point in the discussion they tried with sequential execution and still got segfault. The fixes in this PR may be worth nonetheless though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:2364,modifiability,Inherit,InheritsFrom,2364,"ct/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530. ```. And gdb tells us we're not dealing with a TMemFile anymore:. ```. (gdb) p this. $1 = (TFileMerger * const) 0x44b0108. (gdb) p this->fOutputFile. $2 = (TFile *) 0x4d63230. (gdb) p this->fOutputFile->InheritsFrom(""TMemFile""). $3 = false. ```. > Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB). The original issue that triggered this investigation is in PyRDF (linked a few messages above). Unfortunately we don't have a full reproducer from the user, we just know that they were using IMT, although at some point in the discussion they tried with sequential execution and still got segfault. The fixes in this PR may be worth nonetheless though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:62,performance,time,time,62,"> > It seems like TTree::ChangeFile is still called, but this time within TTree::CopyEntries. > . > This tells us that we might want to move the protection inside TTree::ChangeFile. I moved it and it still triggers it with this new reproducer https://gist.github.com/vepadulano/1cd2ac2296f85d10cf140166b08cf5c3. What happens is that when finalizing the MT Snapshot the TBufferMerger destructor is called, then follow `TBufferMerger::Merge` and `TFileMerger::PartialMerge`. The interesting part is that while usually `TFileMerger::fOutputFile` should be a derived of `TMemFile` (and that's why this PR works), in this particular case it isn't .Here is a call stack:. ```. #0 TFileMerger::PartialMerge (this=0x44b0108, in_type=14) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:815. #1 0x00007ffff7182b07 in ROOT::Experimental::TBufferMerger::Merge (this=0x44b00f0). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1068,performance,optimiz,optimized,1068," TTree::CopyEntries. > . > This tells us that we might want to move the protection inside TTree::ChangeFile. I moved it and it still triggers it with this new reproducer https://gist.github.com/vepadulano/1cd2ac2296f85d10cf140166b08cf5c3. What happens is that when finalizing the MT Snapshot the TBufferMerger destructor is called, then follow `TBufferMerger::Merge` and `TFileMerger::PartialMerge`. The interesting part is that while usually `TFileMerger::fOutputFile` should be a derived of `TMemFile` (and that's why this PR works), in this particular case it isn't .Here is a call stack:. ```. #0 TFileMerger::PartialMerge (this=0x44b0108, in_type=14) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:815. #1 0x00007ffff7182b07 in ROOT::Experimental::TBufferMerger::Merge (this=0x44b00f0). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1264,performance,optimiz,optimized,1264,"padulano/1cd2ac2296f85d10cf140166b08cf5c3. What happens is that when finalizing the MT Snapshot the TBufferMerger destructor is called, then follow `TBufferMerger::Merge` and `TFileMerger::PartialMerge`. The interesting part is that while usually `TFileMerger::fOutputFile` should be a derived of `TMemFile` (and that's why this PR works), in this particular case it isn't .Here is a call stack:. ```. #0 TFileMerger::PartialMerge (this=0x44b0108, in_type=14) at /home/vpadulan/Programs/rootproject/root/io/io/src/TFileMerger.cxx:815. #1 0x00007ffff7182b07 in ROOT::Experimental::TBufferMerger::Merge (this=0x44b00f0). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530. ```. And gdb tells us we're not dealing with a TMemFile anymore:. ```. (gdb) p this. $1 = (TFileMerger * con",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:2457,testability,understand,understand,2457,"ct/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530. ```. And gdb tells us we're not dealing with a TMemFile anymore:. ```. (gdb) p this. $1 = (TFileMerger * const) 0x44b0108. (gdb) p this->fOutputFile. $2 = (TFile *) 0x4d63230. (gdb) p this->fOutputFile->InheritsFrom(""TMemFile""). $3 = false. ```. > Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB). The original issue that triggered this investigation is in PyRDF (linked a few messages above). Unfortunately we don't have a full reproducer from the user, we just know that they were using IMT, although at some point in the discussion they tried with sequential execution and still got segfault. The fixes in this PR may be worth nonetheless though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:2434,usability,close,close,2434,"ct/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530. ```. And gdb tells us we're not dealing with a TMemFile anymore:. ```. (gdb) p this. $1 = (TFileMerger * const) 0x44b0108. (gdb) p this->fOutputFile. $2 = (TFile *) 0x4d63230. (gdb) p this->fOutputFile->InheritsFrom(""TMemFile""). $3 = false. ```. > Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB). The original issue that triggered this investigation is in PyRDF (linked a few messages above). Unfortunately we don't have a full reproducer from the user, we just know that they were using IMT, although at some point in the discussion they tried with sequential execution and still got segfault. The fixes in this PR may be worth nonetheless though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:2724,usability,user,user,2724,"ct/root/io/io/src/TBufferMerger.cxx:117. #2 0x00007ffff71826a7 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:51. #3 0x00007ffff71826f6 in ROOT::Experimental::TBufferMerger::~TBufferMerger (this=0x44b00f0, __in_chrg=<optimized out>). at /home/vpadulan/Programs/rootproject/root/io/io/src/TBufferMerger.cxx:52. #4 0x00000000004760c0 in std::default_delete<ROOT::Experimental::TBufferMerger>::operator() (this=0x16ecdb0, __ptr=0x44b00f0). at /usr/include/c++/10/bits/unique_ptr.h:85. #5 0x0000000000489453 in std::__uniq_ptr_impl<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:182. #6 0x0000000000488bc1 in std::unique_ptr<ROOT::Experimental::TBufferMerger, std::default_delete<ROOT::Experimental::TBufferMerger> >::reset (. this=0x16ecdb0, __p=0x0) at /usr/include/c++/10/bits/unique_ptr.h:456. #7 0x00000000004876c9 in ROOT::Internal::RDF::SnapshotHelperMT<int>::Finalize (this=0x16ecda0). at /home/vpadulan/Programs/rootproject/rootinstall/devdebugtest/include/ROOT/RDF/ActionHelpers.hxx:1530. ```. And gdb tells us we're not dealing with a TMemFile anymore:. ```. (gdb) p this. $1 = (TFileMerger * const) 0x44b0108. (gdb) p this->fOutputFile. $2 = (TFile *) 0x4d63230. (gdb) p this->fOutputFile->InheritsFrom(""TMemFile""). $3 = false. ```. > Independently, before we close this, we need to understand why TTree::ChangeFile was triggered in the first place for a TMemFile (as the default size is .. 100GB). The original issue that triggered this investigation is in PyRDF (linked a few messages above). Unfortunately we don't have a full reproducer from the user, we just know that they were using IMT, although at some point in the discussion they tried with sequential execution and still got segfault. The fixes in this PR may be worth nonetheless though.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:0,deployability,Updat,Update,0,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:251,deployability,patch,patch,251,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:713,integrability,messag,message,713,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:713,interoperability,messag,message,713,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:76,performance,time,time,76,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:257,reliability,doe,does,257,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:0,safety,Updat,Update,0,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:251,safety,patch,patch,251,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:0,security,Updat,Update,0,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:251,security,patch,patch,251,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:545,testability,simpl,simple,545,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:545,usability,simpl,simple,545,"Update:. After a very productive chat with @eguiraud we found out that this time `TTree::ChangeFile` is not trying to delete the `TBufferMergerFile`s attached to the `TBufferMerger`, but the `TFileMerger` attached to said `TBufferMerger`. The initial patch does not work since the `fOutputFile` member of `TFileMerger` is not a derivate of `TMemFile` and is the one that is getting changed in the process. The design of `TFileMerger` is of using `fOutputFile` as the file where all the data is merged, so of course it should never be deleted. A simple call to `TTree::SetMaxTreeSize()` with a very large size inside `ROOT::Internal::RDF::SnapshotHelperMT::Finalize()` solves the reproducer I attached in the last message.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:103,safety,test,test,103,Latest commit adds a fix in MT RDF Snapshot that should be reverted once #6640 will be solved. Another test has been added in RDF as well. This PR should now be ready to merge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:103,testability,test,test,103,Latest commit adds a fix in MT RDF Snapshot that should be reverted once #6640 will be solved. Another test has been added in RDF as well. This PR should now be ready to merge,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:21,availability,failur,failures,21,@vepadulano the test failures look real,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:21,deployability,fail,failures,21,@vepadulano the test failures look real,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:21,performance,failur,failures,21,@vepadulano the test failures look real,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:21,reliability,fail,failures,21,@vepadulano the test failures look real,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:16,safety,test,test,16,@vepadulano the test failures look real,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:16,testability,test,test,16,@vepadulano the test failures look real,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:52,availability,Failur,Failure,52,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:343,availability,failur,failures,343,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:914,availability,failur,failures,914,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1150,availability,operat,operations,1150,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:0,deployability,Updat,Updates,0,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:15,deployability,fail,failing,15,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:52,deployability,Fail,Failure,52,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:343,deployability,fail,failures,343,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:914,deployability,fail,failures,914,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1015,modifiability,refact,refactor,1015,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:52,performance,Failur,Failure,52,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:343,performance,failur,failures,343,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:914,performance,failur,failures,914,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1015,performance,refactor,refactor,1015,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1137,performance,multi-thread,multi-thread,1137,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1262,performance,time,time,1262,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1315,performance,time,time,1315,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:15,reliability,fail,failing,15,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:52,reliability,Fail,Failure,52,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:245,reliability,doe,does,245,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:343,reliability,fail,failures,343,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:914,reliability,fail,failures,914,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:0,safety,Updat,Updates,0,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:23,safety,test,tests,23,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:376,safety,test,test,376,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:871,safety,avoid,avoid,871,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:0,security,Updat,Updates,0,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:594,security,modif,modified,594,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:23,testability,test,tests,23,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:376,testability,test,test,376,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:707,usability,behavi,behaviour,707,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:850,usability,behavi,behaviour,850,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:953,usability,behavi,behaviour,953,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:1275,usability,help,helpers,1275,"Updates on the failing tests:. * Centos8/multicore: Failure because the same wrong mechanism of changing files happens in `FinalizeSlot` instead of `Finalize` in `SnapshotHelperMT`. Weirdly this didn't happen on my machine with 8 threads but it does on this node with 16 threads, still not sure what's the real difference there. * MacOS: Both failures happen in the dataframe test, but in the **single threaded** Snapshot, that is in the `Finalize` method of the `SnapshotHelper` class. At first this PR wasn't even considering the single threaded case, that's also why `SnapshotHelper` wasn't modified. So there was this difference between the single threaded Snapshot that still used the weird ChangeFile behaviour (although it shouldn't have triggered a segfault anyway since it's using a plain TFile), and the multithreaded Snapshot that got its behaviour changed to avoid the issue. Considering both types of failures, and the fact that a coherent behaviour across the two Snapshot modes is desirable, I would refactor the usage of `TTree::SetMaxTreeSize` inside of RDF Snapshot in a single common point that both single-thread and multi-thread operations have to go through, if that exists. Or in alternative, the workaround should be done at construction time of both helpers and then removed at destruction time (or in `Initialize` and `Finalize` methods).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6570:11,deployability,build,build,11,@phsft-bot build please,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6570
https://github.com/root-project/root/pull/6571:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6571
https://github.com/root-project/root/pull/6571:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6571
https://github.com/root-project/root/issues/6574:90,usability,user,users,90,The linked PR fixes the issue by forcing the ROOT defaults. Be aware that this means that users cannot set their own `CMAKE_CXX_FLAGS_${BUILD_TYPE}` anymore.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6574
https://github.com/root-project/root/issues/6575:195,testability,assert,asserts,195,I think that the issue comes from the fact that we do not pick up our own defaults for `CMAKE_CXX_FLAGS_${BUILD_TYPE}$` (see the issue https://github.com/root-project/root/issues/6574) and then `asserts=OFF` adds another `NDEBUG`. Then we have two `-DNDEBUG` ending up in the sum of all compiler flags.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:138,deployability,Configurat,Configuration,138,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:251,deployability,Build,Build,251,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:278,deployability,Instal,Install,278,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:610,deployability,Modul,Module,610,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:195,energy efficiency,core,core,195,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:209,energy efficiency,Core,Core,209,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:227,energy efficiency,CPU,CPU,227,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:138,integrability,Configur,Configuration,138,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:619,interoperability,Share,Shared,619,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:138,modifiability,Configur,Configuration,138,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:610,modifiability,Modul,Module,610,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:227,performance,CPU,CPU,227,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:610,safety,Modul,Module,610,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:138,security,Configur,Configuration,138,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:651,security,hash,hash-style,651,"Here some example (including the PR https://github.com/root-project/root/pull/6572 which prints the actual compiler flags):. ```. -- ROOT Configuration . System Linux-5.8.13-arch1-1. Processor 2 core Intel(R) Core(TM) i7-7600U CPU @ 2.80GHz (x86_64). Build type RelWithDebInfo. Install path /usr/local. Compiler GNU 10.2.0. Compiler flags:. C -Wno-implicit-fallthrough -pipe -Wall -W -pthread -DNDEBUG -O2 -g -DNDEBUG. C++ -std=c++17 -Wno-implicit-fallthrough -Wno-noexcept-type -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread -DNDEBUG -O2 -g -DNDEBUG. Linker flags:. Executable -rdynamic. Module . Shared -Wl,--no-undefined -Wl,--hash-style=""both"". ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:39,usability,confirm,confirmation,39,Let's keep this open until we have the confirmation from the CI that the issue is fixed.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:30,availability,servic,services,30,Running [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/184/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:30,deployability,servic,services,30,Running [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/184/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:30,integrability,servic,services,30,Running [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/184/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/issues/6575:30,modifiability,servic,services,30,Running [here](https://lcgapp-services.cern.ch/root-jenkins/view/conda/job/conda-nightlies/184/),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6575
https://github.com/root-project/root/pull/6576:10,reliability,doe,does,10,@andriish does this change fixes the problem in your main program ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:71,reliability,doe,does,71,"Hi @couet , . First of all thanks for the fix and thanks for asking! > does this change fixes the problem in your main program . Yes and no. It improves a lot. . I hope with some more fixes there will be no issues on the ROOT side. But, of course, there ~~might be~~ are some ""native"" bugs, but these I will have to fix by myself. Best regards,. Andrii. P.S. Right now the only nontrivial (i.e. non FPE ) nonreported issue I see is a crash related to TIter. But I cannot reproduce it standalone...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:54,availability,failur,failure,54,". Hi @pcanal ,. > We need better understanding of the failure mode. OK, I see. Meanwhile I've simplified the reproducer. ```. #include <TCanvas.h>. #include <TPad.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. c->cd();. delete c;. delete C;. return 0;. }. ```. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:54,deployability,fail,failure,54,". Hi @pcanal ,. > We need better understanding of the failure mode. OK, I see. Meanwhile I've simplified the reproducer. ```. #include <TCanvas.h>. #include <TPad.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. c->cd();. delete c;. delete C;. return 0;. }. ```. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:54,performance,failur,failure,54,". Hi @pcanal ,. > We need better understanding of the failure mode. OK, I see. Meanwhile I've simplified the reproducer. ```. #include <TCanvas.h>. #include <TPad.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. c->cd();. delete c;. delete C;. return 0;. }. ```. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:54,reliability,fail,failure,54,". Hi @pcanal ,. > We need better understanding of the failure mode. OK, I see. Meanwhile I've simplified the reproducer. ```. #include <TCanvas.h>. #include <TPad.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. c->cd();. delete c;. delete C;. return 0;. }. ```. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:33,testability,understand,understanding,33,". Hi @pcanal ,. > We need better understanding of the failure mode. OK, I see. Meanwhile I've simplified the reproducer. ```. #include <TCanvas.h>. #include <TPad.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. c->cd();. delete c;. delete C;. return 0;. }. ```. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:94,testability,simpl,simplified,94,". Hi @pcanal ,. > We need better understanding of the failure mode. OK, I see. Meanwhile I've simplified the reproducer. ```. #include <TCanvas.h>. #include <TPad.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. c->cd();. delete c;. delete C;. return 0;. }. ```. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:94,usability,simpl,simplified,94,". Hi @pcanal ,. > We need better understanding of the failure mode. OK, I see. Meanwhile I've simplified the reproducer. ```. #include <TCanvas.h>. #include <TPad.h>. int main(int argc, char **argv) {. TCanvas* C= new TCanvas(""canvas"",""canvas"",1024,768);. C->cd();. TPad* c= new TPad();. c->cd();. delete c;. delete C;. return 0;. }. ```. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:35,security,modif,modified,35,@andriish so now this PR should be modified to suppress changes in TCanvas and change TPad destructor to reset gPad if needed. Can you do it ? (that's your PR).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:20,safety,test,test,20,"Hi @couet ,. I will test the nightbuild and close the relevant issues tomorrow. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:20,testability,test,test,20,"Hi @couet ,. I will test the nightbuild and close the relevant issues tomorrow. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/pull/6576:44,usability,close,close,44,"Hi @couet ,. I will test the nightbuild and close the relevant issues tomorrow. Best regards,. Andrii.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6576
https://github.com/root-project/root/issues/6577:465,availability,ping,ping,465,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:134,deployability,build,builds,134,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:293,deployability,build,builds,293,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:363,deployability,build,builds,363,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:220,modifiability,variab,variables,220,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:120,performance,time,time,120,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:214,performance,cach,cache,214,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:283,usability,custom,customise,283,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:329,usability,user,users,329,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:347,usability,custom,customise,347,"@stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. When my builds didn't do what they should, I didn't really expect that it's *again* the cache variables, which Guilherme and me had fixed before in order to customise builds. You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). @Axel-Naumann @oshadura ping?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:485,availability,ping,ping,485,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:146,deployability,build,builds,146,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:305,deployability,build,builds,305,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:377,deployability,build,builds,377,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:232,modifiability,variab,variables,232,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:122,performance,time,time,122,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:226,performance,cach,cache,226,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:676,safety,reme,remember,676,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:641,testability,understand,understand,641,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:295,usability,custom,customise,295,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:343,usability,user,users,343,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:361,usability,custom,customise,361,"> @stwunsch your ""fix"" #6574 broke cmake conventions. If you break it, I think you should take care that it gets fixed in time. > . 💥 . > When my builds didn't do what they should, I didn't really expect that it's _again_ the cache variables, which Guilherme and me had fixed before in order to customise builds. > You should be nicer towards users who want to customise their builds to report bugs to you guys with exact code locations etc (#7903). :-). > . > @Axel-Naumann @oshadura ping? So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? I don't remember why it hasn't been done like that in the first place, because we were definitely aware of this (because this issue exists).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:208,integrability,configur,configure,208,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it. And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:208,modifiability,configur,configure,208,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it. And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:381,modifiability,variab,variables,381,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it. And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:247,performance,CACH,CACHE,247,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it. And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:208,security,configur,configure,208,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it. And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:152,testability,understand,understand,152,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it. And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:184,usability,user,users,184,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it. And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:420,usability,user,users,420,"> So the approach lined out in this issue is correct, we want the `*_INIT` thingy, right? The violation of the cmake conventions is using `FORCE`, do I understand this correctly? Yes, users should be able to configure (and reconfigure, therefore `CACHE`) with `-DCMAKE_CXX_FLAGS_DEBUG=-O1 -g` if the want to. With `FORCE` ROOT just overwrites it. And the `_INIT`s should set those variables to what ROOT wants, and then users can overwrite them as they see fit. 👍",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:281,deployability,build,build,281,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:512,deployability,build,build,512,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:583,energy efficiency,Current,Currently,583,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:573,modifiability,variab,variable,573,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:844,performance,deadlock,deadlock,844,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:14,safety,reme,remember,14,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:35,safety,compl,complicated,35,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:35,security,compl,complicated,35,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:680,testability,assert,asserts,680,"Ah I start to remember why it's so complicated. We set the flags in the `SetUp(Linux|MacOS|Windows).cmake` scripts called in the `CheckCompiler.cmake` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L130). But we have to call this after figuring out all the build flags, which is way after we call `project(ROOT)` [here](https://github.com/root-project/root/blob/master/CMakeLists.txt#L32). The questions is for me now whether we can ""just"" move the `project(ROOT)` after figuring out the build flags and then use the `*_INIT` instead of forcing the variable. Currently, we have to force it because otherwise we cannot change the defaults for which we want asserts in `RelWithDebInfo`. Edit: Moving `project(ROOT)` is definitely not an option because then nothing works in cmake, e.g. `find_package`. And now we are in a deadlock 😬",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:32,deployability,Build,BuildOption,32,"I don't see where the `asserts` BuildOption is used?! I only see that it's defined and set. The assert yes/no problem might be solved either by setting the flags manually as users would do it `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2""` or by a string replacement:. ```cmake. foreach(flag_var. CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE. CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO). if(${flag_var} MATCHES ""NDEBUG""). string(REGEX REPLACE ""-DNDEBUG"" """" ${flag_var} ""${${flag_var}}""). endif(). endforeach(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:23,testability,assert,asserts,23,"I don't see where the `asserts` BuildOption is used?! I only see that it's defined and set. The assert yes/no problem might be solved either by setting the flags manually as users would do it `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2""` or by a string replacement:. ```cmake. foreach(flag_var. CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE. CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO). if(${flag_var} MATCHES ""NDEBUG""). string(REGEX REPLACE ""-DNDEBUG"" """" ${flag_var} ""${${flag_var}}""). endif(). endforeach(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:96,testability,assert,assert,96,"I don't see where the `asserts` BuildOption is used?! I only see that it's defined and set. The assert yes/no problem might be solved either by setting the flags manually as users would do it `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2""` or by a string replacement:. ```cmake. foreach(flag_var. CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE. CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO). if(${flag_var} MATCHES ""NDEBUG""). string(REGEX REPLACE ""-DNDEBUG"" """" ${flag_var} ""${${flag_var}}""). endif(). endforeach(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:174,usability,user,users,174,"I don't see where the `asserts` BuildOption is used?! I only see that it's defined and set. The assert yes/no problem might be solved either by setting the flags manually as users would do it `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2""` or by a string replacement:. ```cmake. foreach(flag_var. CMAKE_CXX_FLAGS CMAKE_CXX_FLAGS_DEBUG CMAKE_CXX_FLAGS_RELEASE. CMAKE_CXX_FLAGS_MINSIZEREL CMAKE_CXX_FLAGS_RELWITHDEBINFO). if(${flag_var} MATCHES ""NDEBUG""). string(REGEX REPLACE ""-DNDEBUG"" """" ${flag_var} ""${${flag_var}}""). endif(). endforeach(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:4,deployability,build,build,4,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:91,deployability,modul,modules,91,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:432,deployability,depend,dependent,432,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:312,energy efficiency,current,current,312,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:167,integrability,sub,subject,167,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:432,integrability,depend,dependent,432,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:91,modifiability,modul,modules,91,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:432,modifiability,depend,dependent,432,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:455,modifiability,pac,package,455,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:91,safety,modul,modules,91,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:432,safety,depend,dependent,432,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:432,testability,depend,dependent,432,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:320,usability,behavi,behaviour,320,"Any build option, like `dev` [here](https://github.com/root-project/root/blob/master/cmake/modules/SetUpLinux.cmake#L40) or whatever you find in these scripts, may be subject to change during the lines https://github.com/root-project/root/blob/master/CMakeLists.txt#L33-L128. If this happens, we would break the current behaviour if we move the `CheckCompiler` macro before calling `project(ROOT)`. I think if any of these flags is dependent on finding a package, which has to happen after `project(ROOT)`.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:149,deployability,modul,modules,149,"Ah hell breaks loose, just tried to move things around. E.g. `find_package` calls like [here](https://github.com/root-project/root/blob/master/cmake/modules/CheckCompiler.cmake#L183) prevent to move full macros around, meaning in front of `project(ROOT)`. So we have to dissect these and then move parts out of it. I'm happy for any suggestions how this could be fixed properly without shuffling too many details of our toplevel CMakeLists file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:149,modifiability,modul,modules,149,"Ah hell breaks loose, just tried to move things around. E.g. `find_package` calls like [here](https://github.com/root-project/root/blob/master/cmake/modules/CheckCompiler.cmake#L183) prevent to move full macros around, meaning in front of `project(ROOT)`. So we have to dissect these and then move parts out of it. I'm happy for any suggestions how this could be fixed properly without shuffling too many details of our toplevel CMakeLists file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:149,safety,modul,modules,149,"Ah hell breaks loose, just tried to move things around. E.g. `find_package` calls like [here](https://github.com/root-project/root/blob/master/cmake/modules/CheckCompiler.cmake#L183) prevent to move full macros around, meaning in front of `project(ROOT)`. So we have to dissect these and then move parts out of it. I'm happy for any suggestions how this could be fixed properly without shuffling too many details of our toplevel CMakeLists file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:183,safety,prevent,prevent,183,"Ah hell breaks loose, just tried to move things around. E.g. `find_package` calls like [here](https://github.com/root-project/root/blob/master/cmake/modules/CheckCompiler.cmake#L183) prevent to move full macros around, meaning in front of `project(ROOT)`. So we have to dissect these and then move parts out of it. I'm happy for any suggestions how this could be fixed properly without shuffling too many details of our toplevel CMakeLists file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:183,security,preven,prevent,183,"Ah hell breaks loose, just tried to move things around. E.g. `find_package` calls like [here](https://github.com/root-project/root/blob/master/cmake/modules/CheckCompiler.cmake#L183) prevent to move full macros around, meaning in front of `project(ROOT)`. So we have to dissect these and then move parts out of it. I'm happy for any suggestions how this could be fixed properly without shuffling too many details of our toplevel CMakeLists file.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:456,deployability,stack,stackoverflow,456,"This might be a solution. The point is that those things are loaded after cmake's defaults, but before the information is put to use. ### MyInitFlags.cmake. ```cmake. # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-ggdb3 -O0""). endif(). ```. ### CMakeLists.txt. ```cmake. set(CMAKE_USER_MAKE_RULES_OVERRIDE ""MyInitFlags.cmake""). project(your_project C CXX). ```. From [here](https://stackoverflow.com/questions/28732209/change-default-value-of-cmake-cxx-flags-debug-and-friends-in-cmake). An alternative, also from that post, is to check whether users tried to alter the variables. That's probably less work for ROOT's setup:. ```cmake. project(your_project C CXX). if (DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT AND . ""${CMAKE_CXX_FLAGS_DEBUG_INIT}"" STREQUAL ""${CMAKE_CXX_FLAGS_DEBUG}""). # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG ""-ggdb3 -O0"" CACHE STRING """" FORCE). endif(). endif(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:61,energy efficiency,load,loaded,61,"This might be a solution. The point is that those things are loaded after cmake's defaults, but before the information is put to use. ### MyInitFlags.cmake. ```cmake. # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-ggdb3 -O0""). endif(). ```. ### CMakeLists.txt. ```cmake. set(CMAKE_USER_MAKE_RULES_OVERRIDE ""MyInitFlags.cmake""). project(your_project C CXX). ```. From [here](https://stackoverflow.com/questions/28732209/change-default-value-of-cmake-cxx-flags-debug-and-friends-in-cmake). An alternative, also from that post, is to check whether users tried to alter the variables. That's probably less work for ROOT's setup:. ```cmake. project(your_project C CXX). if (DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT AND . ""${CMAKE_CXX_FLAGS_DEBUG_INIT}"" STREQUAL ""${CMAKE_CXX_FLAGS_DEBUG}""). # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG ""-ggdb3 -O0"" CACHE STRING """" FORCE). endif(). endif(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:644,modifiability,variab,variables,644,"This might be a solution. The point is that those things are loaded after cmake's defaults, but before the information is put to use. ### MyInitFlags.cmake. ```cmake. # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-ggdb3 -O0""). endif(). ```. ### CMakeLists.txt. ```cmake. set(CMAKE_USER_MAKE_RULES_OVERRIDE ""MyInitFlags.cmake""). project(your_project C CXX). ```. From [here](https://stackoverflow.com/questions/28732209/change-default-value-of-cmake-cxx-flags-debug-and-friends-in-cmake). An alternative, also from that post, is to check whether users tried to alter the variables. That's probably less work for ROOT's setup:. ```cmake. project(your_project C CXX). if (DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT AND . ""${CMAKE_CXX_FLAGS_DEBUG_INIT}"" STREQUAL ""${CMAKE_CXX_FLAGS_DEBUG}""). # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG ""-ggdb3 -O0"" CACHE STRING """" FORCE). endif(). endif(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:61,performance,load,loaded,61,"This might be a solution. The point is that those things are loaded after cmake's defaults, but before the information is put to use. ### MyInitFlags.cmake. ```cmake. # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-ggdb3 -O0""). endif(). ```. ### CMakeLists.txt. ```cmake. set(CMAKE_USER_MAKE_RULES_OVERRIDE ""MyInitFlags.cmake""). project(your_project C CXX). ```. From [here](https://stackoverflow.com/questions/28732209/change-default-value-of-cmake-cxx-flags-debug-and-friends-in-cmake). An alternative, also from that post, is to check whether users tried to alter the variables. That's probably less work for ROOT's setup:. ```cmake. project(your_project C CXX). if (DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT AND . ""${CMAKE_CXX_FLAGS_DEBUG_INIT}"" STREQUAL ""${CMAKE_CXX_FLAGS_DEBUG}""). # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG ""-ggdb3 -O0"" CACHE STRING """" FORCE). endif(). endif(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:981,performance,CACH,CACHE,981,"This might be a solution. The point is that those things are loaded after cmake's defaults, but before the information is put to use. ### MyInitFlags.cmake. ```cmake. # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-ggdb3 -O0""). endif(). ```. ### CMakeLists.txt. ```cmake. set(CMAKE_USER_MAKE_RULES_OVERRIDE ""MyInitFlags.cmake""). project(your_project C CXX). ```. From [here](https://stackoverflow.com/questions/28732209/change-default-value-of-cmake-cxx-flags-debug-and-friends-in-cmake). An alternative, also from that post, is to check whether users tried to alter the variables. That's probably less work for ROOT's setup:. ```cmake. project(your_project C CXX). if (DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT AND . ""${CMAKE_CXX_FLAGS_DEBUG_INIT}"" STREQUAL ""${CMAKE_CXX_FLAGS_DEBUG}""). # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG ""-ggdb3 -O0"" CACHE STRING """" FORCE). endif(). endif(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:619,usability,user,users,619,"This might be a solution. The point is that those things are loaded after cmake's defaults, but before the information is put to use. ### MyInitFlags.cmake. ```cmake. # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-ggdb3 -O0""). endif(). ```. ### CMakeLists.txt. ```cmake. set(CMAKE_USER_MAKE_RULES_OVERRIDE ""MyInitFlags.cmake""). project(your_project C CXX). ```. From [here](https://stackoverflow.com/questions/28732209/change-default-value-of-cmake-cxx-flags-debug-and-friends-in-cmake). An alternative, also from that post, is to check whether users tried to alter the variables. That's probably less work for ROOT's setup:. ```cmake. project(your_project C CXX). if (DEFINED CMAKE_CXX_FLAGS_DEBUG_INIT AND . ""${CMAKE_CXX_FLAGS_DEBUG_INIT}"" STREQUAL ""${CMAKE_CXX_FLAGS_DEBUG}""). # Overwrite the init values choosen by CMake. if (CMAKE_CXX_COMPILER_ID MATCHES ""GNU""). set(CMAKE_CXX_FLAGS_DEBUG ""-ggdb3 -O0"" CACHE STRING """" FORCE). endif(). endif(). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:484,deployability,Build,Build,484,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:497,deployability,Releas,Release,497,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:745,deployability,version,versions,745,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:745,integrability,version,versions,745,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:371,interoperability,Platform,Platform,371,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:452,interoperability,Architectur,Architecture,452,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:745,modifiability,version,versions,745,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:663,reliability,Doe,Does,663,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:118,safety,compl,completely,118,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:118,security,compl,completely,118,"@hageboeck I've linked a fix following the second proposal. However, it seems just to prepend the provided flags, not completely replaces them:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE_INIT=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to the default values because CMAKE_CXX_FLAGS_RELEASE_INIT was explicitely set. ... -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo -O2 -DNDEBUG'). ... ```. Using just `/usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src` (note, not `_INIT`) isn't doing anything. ~~Does this make sense?~~. Edit: Forget about this, it's buggy because the `*_INIT` versions have an additional whitespace in front. I'll have a second look at this.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:303,deployability,Fail,Failed,303,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:432,deployability,Build,Build,432,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:445,deployability,Releas,Release,445,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:588,deployability,updat,updated,588,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:319,interoperability,Platform,Platform,319,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:400,interoperability,Architectur,Architecture,400,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:188,modifiability,variab,variable,188,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:221,performance,Performing Test,Performing Test,221,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:263,performance,Performing Test,Performing Test,263,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:303,reliability,Fail,Failed,303,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:604,reliability,Doe,Does,604,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:232,safety,Test,Test,232,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:274,safety,Test,Test,274,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:588,safety,updat,updated,588,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:588,security,updat,updated,588,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:232,testability,Test,Test,232,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:274,testability,Test,Test,274,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:221,usability,Perform,Performing,221,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:263,usability,Perform,Performing,263,"@hageboeck Ok, here:. ```. /usr/bin/cmake3 -DCMAKE_CXX_FLAGS_RELEASE=""foo"" /path/to/src. ... -- Compiler flags for CMAKE_CXX_FLAGS_RELEASE are not set to ROOT's default values because the variable was explicitely set. -- Performing Test GLIBCXX_USE_CXX11_ABI. -- Performing Test GLIBCXX_USE_CXX11_ABI - Failed. -- ROOT Platform: linux. -- ROOT Compiler: GNU 4.8.5. -- ROOT Processor: x86_64. -- ROOT Architecture: linuxx8664gcc. -- Build Type: 'Release' (flags = 'foo'). -- Compiler Flags: -std=c++11 -pipe -Wshadow -Wall -W -Woverloaded-virtual -fsigned-char -pthread foo. ... ```. I've updated the PR. Does this look good to you?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:856,deployability,build,build,856,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:109,energy efficiency,optim,optimisation,109,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:771,integrability,Configur,Configure,771,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:553,modifiability,variab,variables,553,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:771,modifiability,Configur,Configure,771,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:291,safety,compl,complained,291,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:291,security,compl,complained,291,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:771,security,Configur,Configure,771,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:723,testability,assert,asserts,723,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:867,testability,assert,assert,867,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:44,usability,document,documentation,44,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:849,usability,custom,custom,849,"Ok, I had another look -- also at the cmake documentation --, and I'm wondering now:. Why are we setting the optimisation flags at all? A ""clean"" way is probably this:. - We remove the setting of the flags from `SetUpLinux` and `SetUpMac`. They didn't have an effect in the past, and nobody complained other than not being able to override them. - If we think that `-O2` is better than `-O3`, it's fine to do it [here](https://github.com/root-project/root/blob/f040e05154c9f4c9899cd6e2262c68a0af944ea5/CMakeLists.txt#L14) by setting one of the `*_INIT` variables. - We seem to be able to use the same for linux as for Mac, so less configs, and for Windows we just don't do anything. CMake will figure it out. - If you want asserts, there's two easy ways to get them:. 1. Configure with `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O2 -g"" ...`. 2. We create a custom build type assert using `set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g"")`. Thoughts?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:467,availability,state,state,467,"Actually, I agree. In particular because we haven't using the defaults in these files for years and it just came up due to our assert fiasco. But you see, it's going to be a larger surgery to remove the `SetUp*.cmake` files and it may change the behaviour of the build system. And stuff will just break if we don't use the build in our CI. That's why I'm hesitant to touch too much of these internals. @oshadura @Axel-Naumann Now it's your turn to dive into this and state your opinion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:263,deployability,build,build,263,"Actually, I agree. In particular because we haven't using the defaults in these files for years and it just came up due to our assert fiasco. But you see, it's going to be a larger surgery to remove the `SetUp*.cmake` files and it may change the behaviour of the build system. And stuff will just break if we don't use the build in our CI. That's why I'm hesitant to touch too much of these internals. @oshadura @Axel-Naumann Now it's your turn to dive into this and state your opinion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:323,deployability,build,build,323,"Actually, I agree. In particular because we haven't using the defaults in these files for years and it just came up due to our assert fiasco. But you see, it's going to be a larger surgery to remove the `SetUp*.cmake` files and it may change the behaviour of the build system. And stuff will just break if we don't use the build in our CI. That's why I'm hesitant to touch too much of these internals. @oshadura @Axel-Naumann Now it's your turn to dive into this and state your opinion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:467,integrability,state,state,467,"Actually, I agree. In particular because we haven't using the defaults in these files for years and it just came up due to our assert fiasco. But you see, it's going to be a larger surgery to remove the `SetUp*.cmake` files and it may change the behaviour of the build system. And stuff will just break if we don't use the build in our CI. That's why I'm hesitant to touch too much of these internals. @oshadura @Axel-Naumann Now it's your turn to dive into this and state your opinion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:127,testability,assert,assert,127,"Actually, I agree. In particular because we haven't using the defaults in these files for years and it just came up due to our assert fiasco. But you see, it's going to be a larger surgery to remove the `SetUp*.cmake` files and it may change the behaviour of the build system. And stuff will just break if we don't use the build in our CI. That's why I'm hesitant to touch too much of these internals. @oshadura @Axel-Naumann Now it's your turn to dive into this and state your opinion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:246,usability,behavi,behaviour,246,"Actually, I agree. In particular because we haven't using the defaults in these files for years and it just came up due to our assert fiasco. But you see, it's going to be a larger surgery to remove the `SetUp*.cmake` files and it may change the behaviour of the build system. And stuff will just break if we don't use the build in our CI. That's why I'm hesitant to touch too much of these internals. @oshadura @Axel-Naumann Now it's your turn to dive into this and state your opinion :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:212,deployability,build,build,212,"Probably to summarize: Following cmake best practise, all `CMAKE_CXX_FLAGS*` should be set **before** calling `project(ROOT)` because the `project` calls finalises these variables. Indeed, this could be ok if no build flag relies on finding a package and then changes its behaviour. **After** `project(ROOT)` we should change `CMAKE_CXX_FLAGS*` just by doing string manipulation. @hageboeck Is this correct? Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:170,modifiability,variab,variables,170,"Probably to summarize: Following cmake best practise, all `CMAKE_CXX_FLAGS*` should be set **before** calling `project(ROOT)` because the `project` calls finalises these variables. Indeed, this could be ok if no build flag relies on finding a package and then changes its behaviour. **After** `project(ROOT)` we should change `CMAKE_CXX_FLAGS*` just by doing string manipulation. @hageboeck Is this correct? Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:243,modifiability,pac,package,243,"Probably to summarize: Following cmake best practise, all `CMAKE_CXX_FLAGS*` should be set **before** calling `project(ROOT)` because the `project` calls finalises these variables. Indeed, this could be ok if no build flag relies on finding a package and then changes its behaviour. **After** `project(ROOT)` we should change `CMAKE_CXX_FLAGS*` just by doing string manipulation. @hageboeck Is this correct? Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:44,reliability,pra,practise,44,"Probably to summarize: Following cmake best practise, all `CMAKE_CXX_FLAGS*` should be set **before** calling `project(ROOT)` because the `project` calls finalises these variables. Indeed, this could be ok if no build flag relies on finding a package and then changes its behaviour. **After** `project(ROOT)` we should change `CMAKE_CXX_FLAGS*` just by doing string manipulation. @hageboeck Is this correct? Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:504,testability,assert,asserts,504,"Probably to summarize: Following cmake best practise, all `CMAKE_CXX_FLAGS*` should be set **before** calling `project(ROOT)` because the `project` calls finalises these variables. Indeed, this could be ok if no build flag relies on finding a package and then changes its behaviour. **After** `project(ROOT)` we should change `CMAKE_CXX_FLAGS*` just by doing string manipulation. @hageboeck Is this correct? Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:272,usability,behavi,behaviour,272,"Probably to summarize: Following cmake best practise, all `CMAKE_CXX_FLAGS*` should be set **before** calling `project(ROOT)` because the `project` calls finalises these variables. Indeed, this could be ok if no build flag relies on finding a package and then changes its behaviour. **After** `project(ROOT)` we should change `CMAKE_CXX_FLAGS*` just by doing string manipulation. @hageboeck Is this correct? Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:46,deployability,version,versions,46,"It's sufficient to set the `CMAKE_CXX_*_INIT` versions of the build-type related flags *if* we want to change the defaults. Then, cmake will populate the actual flags for us, and users can override them as they see fit. After `project(root)`, string manipulations are OK, but **not** overriding the entire string. Appending the whole chain of warning and linker flags can still be done in those `SetUp*` files. I would leave them mostly intact, and would just remove the ""cache force"" lines. @stwunsch I *think* those flags were in effect for quite a while, because they weren't `CACHE` flags before I had trouble overriding them. When I made them `CACHE` in 2019 3c42b07168b8315ac1ed1abbf69f89d5f4e99099, the config lines stopped having an effect, but you were able to set them from the outside again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:62,deployability,build,build-type,62,"It's sufficient to set the `CMAKE_CXX_*_INIT` versions of the build-type related flags *if* we want to change the defaults. Then, cmake will populate the actual flags for us, and users can override them as they see fit. After `project(root)`, string manipulations are OK, but **not** overriding the entire string. Appending the whole chain of warning and linker flags can still be done in those `SetUp*` files. I would leave them mostly intact, and would just remove the ""cache force"" lines. @stwunsch I *think* those flags were in effect for quite a while, because they weren't `CACHE` flags before I had trouble overriding them. When I made them `CACHE` in 2019 3c42b07168b8315ac1ed1abbf69f89d5f4e99099, the config lines stopped having an effect, but you were able to set them from the outside again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:46,integrability,version,versions,46,"It's sufficient to set the `CMAKE_CXX_*_INIT` versions of the build-type related flags *if* we want to change the defaults. Then, cmake will populate the actual flags for us, and users can override them as they see fit. After `project(root)`, string manipulations are OK, but **not** overriding the entire string. Appending the whole chain of warning and linker flags can still be done in those `SetUp*` files. I would leave them mostly intact, and would just remove the ""cache force"" lines. @stwunsch I *think* those flags were in effect for quite a while, because they weren't `CACHE` flags before I had trouble overriding them. When I made them `CACHE` in 2019 3c42b07168b8315ac1ed1abbf69f89d5f4e99099, the config lines stopped having an effect, but you were able to set them from the outside again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:46,modifiability,version,versions,46,"It's sufficient to set the `CMAKE_CXX_*_INIT` versions of the build-type related flags *if* we want to change the defaults. Then, cmake will populate the actual flags for us, and users can override them as they see fit. After `project(root)`, string manipulations are OK, but **not** overriding the entire string. Appending the whole chain of warning and linker flags can still be done in those `SetUp*` files. I would leave them mostly intact, and would just remove the ""cache force"" lines. @stwunsch I *think* those flags were in effect for quite a while, because they weren't `CACHE` flags before I had trouble overriding them. When I made them `CACHE` in 2019 3c42b07168b8315ac1ed1abbf69f89d5f4e99099, the config lines stopped having an effect, but you were able to set them from the outside again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:472,performance,cach,cache,472,"It's sufficient to set the `CMAKE_CXX_*_INIT` versions of the build-type related flags *if* we want to change the defaults. Then, cmake will populate the actual flags for us, and users can override them as they see fit. After `project(root)`, string manipulations are OK, but **not** overriding the entire string. Appending the whole chain of warning and linker flags can still be done in those `SetUp*` files. I would leave them mostly intact, and would just remove the ""cache force"" lines. @stwunsch I *think* those flags were in effect for quite a while, because they weren't `CACHE` flags before I had trouble overriding them. When I made them `CACHE` in 2019 3c42b07168b8315ac1ed1abbf69f89d5f4e99099, the config lines stopped having an effect, but you were able to set them from the outside again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:580,performance,CACH,CACHE,580,"It's sufficient to set the `CMAKE_CXX_*_INIT` versions of the build-type related flags *if* we want to change the defaults. Then, cmake will populate the actual flags for us, and users can override them as they see fit. After `project(root)`, string manipulations are OK, but **not** overriding the entire string. Appending the whole chain of warning and linker flags can still be done in those `SetUp*` files. I would leave them mostly intact, and would just remove the ""cache force"" lines. @stwunsch I *think* those flags were in effect for quite a while, because they weren't `CACHE` flags before I had trouble overriding them. When I made them `CACHE` in 2019 3c42b07168b8315ac1ed1abbf69f89d5f4e99099, the config lines stopped having an effect, but you were able to set them from the outside again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:649,performance,CACH,CACHE,649,"It's sufficient to set the `CMAKE_CXX_*_INIT` versions of the build-type related flags *if* we want to change the defaults. Then, cmake will populate the actual flags for us, and users can override them as they see fit. After `project(root)`, string manipulations are OK, but **not** overriding the entire string. Appending the whole chain of warning and linker flags can still be done in those `SetUp*` files. I would leave them mostly intact, and would just remove the ""cache force"" lines. @stwunsch I *think* those flags were in effect for quite a while, because they weren't `CACHE` flags before I had trouble overriding them. When I made them `CACHE` in 2019 3c42b07168b8315ac1ed1abbf69f89d5f4e99099, the config lines stopped having an effect, but you were able to set them from the outside again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:179,usability,user,users,179,"It's sufficient to set the `CMAKE_CXX_*_INIT` versions of the build-type related flags *if* we want to change the defaults. Then, cmake will populate the actual flags for us, and users can override them as they see fit. After `project(root)`, string manipulations are OK, but **not** overriding the entire string. Appending the whole chain of warning and linker flags can still be done in those `SetUp*` files. I would leave them mostly intact, and would just remove the ""cache force"" lines. @stwunsch I *think* those flags were in effect for quite a while, because they weren't `CACHE` flags before I had trouble overriding them. When I made them `CACHE` in 2019 3c42b07168b8315ac1ed1abbf69f89d5f4e99099, the config lines stopped having an effect, but you were able to set them from the outside again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:723,usability,stop,stopped,723,"It's sufficient to set the `CMAKE_CXX_*_INIT` versions of the build-type related flags *if* we want to change the defaults. Then, cmake will populate the actual flags for us, and users can override them as they see fit. After `project(root)`, string manipulations are OK, but **not** overriding the entire string. Appending the whole chain of warning and linker flags can still be done in those `SetUp*` files. I would leave them mostly intact, and would just remove the ""cache force"" lines. @stwunsch I *think* those flags were in effect for quite a while, because they weren't `CACHE` flags before I had trouble overriding them. When I made them `CACHE` in 2019 3c42b07168b8315ac1ed1abbf69f89d5f4e99099, the config lines stopped having an effect, but you were able to set them from the outside again.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:321,deployability,version,version,321,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:730,deployability,modul,modules,730,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:321,integrability,version,version,321,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:321,modifiability,version,version,321,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:730,modifiability,modul,modules,730,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:730,safety,modul,modules,730,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:909,safety,prevent,prevent,909,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:909,security,preven,prevent,909,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:98,testability,assert,asserts,98,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:1018,testability,Assert,Assert,1018,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:947,usability,command,commands,947,"> Edit: So this means, we should just remove the `-DNDEBUG` flag via string matching if we enable asserts. Yes, you can either remove any debug-related string:. ```cmake. string(REGEX REPLACE ""-.NDEBUG"" """" CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE} ""${CMAKE_CXX_FLAGS_${CMAKE_BUILD_TYPE}}""). ```. or the lazy clutter-the-string version. ```cmake. set(CMAKE_BUILD_TYPE_RELEASE ""${CMAKE_BUILD_TYPE_RELEASE} -UNDEBUG""). ```. But I actually favour:. `cmake -DCMAKE_CXX_FLAGS_RELEASE=""-O3"" <src dir>`. And my second favoured solution (only example flags):. ```diff. diff --git a/CMakeLists.txt b/CMakeLists.txt. index e40b84a920..ab41612006 100644. --- a/CMakeLists.txt. +++ b/CMakeLists.txt. @@ -29,6 +29,11 @@ endforeach(). . include(cmake/modules/CaptureCommandLine.cmake). . +set(CMAKE_CXX_FLAGS_DEBUG_INIT ""-O1 -g""). +set(CMAKE_CXX_FLAGS_ASSERT_INIT ""-O2 -g""). +. project(ROOT). . #---Set the locale to default C to prevent issued due to localization of commands---------------. ```. combined with. `cmake -DCMAKE_BUILD_TYPE=Assert <src dir>`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:24,safety,test,tested,24,"Let me do a PR, since I tested it already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6577:24,testability,test,tested,24,"Let me do a PR, since I tested it already.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6577
https://github.com/root-project/root/issues/6579:30,deployability,instal,installation,30,"Thank you for the report, the installation of the header was missing, I made a PR to fix it.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:28,deployability,patch,patches,28,Fix also backported to 6.22 patches here: https://github.com/root-project/root/pull/6589,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:28,safety,patch,patches,28,Fix also backported to 6.22 patches here: https://github.com/root-project/root/pull/6589,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/issues/6579:28,security,patch,patches,28,Fix also backported to 6.22 patches here: https://github.com/root-project/root/pull/6589,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6579
https://github.com/root-project/root/pull/6580:5,availability,failur,failures,5,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6580:5,deployability,fail,failures,5,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6580:32,deployability,configurat,configuration,32,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6580:32,integrability,configur,configuration,32,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6580:32,modifiability,configur,configuration,32,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6580:5,performance,failur,failures,5,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6580:5,reliability,fail,failures,5,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6580:0,safety,Test,Test,0,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6580:32,security,configur,configuration,32,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6580:0,testability,Test,Test,0,"Test failures are due to a node configuration problem on macphsft20, so merging.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6580
https://github.com/root-project/root/pull/6582:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:255,integrability,messag,message,255,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:255,interoperability,messag,message,255,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:125,safety,test,test,125,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:181,safety,review,review,181,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:317,safety,test,test,317,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:523,safety,test,tests,523,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:568,safety,test,test,568,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:125,testability,test,test,125,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:166,testability,understand,understand,166,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:181,testability,review,review,181,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:317,testability,test,test,317,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:523,testability,test,tests,523,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:568,testability,test,test,568,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:153,usability,behavi,behaviour,153,"> LGTM, in principle, though it's very hard to know from the code whether everything is fine. Would it be possible to have a test or is there no changed behaviour? I understand the review is a bit hard if you are not familiar with the code. In the commit message I try to explain the reason of the change. As for the test, I added this:. https://github.com/root-project/roottest/pull/607. which reproduces what the commit is trying to fix (a proper match and invocation if the constructor has default arguments). The other tests seem to run fine. I also want to add a test for TGMainFrame once https://github.com/root-project/root/issues/6578 is fixed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6582:5,testability,understand,understand,5,Do I understand correctly that this is already in upstream cppyy?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6582
https://github.com/root-project/root/pull/6583:0,availability,Error,Errors,0,Errors are (hopefully) unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:0,performance,Error,Errors,0,Errors are (hopefully) unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:0,safety,Error,Errors,0,Errors are (hopefully) unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:0,usability,Error,Errors,0,Errors are (hopefully) unrelated...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:140,interoperability,specif,specify,140,"@Axel-Naumann About the `\0`, quoting Microsoft:. ""The extra \0 and """" tokens between BEGIN and END blocks are required by the RC syntax to specify zero terminated strings and the double quote character respectively.""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6583:71,security,token,tokens,71,"@Axel-Naumann About the `\0`, quoting Microsoft:. ""The extra \0 and """" tokens between BEGIN and END blocks are required by the RC syntax to specify zero terminated strings and the double quote character respectively.""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6583
https://github.com/root-project/root/pull/6585:5,availability,failur,failures,5,Test failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:5,deployability,fail,failures,5,Test failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:5,performance,failur,failures,5,Test failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:5,reliability,fail,failures,5,Test failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:0,safety,Test,Test,0,Test failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6585:0,testability,Test,Test,0,Test failures are unrelated,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6585
https://github.com/root-project/root/pull/6588:100,availability,error,error-root-master,100,"Hi, can we merge this? I think [a forum user](https://root-forum.cern.ch/t/compilation-installation-error-root-master/41761/8) was hit by a problem with `make install` that's fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6588
https://github.com/root-project/root/pull/6588:87,deployability,instal,installation-error-root-master,87,"Hi, can we merge this? I think [a forum user](https://root-forum.cern.ch/t/compilation-installation-error-root-master/41761/8) was hit by a problem with `make install` that's fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6588
https://github.com/root-project/root/pull/6588:159,deployability,instal,install,159,"Hi, can we merge this? I think [a forum user](https://root-forum.cern.ch/t/compilation-installation-error-root-master/41761/8) was hit by a problem with `make install` that's fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6588
https://github.com/root-project/root/pull/6588:100,performance,error,error-root-master,100,"Hi, can we merge this? I think [a forum user](https://root-forum.cern.ch/t/compilation-installation-error-root-master/41761/8) was hit by a problem with `make install` that's fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6588
https://github.com/root-project/root/pull/6588:100,safety,error,error-root-master,100,"Hi, can we merge this? I think [a forum user](https://root-forum.cern.ch/t/compilation-installation-error-root-master/41761/8) was hit by a problem with `make install` that's fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6588
https://github.com/root-project/root/pull/6588:40,usability,user,user,40,"Hi, can we merge this? I think [a forum user](https://root-forum.cern.ch/t/compilation-installation-error-root-master/41761/8) was hit by a problem with `make install` that's fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6588
https://github.com/root-project/root/pull/6588:100,usability,error,error-root-master,100,"Hi, can we merge this? I think [a forum user](https://root-forum.cern.ch/t/compilation-installation-error-root-master/41761/8) was hit by a problem with `make install` that's fixed here",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6588
https://github.com/root-project/root/pull/6590:16,usability,user,user-visible,16,Thanks! Nothing user-visible to document I think.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6590:32,usability,document,document,32,Thanks! Nothing user-visible to document I think.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6590
https://github.com/root-project/root/pull/6591:114,performance,time,time,114,"> Proper solution will be #6577 I will do it as soon as possible... OK, fine with me, if it works on Windows this time :wink:",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6591
https://github.com/root-project/root/issues/6592:95,deployability,observ,observe,95,"I believe this might be a duplicate of:. https://sft.its.cern.ch/jira/browse/ROOT-7909. Do you observe this interference on MacOS? If I understand correctly, it is the third line of code that freezes? EDIT: I now saw the fedora32 line, so only the second question is relevant :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:95,testability,observ,observe,95,"I believe this might be a duplicate of:. https://sft.its.cern.ch/jira/browse/ROOT-7909. Do you observe this interference on MacOS? If I understand correctly, it is the third line of code that freezes? EDIT: I now saw the fedora32 line, so only the second question is relevant :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:136,testability,understand,understand,136,"I believe this might be a duplicate of:. https://sft.its.cern.ch/jira/browse/ROOT-7909. Do you observe this interference on MacOS? If I understand correctly, it is the third line of code that freezes? EDIT: I now saw the fedora32 line, so only the second question is relevant :)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:325,deployability,instal,installed,325,"@wiso Could you try the following? . ```python. import ROOT. ROOT.PyConfig.StartGUIThread = False # Do not enable the interactive graphics in ROOT. # ROOT.gROOT.SetBatch(True) # This should have the same effect! from matplotlib import pyplot as plt. fig, ax = plt.subplots(). ```. There seems to be an inference of the hooks installed by ROOT and matplotlib to show the graphics.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:264,integrability,sub,subplots,264,"@wiso Could you try the following? . ```python. import ROOT. ROOT.PyConfig.StartGUIThread = False # Do not enable the interactive graphics in ROOT. # ROOT.gROOT.SetBatch(True) # This should have the same effect! from matplotlib import pyplot as plt. fig, ax = plt.subplots(). ```. There seems to be an inference of the hooks installed by ROOT and matplotlib to show the graphics.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:319,testability,hook,hooks,319,"@wiso Could you try the following? . ```python. import ROOT. ROOT.PyConfig.StartGUIThread = False # Do not enable the interactive graphics in ROOT. # ROOT.gROOT.SetBatch(True) # This should have the same effect! from matplotlib import pyplot as plt. fig, ax = plt.subplots(). ```. There seems to be an inference of the hooks installed by ROOT and matplotlib to show the graphics.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:118,usability,interact,interactive,118,"@wiso Could you try the following? . ```python. import ROOT. ROOT.PyConfig.StartGUIThread = False # Do not enable the interactive graphics in ROOT. # ROOT.gROOT.SetBatch(True) # This should have the same effect! from matplotlib import pyplot as plt. fig, ax = plt.subplots(). ```. There seems to be an inference of the hooks installed by ROOT and matplotlib to show the graphics.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:258,deployability,observ,observe,258,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:160,integrability,event,event,160,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:487,integrability,configur,configuring,487,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:487,modifiability,configur,configuring,487,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:130,safety,input,inputhooks,130,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:205,safety,input,inputhook,205,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:519,safety,prevent,prevents,519,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:487,security,configur,configuring,487,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:519,security,preven,prevents,519,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:258,testability,observ,observe,258,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:130,usability,input,inputhooks,130,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:205,usability,input,inputhook,205,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:233,usability,interact,interactive,233,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:278,usability,behavi,behaviour,278,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:471,usability,stop,stops,471,"If @stwunsch suggestion works, it looks like the issue is a (known) interference between matplotlib and ROOT, since they both use inputhooks to implement their event loops for graphics. ROOT only uses the inputhook mechanism when in interactive mode. Do you observe a different behaviour of your initial code when you run it as a script or from the Python prompt? In any case, if you want to use only matplotlib for graphics, using `ROOT.PyConfig.StartGUIThread = False` stops ROOT from configuring its graphics, which prevents the interference with matplotlib.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6592:279,usability,close,close,279,"@wiso, if you agree, I would leave https://sft.its.cern.ch/jira/browse/ROOT-7909 open (since the interference between ROOT graphics and matplotlib exists and is reproducible on MacOS), and for your case you can use @stwunsch suggestion if you just need matplotlib graphics? I'll close this issue if that sounds good.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6592
https://github.com/root-project/root/issues/6593:593,energy efficiency,Draw,Draw,593,"Color index 0 (kWhite) has a special status. 0 means ""default"", and you fall back to black. One way is:. ```. void jant(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->AddText(""This line is in black."");. pave->AddText(""This line is in red."");. TLatex* t1 = (TLatex*)(pave->GetListOfLines()->Last());. t1->SetTextColor(kRed);. pave->AddText(""This line is in white."");. TLatex* t2 = (TLatex*)(pave->GetListOfLines()->Last());. //TColor MyWhite. Int_t ci = 12345;. TColor *color = new TColor(ci, 1., 1., 1.);. t2->SetTextColor(ci);. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:605,energy efficiency,Draw,Draw,605,"Color index 0 (kWhite) has a special status. 0 means ""default"", and you fall back to black. One way is:. ```. void jant(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->AddText(""This line is in black."");. pave->AddText(""This line is in red."");. TLatex* t1 = (TLatex*)(pave->GetListOfLines()->Last());. t1->SetTextColor(kRed);. pave->AddText(""This line is in white."");. TLatex* t2 = (TLatex*)(pave->GetListOfLines()->Last());. //TColor MyWhite. Int_t ci = 12345;. TColor *color = new TColor(ci, 1., 1., 1.);. t2->SetTextColor(ci);. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:37,usability,statu,status,37,"Color index 0 (kWhite) has a special status. 0 means ""default"", and you fall back to black. One way is:. ```. void jant(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->AddText(""This line is in black."");. pave->AddText(""This line is in red."");. TLatex* t1 = (TLatex*)(pave->GetListOfLines()->Last());. t1->SetTextColor(kRed);. pave->AddText(""This line is in white."");. TLatex* t2 = (TLatex*)(pave->GetListOfLines()->Last());. //TColor MyWhite. Int_t ci = 12345;. TColor *color = new TColor(ci, 1., 1., 1.);. t2->SetTextColor(ci);. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:669,energy efficiency,Draw,Draw,669,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:681,energy efficiency,Draw,Draw,681,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:541,performance,time,time,541,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:323,reliability,doe,does,323,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:347,testability,context,contexts,347,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:60,usability,help,helps,60,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:118,usability,document,documentation,118,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:138,usability,behavi,behavior,138,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:158,usability,clear,clear,158,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6593:189,usability,document,documentation,189,"Thank you for the quick response, @couet, your example code helps! However, is this peculiarity mentioned in the ROOT documentation? This behavior was not so clear to me from the [TAttText documentation](https://root.cern.ch/doc/master/classTAttText.html), and it looks like setting the text color to white in my naïve way does work in some other contexts, e.g.:. ```. void jant2(){. auto c = new TCanvas(""c"",""c"",800,600);. auto pave = new TPaveText(0.25,0.25,0.75,0.75,""NDC"");. pave->SetTextColor(kWhite); // setting all text to white this time (not line-by-line changes). pave->AddText(""This line is in white."");. pave->AddText(""This line is also in white."");. pave->Draw();. c->Draw();. }. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6593
https://github.com/root-project/root/issues/6597:134,deployability,version,version,134,"A possible fix is https://github.com/root-project/roottest/pull/610, which simply removes the inbuilt pytest and requires an external version. Edit: Checked, is fixed by a piped pytest version and the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:185,deployability,version,version,185,"A possible fix is https://github.com/root-project/roottest/pull/610, which simply removes the inbuilt pytest and requires an external version. Edit: Checked, is fixed by a piped pytest version and the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:134,integrability,version,version,134,"A possible fix is https://github.com/root-project/roottest/pull/610, which simply removes the inbuilt pytest and requires an external version. Edit: Checked, is fixed by a piped pytest version and the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:185,integrability,version,version,185,"A possible fix is https://github.com/root-project/roottest/pull/610, which simply removes the inbuilt pytest and requires an external version. Edit: Checked, is fixed by a piped pytest version and the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:134,modifiability,version,version,134,"A possible fix is https://github.com/root-project/roottest/pull/610, which simply removes the inbuilt pytest and requires an external version. Edit: Checked, is fixed by a piped pytest version and the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:185,modifiability,version,version,185,"A possible fix is https://github.com/root-project/roottest/pull/610, which simply removes the inbuilt pytest and requires an external version. Edit: Checked, is fixed by a piped pytest version and the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:75,testability,simpl,simply,75,"A possible fix is https://github.com/root-project/roottest/pull/610, which simply removes the inbuilt pytest and requires an external version. Edit: Checked, is fixed by a piped pytest version and the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/issues/6597:75,usability,simpl,simply,75,"A possible fix is https://github.com/root-project/roottest/pull/610, which simply removes the inbuilt pytest and requires an external version. Edit: Checked, is fixed by a piped pytest version and the linked PR.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6597
https://github.com/root-project/root/pull/6599:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6599
https://github.com/root-project/root/pull/6599:68,deployability,build,build,68,"Hi @couet ,. Could you, please, have a look? It also seems that the build fails are due to jenkins problems. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6599
https://github.com/root-project/root/pull/6599:74,deployability,fail,fails,74,"Hi @couet ,. Could you, please, have a look? It also seems that the build fails are due to jenkins problems. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6599
https://github.com/root-project/root/pull/6599:74,reliability,fail,fails,74,"Hi @couet ,. Could you, please, have a look? It also seems that the build fails are due to jenkins problems. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6599
https://github.com/root-project/root/pull/6600:15,deployability,updat,update,15,Should we also update: User's guide: documentation/users-guide/Trees.md ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:15,safety,updat,update,15,Should we also update: User's guide: documentation/users-guide/Trees.md ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:15,security,updat,update,15,Should we also update: User's guide: documentation/users-guide/Trees.md ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:23,usability,User,User,23,Should we also update: User's guide: documentation/users-guide/Trees.md ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:30,usability,guid,guide,30,Should we also update: User's guide: documentation/users-guide/Trees.md ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:37,usability,document,documentation,37,Should we also update: User's guide: documentation/users-guide/Trees.md ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:51,usability,user,users-guide,51,Should we also update: User's guide: documentation/users-guide/Trees.md ?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:8,deployability,updat,updated,8,Already updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:8,safety,updat,updated,8,Already updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:8,security,updat,updated,8,Already updated.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:10,deployability,updat,updated,10,> already updated. Sorry I somehow missed it :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:10,safety,updat,updated,10,> already updated. Sorry I somehow missed it :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6600:10,security,updat,updated,10,> already updated. Sorry I somehow missed it :(,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6600
https://github.com/root-project/root/pull/6606:10,availability,ping,ping,10,OK please ping me on Wed should you not have my review by then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:48,safety,review,review,48,OK please ping me on Wed should you not have my review by then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:48,testability,review,review,48,OK please ping me on Wed should you not have my review by then.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:143,energy efficiency,load,loading,143,"I'll have another look at the order; I expected user vs system to have a different order now than before. Independently, was `.L` not used for loading libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:143,performance,load,loading,143,"I'll have another look at the order; I expected user vs system to have a different order now than before. Independently, was `.L` not used for loading libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:48,usability,user,user,48,"I'll have another look at the order; I expected user vs system to have a different order now than before. Independently, was `.L` not used for loading libraries?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:134,availability,avail,available,134,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:482,deployability,patch,patch,482,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:368,energy efficiency,load,loading,368,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:439,energy efficiency,load,loaded,439,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:368,performance,load,loading,368,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:439,performance,load,loaded,439,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:134,reliability,availab,available,134,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:134,safety,avail,available,134,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:482,safety,patch,patch,482,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:134,security,availab,available,134,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:482,security,patch,patch,482,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:50,usability,user,user,50,"> I'll have another look at the order; I expected user vs system to have a different order now than before. This "".L"" printout is not available in ROOT as we do some preprocessing -- you could use `gInterpreter->ProcessLine("".L"")` to get around it. The order of libraries should be similar to the order from `ldconfig -v`... > . > Independently, was `.L` not used for loading libraries? Yes? "".L"" followed by nothing should also print the loaded libraries as per some fixme in this patch.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:135,availability,servic,services,135,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:338,availability,servic,services,338,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:601,availability,avail,available,601,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:2,deployability,Build,Build,2,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:8,deployability,fail,failed,8,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:56,deployability,build,build,56,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:90,deployability,build,build,90,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:135,deployability,servic,services,135,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:187,deployability,build,build,187,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:216,deployability,Fail,Failing,216,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:338,deployability,servic,services,338,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:390,deployability,build,build,390,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:535,deployability,patch,patch,535,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:768,deployability,releas,releasing,768,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:621,energy efficiency,current,current,621,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:696,energy efficiency,load,load,696,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:982,energy efficiency,core,core,982,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:135,integrability,servic,services,135,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:338,integrability,servic,services,338,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:135,modifiability,servic,services,135,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:338,modifiability,servic,services,338,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:696,performance,load,load,696,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:787,performance,lock,lock,787,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:8,reliability,fail,failed,8,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:216,reliability,Fail,Failing,216,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:601,reliability,availab,available,601,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:706,reliability,diagno,diagnostics,706,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:224,safety,test,tests,224,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:403,safety,test,testReport,403,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:535,safety,patch,patch,535,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:601,safety,avail,available,601,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:535,security,patch,patch,535,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:601,security,availab,available,601,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:787,security,lock,lock,787,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:224,testability,test,tests,224,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:403,testability,test,testReport,403,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:706,testability,diagno,diagnostics,706,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:519,usability,help,help,519,"> Build failed on windows10/cxx14. > Running on null:C:\build\workspace\root-pullrequests-build. > [See console output](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/console). > ### Failing tests:. > . > * [projectroot.roottest.cling.other.roottest_cling_other_checkMissingSymbolExitCode](https://lcgapp-services.cern.ch/root-jenkins/job/root-pullrequests-build/112283/testReport/projectroot.roottest.cling/other/roottest_cling_other_checkMissingSymbolExitCode/). @bellenot, could you help here. This patch, when seeing an unknown symbol, iterates over all libraries available in ROOT's current library paths; scans for the symbol; and proposes which library to load. The diagnostics seems to be coming from something opening and not releasing the file lock (which frankly makes no sense as we should have seen that before on different occasions). . The only place I can find `CreateFile` is [here](https://github.com/root-project/root/blob/master/core/winnt/src/TWinNTSystem.cxx#L4127) -- is that the one triggers the original issue?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:20,availability,error,error,20,@vgvassilev FYI the error comes from https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Utils/PlatformWin.cpp#L481 while looking for dynamic libraries (https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L766). I'm looking into it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:123,interoperability,Platform,PlatformWin,123,@vgvassilev FYI the error comes from https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Utils/PlatformWin.cpp#L481 while looking for dynamic libraries (https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L766). I'm looking into it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:20,performance,error,error,20,@vgvassilev FYI the error comes from https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Utils/PlatformWin.cpp#L481 while looking for dynamic libraries (https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L766). I'm looking into it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:20,safety,error,error,20,@vgvassilev FYI the error comes from https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Utils/PlatformWin.cpp#L481 while looking for dynamic libraries (https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L766). I'm looking into it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:20,usability,error,error,20,@vgvassilev FYI the error comes from https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Utils/PlatformWin.cpp#L481 while looking for dynamic libraries (https://github.com/vgvassilev/root/blob/improve_link_diag/interpreter/cling/lib/Interpreter/DynamicLibraryManagerSymbol.cpp#L766). I'm looking into it,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:129,deployability,fail,fails,129,"@vgvassilev OK, so Cling is trying to access ""C:\\Windows\\bootstat.dat"" to see if it's a dynamic library (?!?!?!) and obviously fails. BTW, is Cling trying to open all possible files in the system PATH to search DLLs, whatever their extension is? This is not going to work on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:234,modifiability,extens,extension,234,"@vgvassilev OK, so Cling is trying to access ""C:\\Windows\\bootstat.dat"" to see if it's a dynamic library (?!?!?!) and obviously fails. BTW, is Cling trying to open all possible files in the system PATH to search DLLs, whatever their extension is? This is not going to work on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:129,reliability,fail,fails,129,"@vgvassilev OK, so Cling is trying to access ""C:\\Windows\\bootstat.dat"" to see if it's a dynamic library (?!?!?!) and obviously fails. BTW, is Cling trying to open all possible files in the system PATH to search DLLs, whatever their extension is? This is not going to work on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:38,security,access,access,38,"@vgvassilev OK, so Cling is trying to access ""C:\\Windows\\bootstat.dat"" to see if it's a dynamic library (?!?!?!) and obviously fails. BTW, is Cling trying to open all possible files in the system PATH to search DLLs, whatever their extension is? This is not going to work on Windows...",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:14,availability,ping,ping,14,@Axel-Naumann ping...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:40,deployability,updat,update,40,"Can you rebase, please? (Also to get an update from Jenkins)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:40,safety,updat,update,40,"Can you rebase, please? (Also to get an update from Jenkins)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:40,security,updat,update,40,"Can you rebase, please? (Also to get an update from Jenkins)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/pull/6606:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6606
https://github.com/root-project/root/issues/6607:110,deployability,updat,updated,110,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:50,energy efficiency,alloc,allocator,50,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:272,integrability,configur,configured,272,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:272,modifiability,configur,configured,272,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:28,safety,detect,detect,28,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:110,safety,updat,updated,110,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:28,security,detect,detect,28,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:110,security,updat,updated,110,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6607:272,security,configur,configured,272,There is code to explicitly detect and remove the allocator. Most likely `TClassEdit::IsDefAlloc` needs to be updated to take into account that the word `class` might be prefixed. Albeit it is odd/unexpected that Clang would put the class keyword there (it is supposed be configured not to).,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6607
https://github.com/root-project/root/issues/6608:494,availability,error,error,494,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:292,deployability,build,build,292,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:563,deployability,version,version,563,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:563,integrability,version,version,563,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:563,modifiability,version,version,563,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:494,performance,error,error,494,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:638,reliability,doe,does,638,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:37,safety,test,test,37,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:133,safety,permiss,permissions,133,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:494,safety,error,error,494,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:37,testability,test,test,37,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:441,usability,confirm,confirm,441,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:494,usability,error,error,494,"Thanks for the report, I did a quick test with master and I can't reproduce on an Ubuntu18, compiling ROOT from sources. Can it be a permissions issue? E.g. the `kernel.json` of the ROOT kernel should be readable. Let's assume you compile from sources, you do `source bin/thisroot.sh` in the build directory and then run `root --notebook`. This should have created `$HOME/.rootnb/kernels/root/kernel.json`, which should be readable. Can you confirm that with these steps you also reproduce the error? On the other hand, I'm using `metakernel` 0.24.4, what is the version you are using? Finally, if you run `jupyter kernelspec list`, what does it say?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:254,availability,error,error,254,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:293,availability,ERROR,ERROR,293,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:223,deployability,instal,installation,223,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:347,interoperability,standard,standard,347,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:254,performance,error,error,254,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:293,performance,ERROR,ERROR,293,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:16,safety,test,testing,16,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:254,safety,error,error,254,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:293,safety,ERROR,ERROR,293,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:16,testability,test,testing,16,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:254,usability,error,error,254,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:293,usability,ERROR,ERROR,293,"Thanks for your testing. I use `metakernel` 0.27.0 and `python` 3.8.5. I also tried `metakernel` 0.24.4. For your suggested steps. `jupyter kernelspec list` . says. ` root ~/root/etc/notebook/kernels/root`. With the manual installation I get a different error but the result is the same. ```. ERROR in cling::CIFactory::createCI(): cannot extract standard library include paths! Invoking:. LC_ALL=C x86_64-linux-gnu-g++-9 -O3 -DNDEBUG -xc++ -E -v /dev/null 2>&1 | sed -n -e '/^.include/,${' -e '/^ \/.*++. /p' -e '}'. Results was:. With exit code 0. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:23,availability,error,error,23,The `cling::CIFactory` error you get it when opening the ROOT C++ kernel from Jupyter? @stwunsch could you please try if you can reproduce this on arch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:23,performance,error,error,23,The `cling::CIFactory` error you get it when opening the ROOT C++ kernel from Jupyter? @stwunsch could you please try if you can reproduce this on arch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:23,safety,error,error,23,The `cling::CIFactory` error you get it when opening the ROOT C++ kernel from Jupyter? @stwunsch could you please try if you can reproduce this on arch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:23,usability,error,error,23,The `cling::CIFactory` error you get it when opening the ROOT C++ kernel from Jupyter? @stwunsch could you please try if you can reproduce this on arch?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:33,performance,time,time,33,"@etejedor yes exactly, the first time it occurs is right after `root --notebook`",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:232,deployability,log,log-level,232,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:375,deployability,instal,install,375,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:41,interoperability,share,share,41,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:164,safety,test,test-jupyroot,164,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:199,safety,test,test-jupyroot,199,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:232,safety,log,log-level,232,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:232,security,log,log-level,232,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:164,testability,test,test-jupyroot,164,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:199,testability,test,test-jupyroot,199,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:232,testability,log,log-level,232,"Hi @kllp,. I'm also running Arch, let me share with you my setup using conda:. ```bash. source /path/to/miniconda3/bin/activate. conda create -c conda-forge --name test-jupyroot root. conda activate test-jupyroot. root --notebook --log-level 10. ```. Unfortunately, I cannot reproduce your issues. Could you retry with the setup lined out above (see [here](https://root.cern/install/#conda) for more information)? Best. Stefan",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:34,deployability,instal,installed,34,"@stwunsch thanks for tuning in. I installed a clean miniconda3 and ran your commands. I get the same result like before. It only works with `sudo`. `Python 3` or `xeus-cling c++17` kernels work but `ROOT C++` does not. No useful debug output. `Kernel starting, please wait...` shows forever. . `Timeout waiting for kernel_info reply`. And I can't evaluate cells. Could be a hard to find permission issue. Closing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:295,performance,Time,Timeout,295,"@stwunsch thanks for tuning in. I installed a clean miniconda3 and ran your commands. I get the same result like before. It only works with `sudo`. `Python 3` or `xeus-cling c++17` kernels work but `ROOT C++` does not. No useful debug output. `Kernel starting, please wait...` shows forever. . `Timeout waiting for kernel_info reply`. And I can't evaluate cells. Could be a hard to find permission issue. Closing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:209,reliability,doe,does,209,"@stwunsch thanks for tuning in. I installed a clean miniconda3 and ran your commands. I get the same result like before. It only works with `sudo`. `Python 3` or `xeus-cling c++17` kernels work but `ROOT C++` does not. No useful debug output. `Kernel starting, please wait...` shows forever. . `Timeout waiting for kernel_info reply`. And I can't evaluate cells. Could be a hard to find permission issue. Closing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:295,safety,Timeout,Timeout,295,"@stwunsch thanks for tuning in. I installed a clean miniconda3 and ran your commands. I get the same result like before. It only works with `sudo`. `Python 3` or `xeus-cling c++17` kernels work but `ROOT C++` does not. No useful debug output. `Kernel starting, please wait...` shows forever. . `Timeout waiting for kernel_info reply`. And I can't evaluate cells. Could be a hard to find permission issue. Closing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:387,safety,permiss,permission,387,"@stwunsch thanks for tuning in. I installed a clean miniconda3 and ran your commands. I get the same result like before. It only works with `sudo`. `Python 3` or `xeus-cling c++17` kernels work but `ROOT C++` does not. No useful debug output. `Kernel starting, please wait...` shows forever. . `Timeout waiting for kernel_info reply`. And I can't evaluate cells. Could be a hard to find permission issue. Closing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/issues/6608:76,usability,command,commands,76,"@stwunsch thanks for tuning in. I installed a clean miniconda3 and ran your commands. I get the same result like before. It only works with `sudo`. `Python 3` or `xeus-cling c++17` kernels work but `ROOT C++` does not. No useful debug output. `Kernel starting, please wait...` shows forever. . `Timeout waiting for kernel_info reply`. And I can't evaluate cells. Could be a hard to find permission issue. Closing.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6608
https://github.com/root-project/root/pull/6609:67,safety,test,test,67,> Any chance that that could be done? Certainly! What would such a test look like?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:67,testability,test,test,67,> Any chance that that could be done? Certainly! What would such a test look like?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:143,deployability,build,build,143,"> > Any chance that that could be done? > . > Certainly! What would such a test look like? Unfortunately I think it would involve using an ARM build machine. Not sure if you already have such a thing in the ROOT CI yet... I would have to check if it's possible to maybe build GCC with an ""external"" `libatomic.so` on x86 as well. In that case a Docker based CI job on x86 could be enough. That will have to wait a little bit at least unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:270,deployability,build,build,270,"> > Any chance that that could be done? > . > Certainly! What would such a test look like? Unfortunately I think it would involve using an ARM build machine. Not sure if you already have such a thing in the ROOT CI yet... I would have to check if it's possible to maybe build GCC with an ""external"" `libatomic.so` on x86 as well. In that case a Docker based CI job on x86 could be enough. That will have to wait a little bit at least unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:75,safety,test,test,75,"> > Any chance that that could be done? > . > Certainly! What would such a test look like? Unfortunately I think it would involve using an ARM build machine. Not sure if you already have such a thing in the ROOT CI yet... I would have to check if it's possible to maybe build GCC with an ""external"" `libatomic.so` on x86 as well. In that case a Docker based CI job on x86 could be enough. That will have to wait a little bit at least unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:75,testability,test,test,75,"> > Any chance that that could be done? > . > Certainly! What would such a test look like? Unfortunately I think it would involve using an ARM build machine. Not sure if you already have such a thing in the ROOT CI yet... I would have to check if it's possible to maybe build GCC with an ""external"" `libatomic.so` on x86 as well. In that case a Docker based CI job on x86 could be enough. That will have to wait a little bit at least unfortunately.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6609:0,availability,Ping,Ping,0,Ping...?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6609
https://github.com/root-project/root/pull/6610:11,deployability,build,build,11,@phsft-bot build just on windows10/cxx14,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:0,availability,Error,Error,0,Error is unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:0,performance,Error,Error,0,Error is unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:0,safety,Error,Error,0,Error is unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/pull/6610:0,usability,Error,Error,0,Error is unrelated. Merging,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6610
https://github.com/root-project/root/issues/6611:49,deployability,updat,update,49,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:56,deployability,version,version,56,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:56,integrability,version,version,56,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:777,integrability,buffer,buffermerger,777,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1031,integrability,buffer,buffermerger,1031,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:323,interoperability,standard,standardwrite,323,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:485,interoperability,standard,standard,485,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:546,interoperability,standard,standardwrite,546,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:1275,interoperability,standard,standard,1275,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:56,modifiability,version,version,56,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:673,reliability,doe,does,673,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:49,safety,updat,update,49,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:49,security,updat,update,49,"This is still a problem with RVec 2.0. Here's an update version of the reproducer:. ```cpp. #include <ROOT/TBufferMerger.hxx>. #include <ROOT/RVec.hxx>. #include <TTree.h>. #include <TFile.h>. #include <iostream>. int main(). {. // output file has vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. TFile f(""standardwrite.root"", ""recreate"");. TTree t(""t"", ""t"", 99, &f);. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f.Write();. }. std::cout << ""***** standard write ******"" << std::endl;. auto f2 = TFile::Open(""standardwrite.root"");. for (auto e : *f2->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. // output file does not have vector<float, RAdoptAllocator<float>> in the streamerinfolist. {. ROOT::TBufferMerger bm(""buffermerger.root"", ""recreate"");. auto f = bm.GetFile();. TTree t(""t"", ""t"", 99, f.get());. ROOT::RVec<float> rv{1, 2, 3};. t.Branch(""v"", &rv);. t.Fill();. f->Write();. }. std::cout << ""\n\n***** TBufferMerger ******"" << std::endl;. auto f = TFile::Open(""buffermerger.root"");. for (auto e : *f->GetStreamerInfoList()) {. std::cout << e->GetName() << std::endl;. }. return 0;. }. ```. and its output:. ```. g++ -g -Wall -Wextra -Wpedantic -o ""repro"" ""repro.cpp"" $(root-config --cflags --libs). ***** standard write ******. TNamed. TObject. TList. TSeqCollection. TCollection. ROOT::VecOps::RVec<float>. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ***** TBufferMerger ******. TNamed. TObject. TList. TSeqCollection. TCollection. TTree. TAttLine. TAttFill. TAttMarker. ROOT::TIOFeatures. TBranchElement. TBranch. TLeafElement. TLeaf. TString. TBranchRef. TRefTable. TObjArray. listOfRules. ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:44,deployability,infrastructur,infrastructure,44,"Since RVec 2.0 leverage the CollectionProxy infrastructure, it should not need a StreamerInfo (i.e. it is implicit like all the STL collections)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/issues/6611:53,usability,behavi,behavior,53,"Closing as this is (now, with RVec 2.0) the expected behavior.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6611
https://github.com/root-project/root/pull/6614:11,deployability,build,build,11,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6614
https://github.com/root-project/root/pull/6614:30,performance,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6614
https://github.com/root-project/root/pull/6614:30,usability,perform,performance-,30,@phsft-bot build just on ROOT-performance-centos8-multicore/default,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6614
https://github.com/root-project/root/pull/6614:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6614
https://github.com/root-project/root/issues/6616:17,energy efficiency,current,current,17,Still present in current master.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6616
https://github.com/root-project/root/issues/6617:366,deployability,build,builds,366,"I commented a bit on this on the forum:. https://root-forum.cern.ch/t/suggestions-to-partially-compile-the-math-component-into-julia-jll-library/56485. I think this is not something we can prioritize as ROOT developers, because obviously for ROOT we don't need `mathcore` and `mathmore` standalone. But for an external contributor who wants to make these standalone builds, this could be a nice project!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:112,integrability,compon,component-into-julia-jll-library,112,"I commented a bit on this on the forum:. https://root-forum.cern.ch/t/suggestions-to-partially-compile-the-math-component-into-julia-jll-library/56485. I think this is not something we can prioritize as ROOT developers, because obviously for ROOT we don't need `mathcore` and `mathmore` standalone. But for an external contributor who wants to make these standalone builds, this could be a nice project!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:112,interoperability,compon,component-into-julia-jll-library,112,"I commented a bit on this on the forum:. https://root-forum.cern.ch/t/suggestions-to-partially-compile-the-math-component-into-julia-jll-library/56485. I think this is not something we can prioritize as ROOT developers, because obviously for ROOT we don't need `mathcore` and `mathmore` standalone. But for an external contributor who wants to make these standalone builds, this could be a nice project!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:112,modifiability,compon,component-into-julia-jll-library,112,"I commented a bit on this on the forum:. https://root-forum.cern.ch/t/suggestions-to-partially-compile-the-math-component-into-julia-jll-library/56485. I think this is not something we can prioritize as ROOT developers, because obviously for ROOT we don't need `mathcore` and `mathmore` standalone. But for an external contributor who wants to make these standalone builds, this could be a nice project!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6617:48,energy efficiency,current,current,48,"I consider this nice suggestion absorbed in the current effort of the so-called ""CMake Superbuilds""",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6617
https://github.com/root-project/root/issues/6624:84,integrability,interfac,interface,84,"A valid point. The problem is not in RooFit, since RooFit directly uses the TRandom interface. @lmoneta, do you think this can be fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:84,interoperability,interfac,interface,84,"A valid point. The problem is not in RooFit, since RooFit directly uses the TRandom interface. @lmoneta, do you think this can be fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:84,modifiability,interfac,interface,84,"A valid point. The problem is not in RooFit, since RooFit directly uses the TRandom interface. @lmoneta, do you think this can be fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:2,safety,valid,valid,2,"A valid point. The problem is not in RooFit, since RooFit directly uses the TRandom interface. @lmoneta, do you think this can be fixed?",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:89,availability,state,state,89,"Hi, . This is a known problem since when you use TRandom3, you need to retrieve the full state of ~600 values. . The solution is to save the Random generator instance (TRandom3) and use that one in a file to reproduce your fits. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:89,integrability,state,state,89,"Hi, . This is a known problem since when you use TRandom3, you need to retrieve the full state of ~600 values. . The solution is to save the Random generator instance (TRandom3) and use that one in a file to reproduce your fits. Lorenzo",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6624:206,usability,document,document,206,Duplicate of https://sft.its.cern.ch/jira/browse/ROOT-10059 and also https://sft.its.cern.ch/jira/browse/ROOT-10081. and the solution is not to use GetSeed but the class copy constructor. . Things to do is document better `TRandom::GetSeed`,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6624
https://github.com/root-project/root/issues/6625:9,testability,understand,understand,9,I do not understand this point. The definType description is directly taken from the C++ code by doxygen . So it take a std::string ... Where exactly do you think the description is wrong ? for example I do not find wrong example ...,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:362,availability,escal,escalier,362,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:922,availability,escal,escalier,922,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1067,availability,error,error,1067,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1667,availability,Error,Error,1667,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1707,deployability,fail,failed,1707,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:380,integrability,pub,public,380,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:931,integrability,pub,public,931,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:895,interoperability,share,shared,895,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1296,interoperability,convers,conversion,1296,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1067,performance,error,error,1067,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1667,performance,Error,Error,1667,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1707,reliability,fail,failed,1707,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1067,safety,error,error,1067,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1667,safety,Error,Error,1667,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1796,safety,compl,complains,1796,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:362,security,escal,escalier,362,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:596,security,Team,Team,596,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:922,security,escal,escalier,922,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1796,security,compl,complains,1796,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:36,usability,minim,minimum,36,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:54,usability,minim,minimal,54,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:100,usability,minim,minimal,100,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:449,usability,minim,minimal,449,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:703,usability,help,help,703,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:842,usability,minim,minimal,842,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1051,usability,minim,minimal,1051,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1067,usability,error,error,1067,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:1667,usability,Error,Error,1667,"Please see a proof of what I say :. minimum program : minimal.C. ```. #include <RooCategory.h>. int minimal(). {. RooCategory cat(""cat"",""cat"");. string mystring=""category1"";. cat.defineType(""category1"",1);. //next line is line 13. cat.defineType(mystring,1);. //next line is line 16. cat.defineType(mystring.c_str(),1);. return 0;. }. ```. Then just do :. ```. [escalier@cca002]~/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc% root -b minimal.C+. ------------------------------------------------------------. | Welcome to ROOT 6.18/00 https://root.cern |. | (c) 1995-2019, The ROOT Team |. | Built for linuxx8664gcc on Jul 23 2019, 16:46:00 |. | From tag v6-18-00, 25 June 2019 |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------. root [0]. Processing minimal.C+... Info in <TUnixSystem::ACLiC>: creating shared library /pbs/home/e/escalier/public/ATLAS_HGam/HHyybb/InvestigationRoofit/RooCategoryDoc/./minimal_C.so. In file included from input_line_12:6:. ././minimal.C:13:5: error: no matching member function for call to 'defineType'. cat.defineType(mystring,1);. ~~~~^~~~~~~~~~. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:66:10: note: candidate function not viable: no known conversion from 'std::string' (aka 'basic_string<char>') to 'const char *' for 1st argument. Bool_t defineType(const char* label, Int_t index) ;. ^. /pbs/software/centos-7-x86_64/root/6.18.00/include/root/RooCategory.h:65:10: note: candidate function not viable: requires single argument 'label', but 2 arguments were provided. Bool_t defineType(const char* label) ;. ^. Error in <ACLiC>: Dictionary generation failed! -->so the correct type is not a string : it is a char *. (indeed the compilation complains for line 13, but not for line 16). ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:609,availability,Down,Downloads,609,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:860,availability,ERROR,ERROR,860,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:949,availability,ERROR,ERROR,949,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:345,deployability,version,version,345,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:345,integrability,version,version,345,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:581,interoperability,share,shared,581,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:345,modifiability,version,version,345,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:860,performance,ERROR,ERROR,860,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:949,performance,ERROR,ERROR,949,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:860,safety,ERROR,ERROR,860,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:866,safety,Input,InputArguments,866,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:949,safety,ERROR,ERROR,949,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:955,safety,Input,InputArguments,955,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:184,security,Team,Team,184,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:391,usability,help,help,391,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:527,usability,minim,minimal,527,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:597,usability,User,Users,597,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:860,usability,ERROR,ERROR,860,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:866,usability,Input,InputArguments,866,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:949,usability,ERROR,ERROR,949,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:955,usability,Input,InputArguments,955,"I do not get the same thing:. ```. % root. ------------------------------------------------------------------. | Welcome to ROOT 6.23/01 https://root.cern |. | (c) 1995-2020, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for macosx64 on Oct 14 2020, 08:50:48 |. | From heads/master@v6-23-01-1567-g6f8fd46266 |. | With Apple clang version 12.0.0 (clang-1200.0.32.2) |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. root [0] .x minimal.C++. Info in <TMacOSXSystem::ACLiC>: creating shared library /Users/couet/Downloads/./minimal_C.so. RooFit v3.60 -- Developed by Wouter Verkerke and David Kirkby . Copyright (C) 2000-2013 NIKHEF, University of California & Stanford University. All rights reserved, please read http://roofit.sourceforge.net/license.txt. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. [#0] ERROR:InputArguments -- RooAbsCategory::defineState(cat): index 1 already assigned. (int) 0. root [1] . ```",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:190,deployability,version,version,190,"I see, you are using 6.18. you should look at the 6.18 documentation:. https://root.cern.ch/doc/v618/classRooCategory.html ... there you will have the description corresponding to your root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:190,integrability,version,version,190,"I see, you are using 6.18. you should look at the 6.18 documentation:. https://root.cern.ch/doc/v618/classRooCategory.html ... there you will have the description corresponding to your root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:190,modifiability,version,version,190,"I see, you are using 6.18. you should look at the 6.18 documentation:. https://root.cern.ch/doc/v618/classRooCategory.html ... there you will have the description corresponding to your root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:55,usability,document,documentation,55,"I see, you are using 6.18. you should look at the 6.18 documentation:. https://root.cern.ch/doc/v618/classRooCategory.html ... there you will have the description corresponding to your root version.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:70,deployability,version,version,70,This is now clarified. It was a mismatch between the ROOT and the doc version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:70,integrability,version,version,70,This is now clarified. It was a mismatch between the ROOT and the doc version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:32,interoperability,mismatch,mismatch,32,This is now clarified. It was a mismatch between the ROOT and the doc version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:70,modifiability,version,version,70,This is now clarified. It was a mismatch between the ROOT and the doc version.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:84,deployability,version,version,84,"thank you Olivier. So I agree that it works on Cern lxplus (which has a more recent version of root). So it means that the documentation is not correct for root 6.18.00 (the one that I use). ok, then it is fine, since at a given moment, the old version will disappear. (even though 6.18.00 is only 6 months old)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:245,deployability,version,version,245,"thank you Olivier. So I agree that it works on Cern lxplus (which has a more recent version of root). So it means that the documentation is not correct for root 6.18.00 (the one that I use). ok, then it is fine, since at a given moment, the old version will disappear. (even though 6.18.00 is only 6 months old)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:84,integrability,version,version,84,"thank you Olivier. So I agree that it works on Cern lxplus (which has a more recent version of root). So it means that the documentation is not correct for root 6.18.00 (the one that I use). ok, then it is fine, since at a given moment, the old version will disappear. (even though 6.18.00 is only 6 months old)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:245,integrability,version,version,245,"thank you Olivier. So I agree that it works on Cern lxplus (which has a more recent version of root). So it means that the documentation is not correct for root 6.18.00 (the one that I use). ok, then it is fine, since at a given moment, the old version will disappear. (even though 6.18.00 is only 6 months old)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:84,modifiability,version,version,84,"thank you Olivier. So I agree that it works on Cern lxplus (which has a more recent version of root). So it means that the documentation is not correct for root 6.18.00 (the one that I use). ok, then it is fine, since at a given moment, the old version will disappear. (even though 6.18.00 is only 6 months old)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:245,modifiability,version,version,245,"thank you Olivier. So I agree that it works on Cern lxplus (which has a more recent version of root). So it means that the documentation is not correct for root 6.18.00 (the one that I use). ok, then it is fine, since at a given moment, the old version will disappear. (even though 6.18.00 is only 6 months old)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:123,usability,document,documentation,123,"thank you Olivier. So I agree that it works on Cern lxplus (which has a more recent version of root). So it means that the documentation is not correct for root 6.18.00 (the one that I use). ok, then it is fine, since at a given moment, the old version will disappear. (even though 6.18.00 is only 6 months old)",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:83,deployability,version,version,83,The documentation is correct but you should use the one corresponding to your ROOT version. See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version. Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:188,deployability,version,version,188,The documentation is correct but you should use the one corresponding to your ROOT version. See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version. Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:83,integrability,version,version,83,The documentation is correct but you should use the one corresponding to your ROOT version. See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version. Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:188,integrability,version,version,188,The documentation is correct but you should use the one corresponding to your ROOT version. See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version. Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:83,modifiability,version,version,83,The documentation is correct but you should use the one corresponding to your ROOT version. See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version. Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:188,modifiability,version,version,188,The documentation is correct but you should use the one corresponding to your ROOT version. See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version. Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:4,usability,document,documentation,4,The documentation is correct but you should use the one corresponding to your ROOT version. See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version. Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:236,usability,document,documentation,236,The documentation is correct but you should use the one corresponding to your ROOT version. See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version. Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:297,usability,guid,guide,297,The documentation is correct but you should use the one corresponding to your ROOT version. See at the top of https://root.cern.ch/doc/master/classRooCategory.html you can change the ROOT version. Choose 6.18 and you will get the right documentation corresponding to ROOT 6.18. The ROOT reference guide has several occurrences : https://root.cern/reference/,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:103,deployability,version,version,103,"Thank you. Sorry, I was not aware that there was a way to give a specific documentation for a specific version of root, and was not aware that the prototypes were changing. So everything is fine. Sorry for my report. It could be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:103,integrability,version,version,103,"Thank you. Sorry, I was not aware that there was a way to give a specific documentation for a specific version of root, and was not aware that the prototypes were changing. So everything is fine. Sorry for my report. It could be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:65,interoperability,specif,specific,65,"Thank you. Sorry, I was not aware that there was a way to give a specific documentation for a specific version of root, and was not aware that the prototypes were changing. So everything is fine. Sorry for my report. It could be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:94,interoperability,specif,specific,94,"Thank you. Sorry, I was not aware that there was a way to give a specific documentation for a specific version of root, and was not aware that the prototypes were changing. So everything is fine. Sorry for my report. It could be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:103,modifiability,version,version,103,"Thank you. Sorry, I was not aware that there was a way to give a specific documentation for a specific version of root, and was not aware that the prototypes were changing. So everything is fine. Sorry for my report. It could be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:74,usability,document,documentation,74,"Thank you. Sorry, I was not aware that there was a way to give a specific documentation for a specific version of root, and was not aware that the prototypes were changing. So everything is fine. Sorry for my report. It could be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:147,usability,prototyp,prototypes,147,"Thank you. Sorry, I was not aware that there was a way to give a specific documentation for a specific version of root, and was not aware that the prototypes were changing. So everything is fine. Sorry for my report. It could be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/issues/6625:229,usability,close,closed,229,"Thank you. Sorry, I was not aware that there was a way to give a specific documentation for a specific version of root, and was not aware that the prototypes were changing. So everything is fine. Sorry for my report. It could be closed.",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6625
https://github.com/root-project/root/pull/6628:6,availability,failur,failure,6,Fed30 failure seems spurious?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6628
https://github.com/root-project/root/pull/6628:6,deployability,fail,failure,6,Fed30 failure seems spurious?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6628
https://github.com/root-project/root/pull/6628:6,performance,failur,failure,6,Fed30 failure seems spurious?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6628
https://github.com/root-project/root/pull/6628:6,reliability,fail,failure,6,Fed30 failure seems spurious?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6628
https://github.com/root-project/root/pull/6629:11,deployability,build,build,11,@phsft-bot build!,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:195,deployability,build,building,195,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:333,deployability,build,build,333,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:710,deployability,configurat,configuration,710,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:710,integrability,configur,configuration,710,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:214,interoperability,distribut,distributed,214,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:321,interoperability,distribut,distributed,321,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:710,modifiability,configur,configuration,710,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:739,modifiability,extens,extensively,739,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:147,safety,review,review,147,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:360,safety,test,testing,360,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:751,safety,test,testing,751,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:710,security,configur,configuration,710,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:147,testability,review,review,147,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:360,testability,test,testing,360,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6629:751,testability,test,testing,751,"Hi @dioguerra, thanks for the PR, and sorry for the late reply! I'm afraid since @stwunsch is not working of ROOT anymore, there is nobody who can review this PR. In fact I don't think anyone is building ROOT in a distributed way with `distcc`. Hence, the exercise is mostly academic and we can't prioritize setting up a distributed build environment just for testing this PR. If this feature is still relevant for you, please feel free to open a new PR or re-open this one, but **make sure to explain the usecase and include also some benchmarks results** like [Stefan in his `distcc` PR](https://github.com/root-project/root/pull/5705) that would give us confidence that this is a meaningful addition to the configuration matrix without extensively testing it ourselves. Thanks!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6629
https://github.com/root-project/root/pull/6632:118,deployability,integr,integrator,118,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:161,deployability,releas,release,161,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:118,integrability,integr,integrator,118,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:275,integrability,batch,batch,275,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:118,interoperability,integr,integrator,118,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:118,modifiability,integr,integrator,118,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:221,performance,time,time,221,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:270,performance,time,time,270,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:275,performance,batch,batch,275,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:118,reliability,integr,integrator,118,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:229,safety,test,test,229,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:118,security,integr,integrator,118,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:118,testability,integr,integrator,118,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6632:229,testability,test,test,229,Hi . The PR looks good to me. Thank you for this nice contribution ! The only question is if we want to have this new integrator already the default in this new release or having it as optional and this will give us more time to test it. It could be enabled maybe every time batch evaluation is enabled.,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6632
https://github.com/root-project/root/pull/6633:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6633
https://github.com/root-project/root/pull/6634:11,deployability,build,build,11,@phsft-bot build,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:12,integrability,discover,discover,12,How did you discover that this was needed? GetCollectionEntryName is a protected/internal routine that is never called will a nullptr. Maybe an assert or something is more appropriate improvement?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:90,integrability,rout,routine,90,How did you discover that this was needed? GetCollectionEntryName is a protected/internal routine that is never called will a nullptr. Maybe an assert or something is more appropriate improvement?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:12,interoperability,discover,discover,12,How did you discover that this was needed? GetCollectionEntryName is a protected/internal routine that is never called will a nullptr. Maybe an assert or something is more appropriate improvement?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:144,testability,assert,assert,144,How did you discover that this was needed? GetCollectionEntryName is a protected/internal routine that is never called will a nullptr. Maybe an assert or something is more appropriate improvement?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:12,usability,discov,discover,12,How did you discover that this was needed? GetCollectionEntryName is a protected/internal routine that is never called will a nullptr. Maybe an assert or something is more appropriate improvement?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:162,availability,incid,incident,162,"Hi @pcanal ,. I have discovered that just reading the codes. I'm interested to prevent such things in graphics and read codes from graphics, but this was just an incident that I've looked inside TCollection. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:21,integrability,discover,discovered,21,"Hi @pcanal ,. I have discovered that just reading the codes. I'm interested to prevent such things in graphics and read codes from graphics, but this was just an incident that I've looked inside TCollection. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:21,interoperability,discover,discovered,21,"Hi @pcanal ,. I have discovered that just reading the codes. I'm interested to prevent such things in graphics and read codes from graphics, but this was just an incident that I've looked inside TCollection. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:162,reliability,incid,incident,162,"Hi @pcanal ,. I have discovered that just reading the codes. I'm interested to prevent such things in graphics and read codes from graphics, but this was just an incident that I've looked inside TCollection. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:79,safety,prevent,prevent,79,"Hi @pcanal ,. I have discovered that just reading the codes. I'm interested to prevent such things in graphics and read codes from graphics, but this was just an incident that I've looked inside TCollection. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:79,security,preven,prevent,79,"Hi @pcanal ,. I have discovered that just reading the codes. I'm interested to prevent such things in graphics and read codes from graphics, but this was just an incident that I've looked inside TCollection. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:21,usability,discov,discovered,21,"Hi @pcanal ,. I have discovered that just reading the codes. I'm interested to prevent such things in graphics and read codes from graphics, but this was just an incident that I've looked inside TCollection. Best regards,. Andrii",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:91,deployability,stage,stage,91,"Fair enough. So for this case, I would prefer to leave it as the caller need to be careful stage rather than incur the cost of the check. Thank!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/pull/6634:39,usability,prefer,prefer,39,"Fair enough. So for this case, I would prefer to leave it as the caller need to be careful stage rather than incur the cost of the check. Thank!",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6634
https://github.com/root-project/root/issues/6635:26,modifiability,paramet,parameter,26,Check the CMake `TIMEOUT` parameter for `ExternalProject`. Not sure what else to add. If this is unclear for you then maybe pick a different issue to start with?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:17,performance,TIME,TIMEOUT,17,Check the CMake `TIMEOUT` parameter for `ExternalProject`. Not sure what else to add. If this is unclear for you then maybe pick a different issue to start with?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/issues/6635:17,safety,TIMEOUT,TIMEOUT,17,Check the CMake `TIMEOUT` parameter for `ExternalProject`. Not sure what else to add. If this is unclear for you then maybe pick a different issue to start with?,MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6635
https://github.com/root-project/root/pull/6636:42,usability,document,documentation,42,Can you expand the commit and/or the code documentation to explain why this is needed? (i.e. why isn't it that way by default),MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/6636
https://github.com/root-project/root/issues/6637:74,integrability,pub,public,74,"This is a C++ reproducer of what's going on:. ```cpp. class MyCppClass {. public:. virtual void MyMethod() { cout << ""In MyCppClass"" << endl; }. virtual ~MyCppClass() {}. };. namespace __cppyy_internal {. class Dispatcher1 : public ::MyCppClass {. public:. virtual ~Dispatcher1() {}. void MyMethod() {. cout << ""In Dispatcher1"" << endl;. }. using MyCppClass::MyCppClass;. Dispatcher1() {}. Dispatcher1(const Dispatcher1& other) : MyCppClass(other) {}. };. }. TInterpreter::CallFuncIFacePtr_t GetCallFunc(TFunction *f). {. CallFunc_t* callf = gInterpreter->CallFunc_Factory();. MethodInfo_t* meth = gInterpreter->MethodInfo_Factory(f->GetDeclId());. gInterpreter->CallFunc_SetFunc(callf, meth);. gInterpreter->MethodInfo_Delete(meth);. auto oldErrLvl = gErrorIgnoreLevel;. gErrorIgnoreLevel = kFatal;. auto faceptr = gInterpreter->CallFunc_IFacePtr(callf);. gErrorIgnoreLevel = oldErrLvl;. gInterpreter->CallFunc_Delete(callf);. return faceptr;. }. void root_6637(). {. TClassRef c0(""MyCppClass"");. TFunction *f0 = (TFunction*)c0->GetListOfMethods()->At(0);. cout << ""METHOD: "" << f0->GetPrototype() << endl;. const TInterpreter::CallFuncIFacePtr_t& faceptr0 = GetCallFunc(f0);. __cppyy_internal::Dispatcher1 *d = new __cppyy_internal::Dispatcher1();. void* smallbuf0[8];. void* objresult0 = nullptr;. faceptr0.fGeneric((void*)d, 0, smallbuf0, &objresult0);. }. ```. The macro above prints:. ```. METHOD: void MyCppClass::MyMethod(). In Dispatcher1. ```. So I'm trying to invoke `MyCppClass::MyMethod()` on a `Dispatcher1` object, but what is invoked is `Dispatcher1::MyMethod()`. To be checked with @Axel-Naumann if the TCling code above should (and is intended to) do the equivalent of `d->MyCppClass::MyMethod()` or it should behave as `d->MyMethod()` (as it does right now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6637:225,integrability,pub,public,225,"This is a C++ reproducer of what's going on:. ```cpp. class MyCppClass {. public:. virtual void MyMethod() { cout << ""In MyCppClass"" << endl; }. virtual ~MyCppClass() {}. };. namespace __cppyy_internal {. class Dispatcher1 : public ::MyCppClass {. public:. virtual ~Dispatcher1() {}. void MyMethod() {. cout << ""In Dispatcher1"" << endl;. }. using MyCppClass::MyCppClass;. Dispatcher1() {}. Dispatcher1(const Dispatcher1& other) : MyCppClass(other) {}. };. }. TInterpreter::CallFuncIFacePtr_t GetCallFunc(TFunction *f). {. CallFunc_t* callf = gInterpreter->CallFunc_Factory();. MethodInfo_t* meth = gInterpreter->MethodInfo_Factory(f->GetDeclId());. gInterpreter->CallFunc_SetFunc(callf, meth);. gInterpreter->MethodInfo_Delete(meth);. auto oldErrLvl = gErrorIgnoreLevel;. gErrorIgnoreLevel = kFatal;. auto faceptr = gInterpreter->CallFunc_IFacePtr(callf);. gErrorIgnoreLevel = oldErrLvl;. gInterpreter->CallFunc_Delete(callf);. return faceptr;. }. void root_6637(). {. TClassRef c0(""MyCppClass"");. TFunction *f0 = (TFunction*)c0->GetListOfMethods()->At(0);. cout << ""METHOD: "" << f0->GetPrototype() << endl;. const TInterpreter::CallFuncIFacePtr_t& faceptr0 = GetCallFunc(f0);. __cppyy_internal::Dispatcher1 *d = new __cppyy_internal::Dispatcher1();. void* smallbuf0[8];. void* objresult0 = nullptr;. faceptr0.fGeneric((void*)d, 0, smallbuf0, &objresult0);. }. ```. The macro above prints:. ```. METHOD: void MyCppClass::MyMethod(). In Dispatcher1. ```. So I'm trying to invoke `MyCppClass::MyMethod()` on a `Dispatcher1` object, but what is invoked is `Dispatcher1::MyMethod()`. To be checked with @Axel-Naumann if the TCling code above should (and is intended to) do the equivalent of `d->MyCppClass::MyMethod()` or it should behave as `d->MyMethod()` (as it does right now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
https://github.com/root-project/root/issues/6637:248,integrability,pub,public,248,"This is a C++ reproducer of what's going on:. ```cpp. class MyCppClass {. public:. virtual void MyMethod() { cout << ""In MyCppClass"" << endl; }. virtual ~MyCppClass() {}. };. namespace __cppyy_internal {. class Dispatcher1 : public ::MyCppClass {. public:. virtual ~Dispatcher1() {}. void MyMethod() {. cout << ""In Dispatcher1"" << endl;. }. using MyCppClass::MyCppClass;. Dispatcher1() {}. Dispatcher1(const Dispatcher1& other) : MyCppClass(other) {}. };. }. TInterpreter::CallFuncIFacePtr_t GetCallFunc(TFunction *f). {. CallFunc_t* callf = gInterpreter->CallFunc_Factory();. MethodInfo_t* meth = gInterpreter->MethodInfo_Factory(f->GetDeclId());. gInterpreter->CallFunc_SetFunc(callf, meth);. gInterpreter->MethodInfo_Delete(meth);. auto oldErrLvl = gErrorIgnoreLevel;. gErrorIgnoreLevel = kFatal;. auto faceptr = gInterpreter->CallFunc_IFacePtr(callf);. gErrorIgnoreLevel = oldErrLvl;. gInterpreter->CallFunc_Delete(callf);. return faceptr;. }. void root_6637(). {. TClassRef c0(""MyCppClass"");. TFunction *f0 = (TFunction*)c0->GetListOfMethods()->At(0);. cout << ""METHOD: "" << f0->GetPrototype() << endl;. const TInterpreter::CallFuncIFacePtr_t& faceptr0 = GetCallFunc(f0);. __cppyy_internal::Dispatcher1 *d = new __cppyy_internal::Dispatcher1();. void* smallbuf0[8];. void* objresult0 = nullptr;. faceptr0.fGeneric((void*)d, 0, smallbuf0, &objresult0);. }. ```. The macro above prints:. ```. METHOD: void MyCppClass::MyMethod(). In Dispatcher1. ```. So I'm trying to invoke `MyCppClass::MyMethod()` on a `Dispatcher1` object, but what is invoked is `Dispatcher1::MyMethod()`. To be checked with @Axel-Naumann if the TCling code above should (and is intended to) do the equivalent of `d->MyCppClass::MyMethod()` or it should behave as `d->MyMethod()` (as it does right now).",MatchSource.ISSUE_COMMENT,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/6637
