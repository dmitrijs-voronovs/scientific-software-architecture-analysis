id,quality_attribute,keyword,matched_word,match_idx,sentence,source,author,repo,version,wiki,url
https://github.com/root-project/root/pull/8900:411,safety,updat,updated,411,"Fix to TGeoMaterial::AddElement ; # This Pull request:. Fix to TGeoMaterial::AddElement to allow to add elements/materials/mixtures with weight zero. ## Changes or fixes:. Allow to add elements/materials/mixtures with weight zero. . If weight is negative issue Fatal . If weight is smaller than numeric_limits<Double_t>::epsilon(), ignore additional elements. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8892.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8900
https://github.com/root-project/root/pull/8900:411,security,updat,updated,411,"Fix to TGeoMaterial::AddElement ; # This Pull request:. Fix to TGeoMaterial::AddElement to allow to add elements/materials/mixtures with weight zero. ## Changes or fixes:. Allow to add elements/materials/mixtures with weight zero. . If weight is negative issue Fatal . If weight is smaller than numeric_limits<Double_t>::epsilon(), ignore additional elements. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8892.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8900
https://github.com/root-project/root/pull/8900:381,testability,test,tested,381,"Fix to TGeoMaterial::AddElement ; # This Pull request:. Fix to TGeoMaterial::AddElement to allow to add elements/materials/mixtures with weight zero. ## Changes or fixes:. Allow to add elements/materials/mixtures with weight zero. . If weight is negative issue Fatal . If weight is smaller than numeric_limits<Double_t>::epsilon(), ignore additional elements. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes https://github.com/root-project/root/issues/8892.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8900
https://github.com/root-project/root/issues/8901:141,availability,error,error,141,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:500,availability,ERROR,ERROR,500,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:591,availability,ERROR,ERROR,591,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:162,deployability,contain,contains,162,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:237,deployability,contain,containing,237,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:261,deployability,Contain,ContainsEnum,261,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:420,deployability,Contain,ContainsEnum,420,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:632,deployability,Contain,ContainsEnum,632,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:864,deployability,build,build,864,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:909,deployability,build,build,909,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:276,integrability,pub,public,276,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:141,performance,error,error,141,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:500,performance,ERROR,ERROR,500,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:591,performance,ERROR,ERROR,591,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:141,safety,error,error,141,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:466,safety,except,exception,466,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:500,safety,ERROR,ERROR,500,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:591,safety,ERROR,ERROR,591,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:677,security,access,access,677,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:38,usability,user,user,38,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:141,usability,error,error,141,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:500,usability,ERROR,ERROR,500,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8901:591,usability,ERROR,ERROR,591,"RNTuple: Can not create a Field for a user class with anonymous enum ; RFieldBase::Create(""fieldname"", ""classame"") in ROOT 6.24.0 returns an error when the class contains an anonymous enum. . To reproduce execute a ROOT macro EmumTest.C containing:. ```. class ContainsEnum { public: enum { EnumField1, EnumField2 }; }; . void EnumTest() { . try { auto field = ROOT::Experimental::Detail::RFieldBase::Create(""HasEnum"", ""ContainsEnum"").Unwrap(); . } catch(const std::exception& exc) { . std::cout << ""ERROR: "" << exc.what() << std::endl; . } . }. ``` . ```root [0] . Processing EnumTest.C... ERROR: Field EnumField1 has unknown type ContainsEnum::(anonymous) (unchecked RResult access!). At:. static ROOT::Experimental::RResult<std::unique_ptr<ROOT::Experimental::Detail::RFieldBase> > ROOT::Experimental::Detail::RFieldBase::Create(const string&, const string&) [/build/jenkins/workspace/lcg_release_pipeline/build/projects/ROOT-v6.24.00/src/ROOT/v6.24.00/tree/ntuple/v7/src/RField.cxx:225]. ```. Marcin",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8901
https://github.com/root-project/root/issues/8902:600,availability,slo,slot,600,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:654,availability,error,error,654,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2195,availability,Operat,Operating,2195,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2270,availability,down,download,2270,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2346,availability,slo,slot,2346,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:589,deployability,build,build,589,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:747,deployability,RELEAS,RELEASE,747,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:761,deployability,build,build,761,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:767,deployability,INSTAL,INSTALL,767,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:875,deployability,modul,module,875,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1023,deployability,modul,module,1023,"ofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run oursel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1032,deployability,modul,module,1032,"category.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1454,deployability,modul,module,1454,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2116,deployability,build,build,2116,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2183,deployability,version,version,2183,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2252,deployability,instal,install,2252,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2314,deployability,version,version,2314,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:842,energy efficiency,core,core,842,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2183,integrability,version,version,2183,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2314,integrability,version,version,2314,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:827,modifiability,pac,packages,827,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:875,modifiability,modul,module,875,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1023,modifiability,modul,module,1023,"ofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run oursel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1032,modifiability,modul,module,1032,"category.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1300,modifiability,pac,package,1300,"rts of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1454,modifiability,modul,module,1454,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2183,modifiability,version,version,2183,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2314,modifiability,version,version,2314,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:654,performance,error,error,654,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:600,reliability,slo,slot,600,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2346,reliability,slo,slot,2346,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:617,safety,test,tests,617,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:654,safety,error,error,654,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:875,safety,modul,module,875,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1023,safety,modul,module,1023,"ofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run oursel",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1032,safety,modul,module,1032,"category.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1454,safety,modul,module,1454,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2070,safety,input,input,2070,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:617,testability,test,tests,617,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:668,testability,Trace,Traceback,668,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2368,testability,context,context,2368,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2397,testability,context,context,2397,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:480,usability,clear,clear,480,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:528,usability,behavi,behavior,528,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:654,usability,error,error,654,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:723,usability,user,user,723,"lib/ROOT/pythonization/_roofit/_roocategory.py : SyntaxError: invalid escape sequence \c; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1701,usability,support,supports,1701,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1793,usability,behavi,behavior,1793,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1811,usability,clear,clear,1811,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:1925,usability,behavi,behavior,1925,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/issues/8902:2070,usability,input,input,2070,"'s master"". -->. ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. I my project I use ROOT from LCG nightlies build dev3 slot. And for my tests (with ctest and nose) I get an error:. ``` . Traceback (most recent call last):. File ""/afs/cern.ch/user/i/ibelyaev/cmtuser/RELEASE/ostap/build/INSTALL/LCGdev3/x86_64-centos7-gcc11-opt/lib/python3.9/site-packages/ostap/core/build_dir.py"", line 28, in <module>. import ROOT, os, glob . File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/__init__.py"", line 69, in <module>. module = importlib.import_module(pyz.__name__ + '.' + module_name). File ""/cvmfs/sft-nightlies.cern.ch/lcg/latest/Python/3.9.6-b0f98/x86_64-centos7-gcc11-opt/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/__init__.py"", line 26, in <module>. from ._roocategory import RooCategory. File ""/cvmfs/sft-nightlies.cern.ch/lcg/views/dev3/Thu/x86_64-centos7-gcc11-opt/lib/ROOT/pythonization/_roofit/_roocategory.py"", line 18. """"""Constructor of RooCategory takes a map as an argument also supports python dictionaries. ^. SyntaxError: invalid escape sequence \c. ```. ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ROOT version from LCG nightlies dev3 slot . ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8902
https://github.com/root-project/root/pull/8903:468,deployability,updat,updated,468,"[DF] Add parameter `zero` in ROOT::VecOps::Sum and ROOT::VecOps::Mean; # This Pull request:. ## Changes or fixes:. Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions. Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`. If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!-- This PR fixes # --> .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/pull/8903:9,modifiability,paramet,parameter,9,"[DF] Add parameter `zero` in ROOT::VecOps::Sum and ROOT::VecOps::Mean; # This Pull request:. ## Changes or fixes:. Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions. Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`. If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!-- This PR fixes # --> .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/pull/8903:130,modifiability,paramet,parameter,130,"[DF] Add parameter `zero` in ROOT::VecOps::Sum and ROOT::VecOps::Mean; # This Pull request:. ## Changes or fixes:. Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions. Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`. If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!-- This PR fixes # --> .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/pull/8903:438,safety,test,tested,438,"[DF] Add parameter `zero` in ROOT::VecOps::Sum and ROOT::VecOps::Mean; # This Pull request:. ## Changes or fixes:. Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions. Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`. If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!-- This PR fixes # --> .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/pull/8903:468,safety,updat,updated,468,"[DF] Add parameter `zero` in ROOT::VecOps::Sum and ROOT::VecOps::Mean; # This Pull request:. ## Changes or fixes:. Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions. Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`. If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!-- This PR fixes # --> .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/pull/8903:468,security,updat,updated,468,"[DF] Add parameter `zero` in ROOT::VecOps::Sum and ROOT::VecOps::Mean; # This Pull request:. ## Changes or fixes:. Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions. Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`. If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!-- This PR fixes # --> .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/pull/8903:438,testability,test,tested,438,"[DF] Add parameter `zero` in ROOT::VecOps::Sum and ROOT::VecOps::Mean; # This Pull request:. ## Changes or fixes:. Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions. Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`. If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!-- This PR fixes # --> .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/pull/8903:279,usability,user,users,279,"[DF] Add parameter `zero` in ROOT::VecOps::Sum and ROOT::VecOps::Mean; # This Pull request:. ## Changes or fixes:. Add the `zero` parameter for `ROOT::VecOps::Sum()` and ROOT::VecOps::Mean()`` functions. Used as `ROOT::VecOps::Sum(v, ROOT::Math::PtEtaPhiEVector())`. If applied, users will be able to get the sum of non-numeric `RVec`s easily. This is my first PR here. Please tell me if there is something I missed. ## Checklist:. - [X] tested changes locally. - [X] updated the docs (if necessary). <!-- This PR fixes # --> .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8903
https://github.com/root-project/root/issues/8904:413,availability,error,error,413,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:494,availability,error,error,494,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:815,availability,down,download,815,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:79,deployability,instal,installed,79,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:109,deployability,version,version,109,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:138,deployability,instal,installed,138,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:797,deployability,instal,install,797,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:6,integrability,messag,messages,6,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:109,integrability,version,version,109,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:6,interoperability,messag,messages,6,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:109,modifiability,version,version,109,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:150,modifiability,pac,package,150,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:413,performance,error,error,413,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:494,performance,error,error,494,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:100,safety,test,testing,100,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:413,safety,error,error,413,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:494,safety,error,error,494,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:761,safety,test,testing,761,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:100,testability,test,testing,100,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:761,testability,test,testing,761,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:413,usability,error,error,413,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:494,usability,error,error,494,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8904:605,usability,behavi,behavior,605,"Weird messages from TInterpreter::AutoParse; ### Describe the bug. I have root installed from EPEL8-testing, version 6.24.02. I also have installed a package called perl-Unicode-Map, which provides a file /usr/bin/map. When TInterpreter::AutoParse finds . ```. #include <map> . ```. in my headers it tries to parse /usr/bin/map. ```. In file included from /usr/include/zevis/ZStyleScheme.h:12:. /usr/bin/map:1:2: error: invalid preprocessing directive. #!/usr/bin/perl -w. ^. /usr/bin/map:2:2: error: invalid preprocessing directive. #$Id: map,v 1.20 1998/02/11 23:58:27 schwartz Exp $. ```. ### Expected behavior. /usr/bin/map is not parsed. ### To Reproduce. Eh, not sure if I can provide a short reproducer immediately. ### Setup. 1. ROOT 6.24.02 from EPEL8 testing. 2. CentSO8 Stream. 3. `dnf install` / binary download / you built it yourself. Best regards,. Andrii.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8904
https://github.com/root-project/root/issues/8905:23,deployability,fail,fail,23,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:72,deployability,log,logs,72,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:233,energy efficiency,core,corectness,233,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:196,integrability,translat,translated,196,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:196,interoperability,translat,translated,196,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:23,reliability,fail,fail,23,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:17,safety,test,tests,17,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:72,safety,log,logs,72,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:82,safety,test,test,82,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:180,safety,test,tests,180,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:72,security,log,logs,72,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:17,testability,test,tests,17,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:72,testability,log,logs,72,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:82,testability,test,test,82,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:180,testability,test,tests,180,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8905:249,testability,verif,verified,249,"root/io/bigevent tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8905
https://github.com/root-project/root/issues/8906:20,deployability,fail,fail,20,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:69,deployability,log,logs,69,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:269,energy efficiency,core,corectness,269,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:8,integrability,event,event,8,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:20,reliability,fail,fail,20,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:14,safety,test,tests,14,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:69,safety,log,logs,69,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:79,safety,test,test,79,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:177,safety,test,tests,177,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:69,security,log,logs,69,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:14,testability,test,tests,14,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:69,testability,log,logs,69,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:79,testability,test,test,79,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:177,testability,test,tests,177,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8906:287,testability,verif,verified,287,"root/io/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake rather than calling `make cleantest`. After that their corectness can be verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8906
https://github.com/root-project/root/issues/8907:26,deployability,fail,fail,26,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:75,deployability,log,logs,75,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:236,energy efficiency,core,corectness,236,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:199,integrability,translat,translated,199,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:199,interoperability,translat,translated,199,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:26,reliability,fail,fail,26,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:20,safety,test,tests,20,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:75,safety,log,logs,75,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:85,safety,test,test,85,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:183,safety,test,tests,183,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:75,security,log,logs,75,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:20,testability,test,tests,20,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:75,testability,log,logs,75,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:85,testability,test,test,85,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:183,testability,test,tests,183,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8907:252,testability,verif,verified,252,"root/io/compression tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8907
https://github.com/root-project/root/issues/8908:33,deployability,fail,fail,33,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:82,deployability,log,logs,82,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:243,energy efficiency,core,corectness,243,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:206,integrability,translat,translated,206,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:206,interoperability,translat,translated,206,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:33,reliability,fail,fail,33,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:27,safety,test,tests,27,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:82,safety,log,logs,82,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:92,safety,test,test,92,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:190,safety,test,tests,190,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:82,security,log,logs,82,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:27,testability,test,tests,27,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:82,testability,log,logs,82,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:92,testability,test,test,92,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:190,testability,test,tests,190,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8908:259,testability,verif,verified,259,"root/io/datamodelevolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8908
https://github.com/root-project/root/issues/8909:25,deployability,fail,fail,25,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:74,deployability,log,logs,74,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:153,deployability,depend,dependency,153,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:153,integrability,depend,dependency,153,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:256,integrability,Event,Event,256,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:153,modifiability,depend,dependency,153,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:25,reliability,fail,fail,25,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:19,safety,test,tests,19,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:74,safety,log,logs,74,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:83,safety,test,tests,83,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:153,safety,depend,dependency,153,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:207,safety,Test,Tests,207,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:290,safety,test,tested,290,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:74,security,log,logs,74,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:19,testability,test,tests,19,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:74,testability,log,logs,74,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:83,testability,test,tests,83,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:153,testability,depend,dependency,153,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:207,testability,Test,Tests,207,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8909:290,testability,test,tested,290,"root/io/references tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, probably because of a badly setup dependency on libEvent. ### How it could be improved. Tests should be remade using CMake with a proper Event generation library and then tested for correctness against libasan.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8909
https://github.com/root-project/root/issues/8910:19,deployability,fail,fail,19,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:68,deployability,log,logs,68,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:153,deployability,contain,contains,153,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:19,reliability,fail,fail,19,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:13,safety,test,tests,13,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:68,safety,log,logs,68,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:78,safety,test,test,78,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:175,safety,test,tests,175,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:68,security,log,logs,68,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:13,testability,test,tests,13,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:68,testability,log,logs,68,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:78,testability,test,test,78,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8910:175,testability,test,tests,175,"root/io/perf tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . Also, perf contains a lot of old tests than seemingly never got run. There is a discussion about this ongoing at https://github.com/root-project/roottest/pull/732 ; any idea @bellenot @pcanal ?",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8910
https://github.com/root-project/root/issues/8911:29,deployability,fail,fail,29,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:78,deployability,log,logs,78,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:239,energy efficiency,core,corectness,239,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:17,integrability,event,event,17,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:29,reliability,fail,fail,29,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:23,safety,test,tests,23,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:78,safety,log,logs,78,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:88,safety,test,test,88,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:186,safety,test,tests,186,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:78,security,log,logs,78,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:23,testability,test,tests,23,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:78,testability,log,logs,78,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:88,testability,test,test,88,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:186,testability,test,tests,186,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8911:250,testability,verif,verified,250,"root/treeformula/event tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be implemented in CMake then have their corectness verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8911
https://github.com/root-project/root/issues/8912:33,deployability,fail,fail,33,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:82,deployability,log,logs,82,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:243,energy efficiency,core,corectness,243,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:206,integrability,translat,translated,206,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:206,interoperability,translat,translated,206,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:33,reliability,fail,fail,33,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:28,safety,test,test,28,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:82,safety,log,logs,82,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:92,safety,test,test,92,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:190,safety,test,tests,190,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:82,security,log,logs,82,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:28,testability,test,test,28,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:82,testability,log,logs,82,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:92,testability,test,test,92,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:190,testability,test,tests,190,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8912:259,testability,verif,verified,259,"root/treeformula/references test fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8912
https://github.com/root-project/root/issues/8913:30,deployability,fail,fail,30,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:79,deployability,log,logs,79,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:240,energy efficiency,core,corectness,240,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:203,integrability,translat,translated,203,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:203,interoperability,translat,translated,203,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:30,reliability,fail,fail,30,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:24,safety,test,tests,24,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:79,safety,log,logs,79,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:89,safety,test,test,89,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:187,safety,test,tests,187,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:79,security,log,logs,79,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:24,testability,test,tests,24,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:79,testability,log,logs,79,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:89,testability,test,test,89,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:187,testability,test,tests,187,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8913:256,testability,verif,verified,256,"root/treeformula/retobj tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8913
https://github.com/root-project/root/issues/8914:39,deployability,fail,fail,39,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:88,deployability,log,logs,88,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:249,energy efficiency,core,corectness,249,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:17,integrability,schema,schemaEvolution,17,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:212,integrability,translat,translated,212,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:212,interoperability,translat,translated,212,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:39,reliability,fail,fail,39,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:33,safety,test,tests,33,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:88,safety,log,logs,88,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:98,safety,test,test,98,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:196,safety,test,tests,196,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:88,security,log,logs,88,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:33,testability,test,tests,33,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:88,testability,log,logs,88,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:98,testability,test,test,98,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:196,testability,test,tests,196,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8914:265,testability,verif,verified,265,"root/treeformula/schemaEvolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8914
https://github.com/root-project/root/issues/8915:28,deployability,fail,fail,28,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:77,deployability,log,logs,77,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:238,energy efficiency,core,corectness,238,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:201,integrability,translat,translated,201,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:201,interoperability,translat,translated,201,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:28,reliability,fail,fail,28,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:22,safety,test,tests,22,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:77,safety,log,logs,77,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:87,safety,test,test,87,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:185,safety,test,tests,185,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:77,security,log,logs,77,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:22,testability,test,tests,22,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:77,testability,log,logs,77,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:87,testability,test,test,87,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:185,testability,test,tests,185,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8915:254,testability,verif,verified,254,"root/treeformula/sync tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8915
https://github.com/root-project/root/issues/8916:23,deployability,fail,fail,23,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:73,deployability,log,logs,73,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:234,energy efficiency,core,corectness,234,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:197,integrability,translat,translated,197,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:197,interoperability,translat,translated,197,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:23,reliability,fail,fail,23,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:17,safety,test,tests,17,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:73,safety,log,logs,73,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:83,safety,test,test,83,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:181,safety,test,tests,181,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:73,security,log,logs,73,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:17,testability,test,tests,17,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:73,testability,log,logs,73,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:83,testability,test,test,83,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:181,testability,test,tests,181,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8916:250,testability,verif,verified,250,"root/tree/friend tests fail with ASAN enabled ; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8916
https://github.com/root-project/root/issues/8917:122,availability,failur,failure,122,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:213,availability,error,error,213,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:322,availability,error,error,322,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:26,deployability,fail,fail,26,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:93,deployability,log,logs,93,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:122,deployability,fail,failure,122,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:51,integrability,buffer,buffer,51,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:157,integrability,buffer,buffer-overflow,157,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:282,integrability,translat,translated,282,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:282,interoperability,translat,translated,282,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:122,performance,failur,failure,122,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:213,performance,error,error,213,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:322,performance,error,error,322,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:26,reliability,fail,fail,26,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:122,reliability,fail,failure,122,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:20,safety,test,tests,20,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:93,safety,log,logs,93,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:197,safety,detect,detected,197,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:213,safety,error,error,213,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:266,safety,test,tests,266,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:322,safety,error,error,322,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:93,security,log,logs,93,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:197,security,detect,detected,197,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:20,testability,test,tests,20,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:93,testability,log,logs,93,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:266,testability,test,tests,266,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:213,usability,error,error,213,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8917:322,usability,error,error,322,"root/tree/addresses tests fail with ASAN enabled - buffer overflow; According to the console logs, this looks like a real failure. . `AddressSanitizer: heap-buffer-overflow`. libAsan seems to have detected a real error in the code. ### How it could be improved. The tests should be translated into CMake code and then the error(s) should be adressed",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8917
https://github.com/root-project/root/issues/8918:26,deployability,fail,fail,26,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:75,deployability,log,logs,75,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:236,energy efficiency,core,corectness,236,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:199,integrability,translat,translated,199,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:199,interoperability,translat,translated,199,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:26,reliability,fail,fail,26,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:20,safety,test,tests,20,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:75,safety,log,logs,75,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:85,safety,test,test,85,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:183,safety,test,tests,183,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:75,security,log,logs,75,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:20,testability,test,tests,20,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:75,testability,log,logs,75,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:85,testability,test,test,85,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:183,testability,test,tests,183,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8918:252,testability,verif,verified,252,"root/tree/evolution tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8918
https://github.com/root-project/root/issues/8919:28,deployability,fail,fail,28,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:77,deployability,log,logs,77,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:238,energy efficiency,core,corectness,238,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:201,integrability,translat,translated,201,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:201,interoperability,translat,translated,201,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:28,reliability,fail,fail,28,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:22,safety,test,tests,22,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:77,safety,log,logs,77,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:87,safety,test,test,87,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:185,safety,test,tests,185,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:77,security,log,logs,77,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:22,testability,test,tests,22,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:77,testability,log,logs,77,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:87,testability,test,test,87,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:185,testability,test,tests,185,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8919:254,testability,verif,verified,254,"root/tree/treeproblem tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The tests should be translated into CMake code and their corectness then verified.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8919
https://github.com/root-project/root/issues/8920:21,deployability,fail,fail,21,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:70,deployability,log,logs,70,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:218,integrability,translat,translated,218,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:218,interoperability,translat,translated,218,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:21,reliability,fail,fail,21,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:15,safety,test,tests,15,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:70,safety,log,logs,70,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:80,safety,test,test,80,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:194,safety,test,tests,194,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:265,safety,test,tested,265,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:70,security,log,logs,70,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:15,testability,test,tests,15,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:70,testability,log,logs,70,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:80,testability,test,test,80,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:194,testability,test,tests,194,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8920:265,testability,test,tested,265,"root/treeproxy tests fail with ASAN enabled; According to the console logs, the test crashed on execute due to bad linkage to asan functions. . ### How it could be improved. The large number of tests present should be translated to CMake and then their correctness tested.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8920
https://github.com/root-project/root/issues/8921:147,availability,error,errors,147,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:19,deployability,fail,fail,19,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:68,deployability,log,logs,68,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:147,performance,error,errors,147,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:19,reliability,fail,fail,19,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:13,safety,test,tests,13,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:68,safety,log,logs,68,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:77,safety,test,tests,77,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:147,safety,error,errors,147,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:195,safety,test,tests,195,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:68,security,log,logs,68,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:13,testability,test,tests,13,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:68,testability,log,logs,68,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:77,testability,test,tests,77,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:195,testability,test,tests,195,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8921:147,usability,error,errors,147,"root/io/cint tests fail with ASAN enabled; According to the console logs the tests did not execute successfully, partly because of dynamic linking errors with libAsan. . Moreover, a lot of these tests seem to be old and abandonned due to the deprecation of `cint`. Any suggestions about what to do next? @bellenot @pcanal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8921
https://github.com/root-project/root/issues/8922:103,availability,failur,failure,103,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:25,deployability,fail,fail,25,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:74,deployability,log,logs,74,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:103,deployability,fail,failure,103,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:224,energy efficiency,core,corectness,224,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:146,integrability,translat,translated,146,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:146,interoperability,translat,translated,146,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:103,performance,failur,failure,103,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:25,reliability,fail,fail,25,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:103,reliability,fail,failure,103,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:20,safety,test,test,20,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:74,safety,log,logs,74,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:124,safety,test,tests,124,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:213,safety,test,tested,213,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:74,security,log,logs,74,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:20,testability,test,test,20,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:74,testability,log,logs,74,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:124,testability,test,tests,124,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8922:213,testability,test,tested,213,"root/io/newClassDef test fail with ASAN enabled; According to the console logs, this looks like a real failure. However the tests should first be translated into CMake so that they work with ASAN enabled and then tested for corectness.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8922
https://github.com/root-project/root/issues/8923:453,availability,Operat,Operating,453,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:21,deployability,depend,dependency,21,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:124,deployability,depend,dependency,124,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:208,deployability,VERSION,VERSION,208,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:428,deployability,version,version,428,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:21,integrability,depend,dependency,21,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:124,integrability,depend,dependency,124,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:208,integrability,VERSION,VERSION,208,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:428,integrability,version,version,428,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:21,modifiability,depend,dependency,21,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:124,modifiability,depend,dependency,124,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:208,modifiability,VERSION,VERSION,208,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:428,modifiability,version,version,428,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:21,safety,depend,dependency,21,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:124,safety,depend,dependency,124,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:231,safety,Test,Test,231,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:21,testability,depend,dependency,21,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:124,testability,depend,dependency,124,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/issues/8923:231,testability,Test,Test,231,Allow to use root as dependency using `FetchContent`; ### Explain what you would like to see improved. Allow to use root as dependency using `FetchContent`. ### To Reproduce. ```cmake. cmake_minimum_required(VERSION 3.16). project(Test). include(FetchContent). FetchContent_Declare(. root. GIT_REPOSITORY https://github.com/root-project/root.git. GIT_TAG latest-stable. ). FetchContent_MakeAvailable(root). ```. ### Setup. ROOT version : latest-stable. Operating system : Linux. How you obtained ROOT : github.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8923
https://github.com/root-project/root/pull/8924:47,deployability,updat,update,47,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8924:291,deployability,observ,observed,291,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8924:1,energy efficiency,core,core,1,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8924:191,energy efficiency,optim,optimization,191,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8924:78,performance,lock,lock,78,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8924:191,performance,optimiz,optimization,191,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8924:47,safety,updat,update,47,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8924:47,security,updat,update,47,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8924:78,security,lock,lock,78,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8924:291,testability,observ,observed,291,"[core] TDirectory::RegisterGDirectory must not update other TDirectoy without lock; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8924
https://github.com/root-project/root/pull/8925:14,usability,support,support,14,Add rootcling support for `-isystem`; This fixes warnings emitted by rootcling stemming from external libraries. The difficult part is that `-isystem /usr/include` causes havoc and needs to be removed.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8925
https://github.com/root-project/root/pull/8926:87,safety,avoid,avoid,87,"[RF][PyROOT] Use raw strings for docstrings in RooFit pythonization mirror classes and avoid mutating the docstring of an instancemethod in Python 2; This PR fixes two bugs that can arise in the RooFit pythonizations. ** [RF] Turn docstrings in RooFit pythonizations into raw strings **. Fixes the `SyntaxError: invalid escape sequence \c` that arises when the. `\code` command is used in the doxygen code. Closes GitHub issue #8902. ** RF] Fix in pythonize_roofit_class for use with Python 2 **. The docstring of an instancemethod can't be mutated in Python 2, so the. underlying function has to be obtained first via the `__func__`. attribute. The original warning:. ```. AttributeError: attribute '__doc__' of 'instancemethod' objects is not writable. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8926
https://github.com/root-project/root/pull/8926:370,usability,command,command,370,"[RF][PyROOT] Use raw strings for docstrings in RooFit pythonization mirror classes and avoid mutating the docstring of an instancemethod in Python 2; This PR fixes two bugs that can arise in the RooFit pythonizations. ** [RF] Turn docstrings in RooFit pythonizations into raw strings **. Fixes the `SyntaxError: invalid escape sequence \c` that arises when the. `\code` command is used in the doxygen code. Closes GitHub issue #8902. ** RF] Fix in pythonize_roofit_class for use with Python 2 **. The docstring of an instancemethod can't be mutated in Python 2, so the. underlying function has to be obtained first via the `__func__`. attribute. The original warning:. ```. AttributeError: attribute '__doc__' of 'instancemethod' objects is not writable. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8926
https://github.com/root-project/root/pull/8926:407,usability,Close,Closes,407,"[RF][PyROOT] Use raw strings for docstrings in RooFit pythonization mirror classes and avoid mutating the docstring of an instancemethod in Python 2; This PR fixes two bugs that can arise in the RooFit pythonizations. ** [RF] Turn docstrings in RooFit pythonizations into raw strings **. Fixes the `SyntaxError: invalid escape sequence \c` that arises when the. `\code` command is used in the doxygen code. Closes GitHub issue #8902. ** RF] Fix in pythonize_roofit_class for use with Python 2 **. The docstring of an instancemethod can't be mutated in Python 2, so the. underlying function has to be obtained first via the `__func__`. attribute. The original warning:. ```. AttributeError: attribute '__doc__' of 'instancemethod' objects is not writable. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8926
https://github.com/root-project/root/pull/8927:0,deployability,Updat,Updates,0,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:54,deployability,releas,release,54,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1646,energy efficiency,model,model,1646,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1665,energy efficiency,model,model,1665,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1721,energy efficiency,model,model,1721,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1769,energy efficiency,model,model,1769,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1824,energy efficiency,model,model,1824,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:752,integrability,compon,component,752,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:832,integrability,compon,component,832,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1104,integrability,compon,component,1104,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1305,integrability,event,events,1305,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1407,integrability,event,events,1407,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:752,interoperability,compon,component,752,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:832,interoperability,compon,component,832,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1104,interoperability,compon,component,1104,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:752,modifiability,compon,component,752,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:832,modifiability,compon,component,832,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1104,modifiability,compon,component,1104,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1490,modifiability,exten,extended,1490,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1582,modifiability,exten,extended,1582,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1844,modifiability,Exten,Extended,1844,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:0,safety,Updat,Updates,0,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:0,security,Updat,Updates,0,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:745,security,Sign,Signal,745,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:825,security,Sign,Signal,825,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1119,security,sign,signal,1119,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1179,security,Sign,Signal,1179,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1228,security,sign,signalRange,1228,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1298,security,sign,signal,1298,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1315,security,sign,signalRange,1315,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1417,security,sign,signalRange,1417,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1499,security,sign,signal,1499,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1524,security,sign,signalRange,1524,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1620,security,sign,signalRange,1620,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1646,security,model,model,1646,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1665,security,model,model,1665,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1721,security,model,model,1721,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1769,security,model,model,1769,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:1824,security,model,model,1824,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8927:127,usability,experien,experience,127,"Updates to RooFit tutorials necessary before the next release #8808; Hi! I am trying to start making some contributions to get experience. I tried converting the first file in C++, below:. ```c++. #include ""RooRealVar.h"". #include ""RooGaussian.h"". #include ""RooChebychev.h"". #include ""RooAddPdf.h"". #include ""RooExtendPdf.h"". #include ""RooArgSet.h"". #include ""RooLinkedList.h"". #include ""RooDataSet.h"". #include ""RooFitResult.h"". void rf204_extrangefit(). {. RooRealVar x = RooRealVar(""x"", ""x"", 0, 10);. RooRealVar mean = RooRealVar(""mean"", ""mean of gaussians"", 5);. RooRealVar sigma1 = RooRealVar(""sigma1"", ""width of gaussians"", 0.5);. RooRealVar sigma2 = RooRealVar(""sigma2"", ""width of gaussians"", 1);. RooGaussian sig1 = RooGaussian(""sig1"", ""Signal component 1"", x, mean, sigma1);. RooGaussian sig2 = RooGaussian(""sig2"", ""Signal component 2"", x, mean, sigma2);. RooRealVar a0 = RooRealVar(""a0"", ""a0"", 0.5, 0.0, 1.0);. RooRealVar a1 = RooRealVar(""a1"", ""a1"", -0.2, 0.0, 1.0);. RooChebychev bkg = RooChebychev(""bkg"", ""Background"", x, {a0, a1});. RooRealVar sig1frac = RooRealVar(""sig1frac"", ""fraction of component 1 in signal"", 0.8, 0.0, 1.0);. RooAddPdf sig = RooAddPdf(""sig"", ""Signal"", {sig1, sig2}, {sig1frac});. x.setRange(""signalRange"", 4, 6);. RooRealVar nsig = RooRealVar(""nsig"", ""number of signal events in signalRange"", 500, 0.0, 10000);. RooRealVar nbkg = RooRealVar(""nbkg"", ""number of background events in signalRange"", 500, 0, 10000);. RooExtendPdf esig = RooExtendPdf(""esig"", ""extended signal pdf"", sig, nsig, ""signalRange"");. RooExtendPdf ebkg = RooExtendPdf(""ebkg"", ""extended background pdf"", bkg, nbkg, ""signalRange"");. RooAddPdf model = RooAddPdf(""model"", ""(g1+g2)+a"", {ebkg, esig});. RooDataSet* data = model.generate(RooArgSet(x), 1000);. //auto r = model.fitTo(*data,RooLinkedList());. RooFitResult* r = model.fitTo(*data,{""Extended(true)""},{""Save(true)""});. //some reason this isn't working... //r->Print();. }. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8927
https://github.com/root-project/root/pull/8928:136,deployability,updat,updated,136,T dir register g directory oldvalue 624; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8928
https://github.com/root-project/root/pull/8928:106,safety,test,tested,106,T dir register g directory oldvalue 624; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8928
https://github.com/root-project/root/pull/8928:136,safety,updat,updated,136,T dir register g directory oldvalue 624; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8928
https://github.com/root-project/root/pull/8928:136,security,updat,updated,136,T dir register g directory oldvalue 624; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8928
https://github.com/root-project/root/pull/8928:106,testability,test,tested,106,T dir register g directory oldvalue 624; # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8928
https://github.com/root-project/root/pull/8929:53,deployability,updat,update,53,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:299,deployability,observ,observed,299,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:483,deployability,updat,updated,483,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:7,energy efficiency,core,core,7,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:199,energy efficiency,optim,optimization,199,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:85,performance,lock,lock,85,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:199,performance,optimiz,optimization,199,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:53,safety,updat,update,53,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:453,safety,test,tested,453,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:483,safety,updat,updated,483,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:53,security,updat,update,53,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:85,security,lock,lock,85,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:483,security,updat,updated,483,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:299,testability,observ,observed,299,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8929:453,testability,test,tested,453,"6-24: [core] TDirectory::RegisterGDirectory must not update other TDirectory without lock:; As we cannot even know whether the other TDirectory has been deleted in the meantime, we have to. skip the optimization of erasing globalptr from the list of the oldvalue. This is expected to fix MT crashes observed by Alice. (cherry picked from commit 79a669bb1cd0ccd8bcaeb6c8f6b09c5ced761ac7). # This Pull request:. ## Changes or fixes:. ## Checklist:. - [ ] tested changes locally. - [ ] updated the docs (if necessary). This PR fixes # .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8929
https://github.com/root-project/root/pull/8930:4,deployability,depend,dependency,4,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:71,deployability,depend,depend,71,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:295,deployability,build,building,295,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:38,energy efficiency,core,core,38,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:128,energy efficiency,model,model,128,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:4,integrability,depend,dependency,4,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:71,integrability,depend,depend,71,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:160,interoperability,format,format,160,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:4,modifiability,depend,dependency,4,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:71,modifiability,depend,depend,71,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:62,reliability,doe,does,62,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:4,safety,depend,dependency,4,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:71,safety,depend,depend,71,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:128,security,model,model,128,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:4,testability,depend,dependency,4,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/pull/8930:71,testability,depend,depend,71,"Fix dependency of pymva on sofie; The core part of tmva/sofie does not depend on protobuffer and it is used in pymva to parse a model from Keras to Tmva::Sofie format. . It is now always built as tmva, while only sofie_parser is built when protobuf is found. This PR fixes the problem seed when building pymva when protobuf is not found",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8930
https://github.com/root-project/root/issues/8931:2548,availability,operat,operator,2548,"1\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize. entry=0x7ff4299869ac, tgt=tgt. entry=0x7ff3c94c924f ""ZL\b\177\272"", irep=irep. entry=0x7ff4299869a8, compressionAlgorithm=ROOT::RCompressionSetting::EAlgorithm::kZLIB) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:79. #6 0x00007ff44949256c in TBasket::WriteBuffer (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBasket.cxx:1245. #7 0x00007ff4494a0f3d in operator() (__closure=<synthetic pointer>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3134. #8 TBranch::WriteBasketImpl (this=0x7ff42547e5f0, basket=0x7ff4253b6a90, where=7, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3189. #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923. #10 TBranch::FillImpl (this=this. entry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6098,availability,State,StateMachine,6098,"s_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6424,availability,State,StateMachine,6424,"000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6698,availability,State,StateMachine,6698,":steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6879,availability,State,StateMachine,6879,"chain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:8096,availability,operat,operator,8096,"c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:8464,availability,operat,operator,8464,"rf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10203,availability,operat,operator,10203,"re_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_De",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12858,availability,operat,operator,12858,":unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729. #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:15014,availability,operat,operator,15014,", FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::operator()() (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #28 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> > >::_M_run() (this=0x3ee24f0) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:215. #29 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x3ee24f0) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #30 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #31 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 4 (Thread 0x7ff443aa4700 (LWP 25366) ""ZMQbg/IO/0""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in z",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18225,availability,State,StateQueue,18225,"/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18398,availability,State,StateQueue,18398,"hrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23400,availability,State,State,23400," #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23409,availability,operat,operator,23409,"0000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23430,availability,State,State,23430,":devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23708,availability,State,State,23708,"es::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23733,availability,State,State,23733,"ventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23801,availability,State,State,23801,"rkspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24031,availability,State,State,24031,"a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::siz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24039,availability,operat,operator,24039,"2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24342,availability,State,State,24342,"22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24365,availability,State,State,24365,"n std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::sig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24405,availability,State,State,24405,":operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24486,availability,State,State,24486,">) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24566,availability,State,State,24566,"2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24871,availability,operat,operator,24871,"_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24914,availability,State,State,24914,"cal8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24933,availability,State,State,24933,"function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24978,availability,State,State,24978,"07ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25009,availability,State,State,25009,"n1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25321,availability,State,State,25321,"n<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25329,availability,operat,operator,25329,"air::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25492,availability,slo,slot,25492,"const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25513,availability,State,State,25513,"if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::sign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25553,availability,State,State,25553,"fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25744,availability,slo,slot,25744,"detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25765,availability,State,State,25765,"nvoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25805,availability,State,State,25805,"ail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26173,availability,State,State,26173,"t/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26353,availability,slo,slot,26353,"tr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::deta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26374,availability,State,State,26374,"tail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26414,availability,State,State,26414,"ignals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26588,availability,slo,slot,26588,">(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26609,availability,State,State,26609,"ost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26649,availability,State,State,26649,"td::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27053,availability,State,State,27053,"l::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27233,availability,slo,slot,27233,":detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27254,availability,State,State,27254,"dy<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27294,availability,State,State,27294,"ot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27468,availability,slo,slot,27468,":detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27489,availability,State,State,27489,"dy<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27529,availability,State,State,27529,"ot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27707,availability,State,State,27707,"is=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27887,availability,slo,slot,27887,"core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27908,availability,State,State,27908,"ce<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27948,availability,State,State,27948,"erator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28122,availability,slo,slot,28122,"connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28143,availability,State,State,28143,"air<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28183,availability,State,State,28183,"roup, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28545,availability,State,State,28545,"ignals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28725,availability,slo,slot,28725,"terator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28746,availability,State,State,28746,"ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28786,availability,State,State,28786,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28960,availability,slo,slot,28960,"st::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28981,availability,State,State,28981," >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29021,availability,State,State,29021,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29204,availability,operat,operator,29204,"2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29411,availability,operat,operator,29411,"gnals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29561,availability,State,State,29561,"iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29741,availability,slo,slot,29741,"q::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29762,availability,State,State,29762,"tion<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29802,availability,State,State,29802,"ignals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::varia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29976,availability,slo,slot,29976,"q::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29997,availability,State,State,29997,"tion<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30037,availability,State,State,30037,"ignals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30215,availability,State,State,30215,"nst (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30395,availability,slo,slot,30395,"_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30416,availability,State,State,30416,"()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30456,availability,State,State,30456,"erator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30630,availability,slo,slot,30630,"connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30651,availability,State,State,30651,"air<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30691,availability,State,State,30691,"roup, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30868,availability,State,State,30868,"ection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31048,availability,slo,slot,31048,"ost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31069,availability,State,State,31069,"> >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31109,availability,State,State,31109,"terator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::det",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31283,availability,slo,slot,31283,":connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31304,availability,State,State,31304,"pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31344,availability,State,State,31344,"group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31617,availability,operat,operator,31617,"ignals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31811,availability,State,State,31811,"invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31991,availability,slo,slot,31991,"t_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32012,availability,State,State,32012,"ptional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32052,availability,State,State,32052,"id (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32226,availability,slo,slot,32226,"t_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32247,availability,State,State,32247,"ptional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32287,availability,State,State,32287,"id (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32510,availability,State,State,32510,"include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32690,availability,slo,slot,32690,"ail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32711,availability,State,State,32711,"r_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32751,availability,State,State,32751,"ot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32925,availability,slo,slot,32925,"tail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32946,availability,State,State,32946," boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32986,availability,State,State,32986,"::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33163,availability,State,State,33163,"::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::St",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33343,availability,slo,slot,33343,"tional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33364,availability,State,State,33364,">&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33404,availability,State,State,33404,"terator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33578,availability,slo,slot,33578,":connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33599,availability,State,State,33599,"pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33639,availability,State,State,33639,"group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33927,availability,State,State,33927,"void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::St",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34032,availability,State,State,34032,"als2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34109,availability,State,State,34109,"oker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34143,availability,operat,operator,34143,"type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34164,availability,State,State,34164,"e>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34242,availability,State,State,34242,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34450,availability,State,State,34450,"gnals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34555,availability,State,State,34555,">, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34632,availability,State,State,34632,"mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34666,availability,operat,operator,34666,"ex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34687,availability,State,State,34687,".., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34718,availability,State,State,34718,"is=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34912,availability,state,state,34912," (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34928,availability,State,State,34928,"e), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ====",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35036,availability,State,StateMachine,35036,"oost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35204,availability,State,StateMachine,35204,"d out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35262,availability,State,StateMachine,35262,"liperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35381,availability,State,StateMachine,35381," 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. =============================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40134,availability,State,State,40134," #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40143,availability,operat,operator,40143,"0000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40164,availability,State,State,40164,":devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40442,availability,State,State,40442,"es::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40467,availability,State,State,40467,"ventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40535,availability,State,State,40535,"rkspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40765,availability,State,State,40765,"a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::siz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40773,availability,operat,operator,40773,"2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41076,availability,State,State,41076,"22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41099,availability,State,State,41099,"n std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::sig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41139,availability,State,State,41139,":operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41220,availability,State,State,41220,">) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41300,availability,State,State,41300,"2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41605,availability,operat,operator,41605,"_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41648,availability,State,State,41648,"cal8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41667,availability,State,State,41667,"function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41712,availability,State,State,41712,"07ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41743,availability,State,State,41743,"n1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42055,availability,State,State,42055,"n<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42063,availability,operat,operator,42063,"air::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42226,availability,slo,slot,42226,"const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42247,availability,State,State,42247,"if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::sign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42287,availability,State,State,42287,"fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42478,availability,slo,slot,42478,"detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42499,availability,State,State,42499,"nvoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42539,availability,State,State,42539,"ail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42907,availability,State,State,42907,"t/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43087,availability,slo,slot,43087,"tr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::deta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43108,availability,State,State,43108,"tail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43148,availability,State,State,43148,"ignals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43322,availability,slo,slot,43322,">(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43343,availability,State,State,43343,"ost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43383,availability,State,State,43383,"td::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43787,availability,State,State,43787,"l::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43967,availability,slo,slot,43967,":detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43988,availability,State,State,43988,"dy<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44028,availability,State,State,44028,"ot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44202,availability,slo,slot,44202,":detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44223,availability,State,State,44223,"dy<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44263,availability,State,State,44263,"ot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44441,availability,State,State,44441,"is=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44621,availability,slo,slot,44621,"core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44642,availability,State,State,44642,"ce<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44682,availability,State,State,44682,"erator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44856,availability,slo,slot,44856,"connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44877,availability,State,State,44877,"air<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44917,availability,State,State,44917,"roup, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45279,availability,State,State,45279,"ignals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45459,availability,slo,slot,45459,"terator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45480,availability,State,State,45480,"ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45520,availability,State,State,45520,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45694,availability,slo,slot,45694,"st::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45715,availability,State,State,45715," >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45755,availability,State,State,45755,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45938,availability,operat,operator,45938,"2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46145,availability,operat,operator,46145,"gnals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46295,availability,State,State,46295,"iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46475,availability,slo,slot,46475,"q::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46496,availability,State,State,46496,"tion<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46536,availability,State,State,46536,"ignals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::varia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46710,availability,slo,slot,46710,"q::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46731,availability,State,State,46731,"tion<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46771,availability,State,State,46771,"ignals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46949,availability,State,State,46949,"nst (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47129,availability,slo,slot,47129,"_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47150,availability,State,State,47150,"()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47190,availability,State,State,47190,"erator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47364,availability,slo,slot,47364,"connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47385,availability,State,State,47385,"air<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47425,availability,State,State,47425,"roup, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47602,availability,State,State,47602,"ection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47782,availability,slo,slot,47782,"ost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47803,availability,State,State,47803,"> >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47843,availability,State,State,47843,"terator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::det",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48017,availability,slo,slot,48017,":connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48038,availability,State,State,48038,"pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48078,availability,State,State,48078,"group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48351,availability,operat,operator,48351,"ignals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48545,availability,State,State,48545,"invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48725,availability,slo,slot,48725,"t_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48746,availability,State,State,48746,"ptional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48786,availability,State,State,48786,"id (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48960,availability,slo,slot,48960,"t_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48981,availability,State,State,48981,"ptional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49021,availability,State,State,49021,"id (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49244,availability,State,State,49244,"include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49424,availability,slo,slot,49424,"ail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49445,availability,State,State,49445,"r_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49485,availability,State,State,49485,"ot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49659,availability,slo,slot,49659,"tail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49680,availability,State,State,49680," boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49720,availability,State,State,49720,"::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49897,availability,State,State,49897,"::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::St",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50077,availability,slo,slot,50077,"tional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50098,availability,State,State,50098,">&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50138,availability,State,State,50138,"terator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50312,availability,slo,slot,50312,":connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50333,availability,State,State,50333,"pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50373,availability,State,State,50373,"group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50661,availability,State,State,50661,"void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::St",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50766,availability,State,State,50766,"als2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50843,availability,State,State,50843,"oker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50877,availability,operat,operator,50877,"type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50898,availability,State,State,50898,"e>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50976,availability,State,State,50976,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51184,availability,State,State,51184,"gnals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51289,availability,State,State,51289,">, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51366,availability,State,State,51366,"mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51400,availability,operat,operator,51400,"ex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51421,availability,State,State,51421,".., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51452,availability,State,State,51452,"is=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51646,availability,state,state,51646," (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51662,availability,State,State,51662,"e), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ====",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51770,availability,State,StateMachine,51770,"oost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51938,availability,State,StateMachine,51938,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51996,availability,State,StateMachine,51996,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52115,availability,State,StateMachine,52115,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:267,deployability,stack,stack,267,"`TDirectory::RegisterGDirectory` is MT unsafe; ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5233,deployability,Toolchain,Toolchain,5233,"=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5573,deployability,Toolchain,Toolchain,5573,"pace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/alipe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5881,deployability,Toolchain,Toolchain,5881,"o.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6271,deployability,Toolchain,Toolchain,6271,"/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6610,deployability,Toolchain,Toolchain,6610,"+/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7060,deployability,Toolchain,Toolchain,7060,"atio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7140,deployability,Log,LogSocketRates,7140,"<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7500,deployability,Toolchain,Toolchain,7500,"me=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7705,deployability,Toolchain,Toolchain,7705,"::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7952,deployability,Toolchain,Toolchain,7952,"::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:8184,deployability,Toolchain,Toolchain,8184,"aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Del",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:8551,deployability,Toolchain,Toolchain,8551,"invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:9012,deployability,Toolchain,Toolchain,9012,"2 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:9475,deployability,Toolchain,Toolchain,9475,"=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Resul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:9988,deployability,Toolchain,Toolchain,9988,"sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10299,deployability,Toolchain,Toolchain,10299,"ult_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__fut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10663,deployability,Toolchain,Toolchain,10663,", std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10942,deployability,Toolchain,Toolchain,10942,"erf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=. 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Dele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12217,deployability,Toolchain,Toolchain,12217,"ol*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=. 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729. #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<vo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12557,deployability,Toolchain,Toolchain,12557,"bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=. 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729. #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/alipe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12954,deployability,Toolchain,Toolchain,12954,"ool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729. #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__future_base::_Async_state_imp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:13602,deployability,Toolchain,Toolchain,13602,"/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:14224,deployability,Toolchain,Toolchain,14224,"rMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::operator()() (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #28 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:14677,deployability,Toolchain,Toolchain,14677,"invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::operator()() (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #28 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> > >::_M_run() (this=0x3ee24f0) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:215. #29 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x3ee24f0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:15098,deployability,Toolchain,Toolchain,15098,"airMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::operator()() (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #28 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> > >::_M_run() (this=0x3ee24f0) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:215. #29 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x3ee24f0) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #30 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #31 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 4 (Thread 0x7ff443aa4700 (LWP 25366) ""ZMQbg/IO/0""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:15542,deployability,Toolchain,Toolchain,15542,")::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::operator()() (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #28 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> > >::_M_run() (this=0x3ee24f0) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:215. #29 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x3ee24f0) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #30 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #31 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 4 (Thread 0x7ff443aa4700 (LWP 25366) ""ZMQbg/IO/0""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7ff4442a5700 (LWP 25365) ""ZMQbg/Reaper""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::ep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:17250,deployability,Toolchain,Toolchain,17250,"mq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7ff4442a5700 (LWP 25365) ""ZMQbg/Reaper""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:17584,deployability,Toolchain,Toolchain,17584,"f_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:17886,deployability,Toolchain,Toolchain,17886,"from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff44",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18137,deployability,Toolchain,Toolchain,18137,"444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:19317,deployability,Stack,StackTrace,19317,"at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20008,deployability,Toolchain,Toolchain,20008,"in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20409,deployability,Toolchain,Toolchain,20409,"core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20840,deployability,Toolchain,Toolchain,20840," __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23546,deployability,Toolchain,Toolchain,23546,".., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36249,deployability,stack,stack,36249,"fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36742,deployability,Toolchain,Toolchain,36742,"x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37143,deployability,Toolchain,Toolchain,37143,"it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37574,deployability,Toolchain,Toolchain,37574," __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40280,deployability,Toolchain,Toolchain,40280,".., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:976,energy efficiency,optim,optimized,976,"`TDirectory::RegisterGDirectory` is MT unsafe; ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:1061,energy efficiency,core,core,1061,"ed regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:1138,energy efficiency,optim,optimized,1138,"Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize. entry=0x7ff4299869ac, tgt=tgt. entry=0x7ff3c94c924f """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:1369,energy efficiency,core,core,1369,"ad 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize. entry=0x7ff4299869ac, tgt=tgt. entry=0x7ff3c94c924f ""ZL\b\177\272"", irep=irep. entry=0x7ff4299869a8, compressionAlgorithm=ROOT::RCompressionSetting::EAlgorithm::kZLIB) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:79. #6 0x00007ff449492",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:2327,energy efficiency,core,core,2327,"space/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize. entry=0x7ff4299869ac, tgt=tgt. entry=0x7ff3c94c924f ""ZL\b\177\272"", irep=irep. entry=0x7ff4299869a8, compressionAlgorithm=ROOT::RCompressionSetting::EAlgorithm::kZLIB) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:79. #6 0x00007ff44949256c in TBasket::WriteBuffer (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBasket.cxx:1245. #7 0x00007ff4494a0f3d in operator() (__closure=<synthetic pointer>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3134. #8 TBranch::WriteBasketImpl (this=0x7ff42547e5f0, basket=0x7ff4253b6a90, where=7, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3189. #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923. #10 TBranch::FillImpl (this=this. entry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:2406,energy efficiency,optim,optimized,2406,"leAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize. entry=0x7ff4299869ac, tgt=tgt. entry=0x7ff3c94c924f ""ZL\b\177\272"", irep=irep. entry=0x7ff4299869a8, compressionAlgorithm=ROOT::RCompressionSetting::EAlgorithm::kZLIB) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:79. #6 0x00007ff44949256c in TBasket::WriteBuffer (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBasket.cxx:1245. #7 0x00007ff4494a0f3d in operator() (__closure=<synthetic pointer>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3134. #8 TBranch::WriteBasketImpl (this=0x7ff42547e5f0, basket=0x7ff4253b6a90, where=7, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3189. #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923. #10 TBranch::FillImpl (this=this. entry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:3898,energy efficiency,alloc,allocator,3898,"494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923. #10 TBranch::FillImpl (this=this. entry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4532,energy efficiency,optim,optimized,4532,"0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5139,energy efficiency,optim,optimized,5139,"r.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5163,energy efficiency,optim,optimized,5163,"f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5503,energy efficiency,optim,optimized,5503,"his=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5811,energy efficiency,optim,optimized,5811,"libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6201,energy efficiency,optim,optimized,6201,"rkspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6540,energy efficiency,optim,optimized,6540,"orkspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7367,energy efficiency,optim,optimized,7367,"::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_De",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7388,energy efficiency,optim,optimized,7388,"std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7409,energy efficiency,optim,optimized,7409,"fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7430,energy efficiency,optim,optimized,7430,"e::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7635,energy efficiency,optim,optimized,7635,"3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7882,energy efficiency,optim,optimized,7882,"hine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:8114,energy efficiency,optim,optimized,8114,"22. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10229,energy efficiency,optim,optimized,10229,"unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10567,energy efficiency,optim,optimized,10567,"std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10854,energy efficiency,optim,optimized,10854,"airMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=. 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12884,energy efficiency,optim,optimized,12884,"ase::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729. #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:17162,energy efficiency,optim,optimized,17162,"ine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7ff4442a5700 (LWP 25365) ""ZMQbg/Reaper""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:19164,energy efficiency,optim,optimized,19164,"include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:19265,energy efficiency,core,core,19265,"l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_I",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:19414,energy efficiency,core,core,19414,"6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolcha",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:19621,energy efficiency,core,core,19621,"f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<T",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:19804,energy efficiency,alloc,allocator,19804," #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20205,energy efficiency,alloc,allocator,20205,"rf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20600,energy efficiency,alloc,allocator,20600,"-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20722,energy efficiency,Current,CurrentDirectory,20722,"r<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20742,energy efficiency,current,currentDirectory,20742,"tory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20976,energy efficiency,optim,optimized,20976,"rkspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21061,energy efficiency,core,core,21061,"/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21146,energy efficiency,optim,optimized,21146,"tory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21247,energy efficiency,core,core,21247,"gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21325,energy efficiency,optim,optimized,21325,"__last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21410,energy efficiency,core,core,21410,"lchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21512,energy efficiency,optim,optimized,21512,"l_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21970,energy efficiency,optim,optimized,21970,"<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22165,energy efficiency,optim,optimized,22165,"dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22187,energy efficiency,optim,optimized,22187,"rf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22211,energy efficiency,optim,optimized,22211,"SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22235,energy efficiency,optim,optimized,22235,"-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22261,energy efficiency,optim,optimized,22261,"ctory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/ali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22291,energy efficiency,optim,optimized,22291,":cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/Fair",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22529,energy efficiency,optim,optimized,22529,"me/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22560,energy efficiency,optim,optimized,22560,"/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23454,energy efficiency,optim,optimized,23454,"lBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23476,energy efficiency,optim,optimized,23476,"ventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23835,energy efficiency,optim,optimized,23835,"tMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24055,energy efficiency,optim,optimized,24055,"Merger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24077,energy efficiency,optim,optimized,24077," (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24636,energy efficiency,optim,optimized,24636,"function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25077,energy efficiency,optim,optimized,25077,"ized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31405,energy efficiency,optim,optimized,31405,"::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33725,energy efficiency,optim,optimized,33725,"tion<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Runni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34178,energy efficiency,optim,optimized,34178,"terator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34202,energy efficiency,optim,optimized,34202,"r<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/Sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35466,energy efficiency,optim,optimized,35466,"s2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35780,energy efficiency,optim,optimized,35780,"sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35802,energy efficiency,optim,optimized,35802,"1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36538,energy efficiency,alloc,allocator,36538,"v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36939,energy efficiency,alloc,allocator,36939,"==========================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37334,energy efficiency,alloc,allocator,37334,"fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/sr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37456,energy efficiency,Current,CurrentDirectory,37456,"r<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /h",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37476,energy efficiency,current,currentDirectory,37476,"tory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37710,energy efficiency,optim,optimized,37710,"rkspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37795,energy efficiency,core,core,37795,"/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/R",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37880,energy efficiency,optim,optimized,37880,"tory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37981,energy efficiency,core,core,37981,"gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38059,energy efficiency,optim,optimized,38059,"__last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38144,energy efficiency,core,core,38144,"lchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38246,energy efficiency,optim,optimized,38246,"l_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38704,energy efficiency,optim,optimized,38704,"<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38899,energy efficiency,optim,optimized,38899,"dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38921,energy efficiency,optim,optimized,38921,"rf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38945,energy efficiency,optim,optimized,38945,"SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38969,energy efficiency,optim,optimized,38969,"-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38995,energy efficiency,optim,optimized,38995,"ctory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/ali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39025,energy efficiency,optim,optimized,39025,":cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/Fair",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39263,energy efficiency,optim,optimized,39263,"me/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39294,energy efficiency,optim,optimized,39294,"/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40188,energy efficiency,optim,optimized,40188,"lBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40210,energy efficiency,optim,optimized,40210,"ventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40569,energy efficiency,optim,optimized,40569,"tMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40789,energy efficiency,optim,optimized,40789,"Merger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40811,energy efficiency,optim,optimized,40811," (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41370,energy efficiency,optim,optimized,41370,"function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41811,energy efficiency,optim,optimized,41811,"ized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48139,energy efficiency,optim,optimized,48139,"::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50459,energy efficiency,optim,optimized,50459,"tion<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Runni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50912,energy efficiency,optim,optimized,50912,"terator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50936,energy efficiency,optim,optimized,50936,"r<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/Sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52200,energy efficiency,optim,optimized,52200,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52514,energy efficiency,optim,optimized,52514,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52536,energy efficiency,optim,optimized,52536,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4025,integrability,sub,subevtsOrdered,4025,"-24-02/tree/tree/src/TBranch.cxx:923. #10 TBranch::FillImpl (this=this. entry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4308,integrability,sub,subevtsOrdered,4308,"0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/g",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4523,integrability,event,eventID,4523,"imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6098,integrability,State,StateMachine,6098,"s_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6424,integrability,State,StateMachine,6424,"000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6698,integrability,State,StateMachine,6698,":steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6879,integrability,State,StateMachine,6879,"chain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<opt",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18225,integrability,State,StateQueue,18225,"/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18398,integrability,State,StateQueue,18398,"hrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21913,integrability,buffer,buffer,21913," TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22477,integrability,Sub,SubEventInfo,22477,"e::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22520,integrability,event,eventID,22520,"t>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23400,integrability,State,State,23400," #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23430,integrability,State,State,23430,":devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23708,integrability,State,State,23708,"es::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23733,integrability,State,State,23733,"ventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23801,integrability,State,State,23801,"rkspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24031,integrability,State,State,24031,"a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::siz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24342,integrability,State,State,24342,"22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24365,integrability,State,State,24365,"n std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::sig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24405,integrability,State,State,24405,":operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24486,integrability,State,State,24486,">) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24566,integrability,State,State,24566,"2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24914,integrability,State,State,24914,"cal8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24933,integrability,State,State,24933,"function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24978,integrability,State,State,24978,"07ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25009,integrability,State,State,25009,"n1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25321,integrability,State,State,25321,"n<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25513,integrability,State,State,25513,"if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::sign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25553,integrability,State,State,25553,"fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25765,integrability,State,State,25765,"nvoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25805,integrability,State,State,25805,"ail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26173,integrability,State,State,26173,"t/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26374,integrability,State,State,26374,"tail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26414,integrability,State,State,26414,"ignals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26609,integrability,State,State,26609,"ost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26649,integrability,State,State,26649,"td::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27053,integrability,State,State,27053,"l::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27254,integrability,State,State,27254,"dy<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27294,integrability,State,State,27294,"ot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27489,integrability,State,State,27489,"dy<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27529,integrability,State,State,27529,"ot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27707,integrability,State,State,27707,"is=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27908,integrability,State,State,27908,"ce<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27948,integrability,State,State,27948,"erator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28143,integrability,State,State,28143,"air<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28183,integrability,State,State,28183,"roup, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28545,integrability,State,State,28545,"ignals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28746,integrability,State,State,28746,"ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28786,integrability,State,State,28786,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28981,integrability,State,State,28981," >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29021,integrability,State,State,29021,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29561,integrability,State,State,29561,"iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29762,integrability,State,State,29762,"tion<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29802,integrability,State,State,29802,"ignals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::varia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29997,integrability,State,State,29997,"tion<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30037,integrability,State,State,30037,"ignals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30215,integrability,State,State,30215,"nst (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30416,integrability,State,State,30416,"()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30456,integrability,State,State,30456,"erator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30651,integrability,State,State,30651,"air<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30691,integrability,State,State,30691,"roup, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30868,integrability,State,State,30868,"ection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31069,integrability,State,State,31069,"> >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31109,integrability,State,State,31109,"terator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::det",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31304,integrability,State,State,31304,"pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31344,integrability,State,State,31344,"group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31811,integrability,State,State,31811,"invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32012,integrability,State,State,32012,"ptional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32052,integrability,State,State,32052,"id (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32247,integrability,State,State,32247,"ptional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32287,integrability,State,State,32287,"id (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32510,integrability,State,State,32510,"include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32711,integrability,State,State,32711,"r_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32751,integrability,State,State,32751,"ot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32946,integrability,State,State,32946," boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32986,integrability,State,State,32986,"::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33163,integrability,State,State,33163,"::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::St",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33364,integrability,State,State,33364,">&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33404,integrability,State,State,33404,"terator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33599,integrability,State,State,33599,"pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33639,integrability,State,State,33639,"group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33927,integrability,State,State,33927,"void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::St",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34032,integrability,State,State,34032,"als2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34109,integrability,State,State,34109,"oker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34164,integrability,State,State,34164,"e>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34242,integrability,State,State,34242,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34450,integrability,State,State,34450,"gnals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34555,integrability,State,State,34555,">, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34632,integrability,State,State,34632,"mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34687,integrability,State,State,34687,".., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34718,integrability,State,State,34718,"is=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34912,integrability,state,state,34912," (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34928,integrability,State,State,34928,"e), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ====",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35036,integrability,State,StateMachine,35036,"oost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35204,integrability,State,StateMachine,35204,"d out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://ro",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35262,integrability,State,StateMachine,35262,"liperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35381,integrability,State,StateMachine,35381," 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. =============================",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36180,integrability,sub,submit,36180,".4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38647,integrability,buffer,buffer,38647," TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39211,integrability,Sub,SubEventInfo,39211,"e::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimiz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39254,integrability,event,eventID,39254,"t>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40134,integrability,State,State,40134," #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40164,integrability,State,State,40164,":devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40442,integrability,State,State,40442,"es::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40467,integrability,State,State,40467,"ventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40535,integrability,State,State,40535,"rkspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40765,integrability,State,State,40765,"a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::siz",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41076,integrability,State,State,41076,"22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41099,integrability,State,State,41099,"n std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::sig",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41139,integrability,State,State,41139,":operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41220,integrability,State,State,41220,">) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41300,integrability,State,State,41300,"2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41648,integrability,State,State,41648,"cal8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/al",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41667,integrability,State,State,41667,"function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41712,integrability,State,State,41712,"07ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41743,integrability,State,State,41743,"n1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42055,integrability,State,State,42055,"n<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optio",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42247,integrability,State,State,42247,"if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::sign",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42287,integrability,State,State,42287,"fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42499,integrability,State,State,42499,"nvoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42539,integrability,State,State,42539,"ail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42907,integrability,State,State,42907,"t/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43108,integrability,State,State,43108,"tail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43148,integrability,State,State,43148,"ignals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_me",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43343,integrability,State,State,43343,"ost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43383,integrability,State,State,43383,"td::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43787,integrability,State,State,43787,"l::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43988,integrability,State,State,43988,"dy<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44028,integrability,State,State,44028,"ot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44223,integrability,State,State,44223,"dy<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44263,integrability,State,State,44263,"ot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44441,integrability,State,State,44441,"is=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44642,integrability,State,State,44642,"ce<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44682,integrability,State,State,44682,"erator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44877,integrability,State,State,44877,"air<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44917,integrability,State,State,44917,"roup, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, lon",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45279,integrability,State,State,45279,"ignals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_typ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45480,integrability,State,State,45480,"ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45520,integrability,State,State,45520,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45715,integrability,State,State,45715," >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45755,integrability,State,State,45755,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<voi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46295,integrability,State,State,46295,"iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46496,integrability,State,State,46496,"tion<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_i",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46536,integrability,State,State,46536,"ignals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::varia",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46731,integrability,State,State,46731,"tion<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46771,integrability,State,State,46771,"ignals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46949,integrability,State,State,46949,"nst (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47150,integrability,State,State,47150,"()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47190,integrability,State,State,47190,"erator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47385,integrability,State,State,47385,"air<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47425,integrability,State,State,47425,"roup, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47602,integrability,State,State,47602,"ection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47803,integrability,State,State,47803,"> >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47843,integrability,State,State,47843,"terator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::det",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48038,integrability,State,State,48038,"pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48078,integrability,State,State,48078,"group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::opti",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48545,integrability,State,State,48545,"invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48746,integrability,State,State,48746,"ptional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48786,integrability,State,State,48786,"id (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_c",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48981,integrability,State,State,48981,"ptional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49021,integrability,State,State,49021,"id (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49244,integrability,State,State,49244,"include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49445,integrability,State,State,49445,"r_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49485,integrability,State,State,49485,"ot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49680,integrability,State,State,49680," boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49720,integrability,State,State,49720,"::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49897,integrability,State,State,49897,"::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::St",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50098,integrability,State,State,50098,">&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_t",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50138,integrability,State,State,50138,"terator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50333,integrability,State,State,50333,"pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50373,integrability,State,State,50373,"group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50661,integrability,State,State,50661,"void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::St",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50766,integrability,State,State,50766,"als2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50843,integrability,State,State,50843,"oker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. e",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50898,integrability,State,State,50898,"e>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/S",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50976,integrability,State,State,50976,"body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51184,integrability,State,State,51184,"gnals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51289,integrability,State,State,51289,">, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51366,integrability,State,State,51366,"mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51421,integrability,State,State,51421,".., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51452,integrability,State,State,51452,"is=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/D",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51646,integrability,state,state,51646," (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51662,integrability,State,State,51662,"e), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ====",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51770,integrability,State,StateMachine,51770,"oost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bu",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51938,integrability,State,StateMachine,51938,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51996,integrability,State,StateMachine,51996,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52115,integrability,State,StateMachine,52115,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52747,integrability,pub,publicly,52747,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18450,interoperability,plug,plugins,18450," > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18572,interoperability,plug,plugins,18572,"-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:976,performance,optimiz,optimized,976,"`TDirectory::RegisterGDirectory` is MT unsafe; ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:1138,performance,optimiz,optimized,1138,"Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize. entry=0x7ff4299869ac, tgt=tgt. entry=0x7ff3c94c924f """,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:2406,performance,optimiz,optimized,2406,"leAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232\300;\231H\300<\367\a\300=\350\252\300?"", <incomplete sequence \344>..., tgtsize=tgtsize. entry=0x7ff4299869ac, tgt=tgt. entry=0x7ff3c94c924f ""ZL\b\177\272"", irep=irep. entry=0x7ff4299869a8, compressionAlgorithm=ROOT::RCompressionSetting::EAlgorithm::kZLIB) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:79. #6 0x00007ff44949256c in TBasket::WriteBuffer (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBasket.cxx:1245. #7 0x00007ff4494a0f3d in operator() (__closure=<synthetic pointer>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3134. #8 TBranch::WriteBasketImpl (this=0x7ff42547e5f0, basket=0x7ff4253b6a90, where=7, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3189. #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923. #10 TBranch::FillImpl (this=this. entry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4532,performance,optimiz,optimized,4532,"0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5139,performance,optimiz,optimized,5139,"r.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) cons",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5163,performance,optimiz,optimized,5163,"f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5503,performance,optimiz,optimized,5503,"his=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5811,performance,optimiz,optimized,5811,"libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6201,performance,optimiz,optimized,6201,"rkspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6540,performance,optimiz,optimized,6540,"orkspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7367,performance,optimiz,optimized,7367,"::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_De",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7388,performance,optimiz,optimized,7388,"std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7409,performance,optimiz,optimized,7409,"fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7430,performance,optimiz,optimized,7430,"e::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7635,performance,optimiz,optimized,7635,"3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7882,performance,optimiz,optimized,7882,"hine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:8114,performance,optimiz,optimized,8114,"22. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10229,performance,optimiz,optimized,10229,"unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10567,performance,optimiz,optimized,10567,"std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), st",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10854,performance,optimiz,optimized,10854,"airMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=. 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<s",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12884,performance,optimiz,optimized,12884,"ase::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729. #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:17162,performance,optimiz,optimized,17162,"ine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7ff4442a5700 (LWP 25365) ""ZMQbg/Reaper""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:19164,performance,optimiz,optimized,19164,"include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20976,performance,optimiz,optimized,20976,"rkspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21146,performance,optimiz,optimized,21146,"tory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21325,performance,optimiz,optimized,21325,"__last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21512,performance,optimiz,optimized,21512,"l_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:21970,performance,optimiz,optimized,21970,"<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22165,performance,optimiz,optimized,22165,"dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22187,performance,optimiz,optimized,22187,"rf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22211,performance,optimiz,optimized,22211,"SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22235,performance,optimiz,optimized,22235,"-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22261,performance,optimiz,optimized,22261,"ctory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/ali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22291,performance,optimiz,optimized,22291,":cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/Fair",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22529,performance,optimiz,optimized,22529,"me/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:22560,performance,optimiz,optimized,22560,"/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23454,performance,optimiz,optimized,23454,"lBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23476,performance,optimiz,optimized,23476,"ventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23835,performance,optimiz,optimized,23835,"tMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24055,performance,optimiz,optimized,24055,"Merger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24077,performance,optimiz,optimized,24077," (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:24636,performance,optimiz,optimized,24636,"function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25077,performance,optimiz,optimized,25077,"ized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31405,performance,optimiz,optimized,31405,"::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33725,performance,optimiz,optimized,33725,"tion<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Runni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34178,performance,optimiz,optimized,34178,"terator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34202,performance,optimiz,optimized,34202,"r<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/Sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35466,performance,optimiz,optimized,35466,"s2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35780,performance,optimiz,optimized,35780,"sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:35802,performance,optimiz,optimized,35802,"1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefine",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37710,performance,optimiz,optimized,37710,"rkspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized o",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37880,performance,optimiz,optimized,37880,"tory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TM",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38059,performance,optimiz,optimized,38059,"__last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliper",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38246,performance,optimiz,optimized,38246,"l_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d64",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38704,performance,optimiz,optimized,38704,"<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38899,performance,optimiz,optimized,38899,"dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38921,performance,optimiz,optimized,38921,"rf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38945,performance,optimiz,optimized,38945,"SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38969,performance,optimiz,optimized,38969,"-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:38995,performance,optimiz,optimized,38995,"ctory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/ali",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39025,performance,optimiz,optimized,39025,":cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/Fair",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39263,performance,optimiz,optimized,39263,"me/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39294,performance,optimiz,optimized,39294,"/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in TMemFile::TMemFile (this=0x5dfd960, path=0x7ffe775d4450 ""memfile9"", buffer=0x0, size=-1, option=0x44c3c1 ""RECREATE"", ftitle=<optimized out>, compress=101, defBlockSize=0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:202. #16 0x00007ff448181e1c in TMemFile::TMemFile (this=<optimized out>, path=<optimized out>, option=<optimized out>, ftitle=<optimized out>, compress=<optimized out>, defBlockSize=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TMemFile.cxx:163. #17 0x0000000000439b45 in o2::devices::O2HitMerger::fillBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-a",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40188,performance,optimiz,optimized,40188,"lBranch<o2::data::SubEventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40210,performance,optimiz,optimized,40210,"ventInfo> (this=this. entry=0x162d640, eventID=<optimized out>, name=..., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40569,performance,optimiz,optimized,40569,"tMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40789,performance,optimiz,optimized,40789,"Merger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=...,",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40811,performance,optimiz,optimized,40811," (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optim",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41370,performance,optimiz,optimized,41370,"function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:41811,performance,optimiz,optimized,41811,"ized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<bo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48139,performance,optimiz,optimized,48139,"::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iter",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50459,performance,optimiz,optimized,50459,"tion<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Runni",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50912,performance,optimiz,optimized,50912,"terator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50936,performance,optimiz,optimized,50936,"r<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/Sta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52200,performance,optimiz,optimized,52200,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52514,performance,optimiz,optimized,52514,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52536,performance,optimiz,optimized,52536,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25492,reliability,slo,slot,25492,"const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:25744,reliability,slo,slot,25744,"detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26353,reliability,slo,slot,26353,"tr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::deta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:26588,reliability,slo,slot,26588,">(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27233,reliability,slo,slot,27233,":detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27468,reliability,slo,slot,27468,":detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:27887,reliability,slo,slot,27887,"core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28122,reliability,slo,slot,28122,"connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28725,reliability,slo,slot,28725,"terator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:28960,reliability,slo,slot,28960,"st::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29741,reliability,slo,slot,29741,"q::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:29976,reliability,slo,slot,29976,"q::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30395,reliability,slo,slot,30395,"_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:30630,reliability,slo,slot,30630,"connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31048,reliability,slo,slot,31048,"ost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31283,reliability,slo,slot,31283,":connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:31991,reliability,slo,slot,31991,"t_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32226,reliability,slo,slot,32226,"t_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32690,reliability,slo,slot,32690,"ail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:32925,reliability,slo,slot,32925,"tail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33343,reliability,slo,slot,33343,"tional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:33578,reliability,slo,slot,33578,":connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42226,reliability,slo,slot,42226,"const&, boost::enable_if<boost::is_void<boost::function<void (fair::mq::State)>::result_type>, void>::type*) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:42478,reliability,slo,slot,42478,"detail/variadic_slot_invoker.hpp:105. #26 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::operator()<boost::function<void (fair::mq::State)>, fair::mq::State&, 1ul>(boost::function<void (fair::mq::State)>&, std::tuple<fair::mq::State&> const&, mpl_::size_t<1ul>) const (args=..., func=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:90. #27 boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>::operator()<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43087,reliability,slo,slot,43087,"tr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::deta",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43322,reliability,slo,slot,43322,">(boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) const (connectionBody=..., this=0x7ffe775d5e40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/variadic_slot_invoker.hpp:133. #28 boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detai",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:43967,reliability,slo,slot,43967,":detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44202,reliability,slo,slot,44202,":detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >::dereference() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/slot_call_iterator.hpp:110. #29 boost::iterators::iterator_core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::d",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44621,reliability,slo,slot,44621,"core_access::dereference<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:44856,reliability,slo,slot,44856,"connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45459,reliability,slo,slot,45459,"terator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:45694,reliability,slo,slot,45694,"st::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > const&) (f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:550. #30 boost::iterators::detail::iterator_facade_base<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46475,reliability,slo,slot,46475,"q::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:46710,reliability,slo,slot,46710,"q::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::void_type, boost::iterators::single_pass_traversal_tag, boost::signals2::detail::void_type const&, long, false, false>::operator*() const (this=0x7ffe775d5c70) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/iterator/iterator_facade.hpp:656. #31 boost::signals2::optional_last_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signal",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47129,reliability,slo,slot,47129,"_value<void>::operator()<boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47364,reliability,slo,slot,47364,"connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boos",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:47782,reliability,slo,slot,47782,"ost::signals2::mutex> > >(boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48017,reliability,slo,slot,48017,":connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48725,reliability,slo,slot,48725,"t_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)>",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:48960,reliability,slo,slot,48960,"t_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., this=<optimized out>, last=..., first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/optional_last_value.hpp:57. #32 boost::signals2::detail::combiner_invoker<void>::operator()<boost::signals2::optional_last_value<void>, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::de",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49424,reliability,slo,slot,49424,"ail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=...",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:49659,reliability,slo,slot,49659,"tail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >(boost::signals2::optional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50077,reliability,slo,slot,50077,"tional_last_value<void>&, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/si",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:50312,reliability,slo,slot,50312,":connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >, boost::signals2::detail::slot_call_iterator_t<boost::signals2::detail::variadic_slot_invoker<boost::signals2::detail::void_type, fair::mq::State>, std::_List_iterator<boost::shared_ptr<boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:39,safety,unsaf,unsafe,39,"`TDirectory::RegisterGDirectory` is MT unsafe; ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:92,safety,unsaf,unsafe,92,"`TDirectory::RegisterGDirectory` is MT unsafe; ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:3837,safety,Detect,Detector,3837,"6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3189. #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923. #10 TBranch::FillImpl (this=this. entry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4100,safety,Detect,Detectors,4100,"ntry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4123,safety,Detect,DetectorsBase,4123,"elper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4137,safety,Detect,Detector,4137,"lper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4206,safety,Detect,Detector,4206,"6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_worksp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4383,safety,Detect,Detectors,4383,"CES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4406,safety,Detect,DetectorsBase,4406,"2/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4420,safety,Detect,Detector,4420,"/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7140,safety,Log,LogSocketRates,7140,"<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:99,security,access,access,99,"`TDirectory::RegisterGDirectory` is MT unsafe; ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:3837,security,Detect,Detector,3837,"6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:3189. #9 0x00007ff4494a1b11 in TBranch::FillImpl (imtHelper=0x0, this=0x7ff42547e5f0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:923. #10 TBranch::FillImpl (this=this. entry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4100,security,Detect,Detectors,4100,"ntry=0x7ff42547e5f0, imtHelper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4123,security,Detect,DetectorsBase,4123,"elper=imtHelper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4137,security,Detect,Detector,4137,"lper. entry=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<op",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4206,security,Detect,Detector,4206,"6-24-02/v6-24-02/tree/tree/src/TBranch.cxx:854. #11 0x00007ff4494ae36b in TBranchElement::FillImpl (this=0x7ff42547e5f0, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_worksp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4383,security,Detect,Detectors,4383,"CES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4406,security,Detect,DetectorsBase,4406,"2/tree/tree/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:4420,security,Detect,Detector,4420,"/src/TBranchElement.cxx:1265. #12 0x00007ff4494ae069 in TBranchElement::FillImpl (this=0x7ff425170850, imtHelper=0x0) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/tree/tree/src/TBranchElement.cxx:1290. #13 0x00007ff44f4faf89 in TBranch::Fill (this=0x7ff425170850) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ROOT/v6-24-02-local5/include/TBranch.h:201. #14 o2::base::DetImpl<o2::trd::Detector>::mergeAndAdjustHits<std::vector<o2::trd::Hit, std::allocator<o2::trd::Hit> > > (this=this. entry=0x3e69680, brname=..., origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:403. #15 0x00007ff44f4fb507 in o2::base::DetImpl<o2::trd::Detector>::mergeHitEntries (this=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7140,security,Log,LogSocketRates,7140,"<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18459,security,Control,Control,18459,"k=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18580,security,control,control,18580,"Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18588,security,Control,Control,18588,"n/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:19661,security,sign,signal,19661," (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:34427,security,sign,signal,34427,"::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:51161,security,sign,signal,51161,"::mutex> > >, boost::signals2::detail::connection_body<std::pair<boost::signals2::detail::slot_meta_group, boost::optional<int> >, boost::signals2::slot<void (fair::mq::State), boost::function<void (fair::mq::State)> >, boost::signals2::mutex> >) const (last=..., first=..., combiner=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/result_type_wrapper.hpp:64. #33 boost::signals2::detail::signal_impl<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:52756,security,access,accessible,52756,"()(fair::mq::State) (this=<optimized out>, args#0=<optimized out>, args#0. entry=fair::mq::State::Running) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/signals2/detail/signal_template.hpp:243. #34 0x00007ff44acb0620 in boost::signals2::signal<void (fair::mq::State), boost::signals2::optional_last_value<void>, int, std::less<int>, boost::function<void (fair::mq::State)>, boost::function<void (boost::signals2::connection const&, fair::mq::State)>, boost::signals2::mutex>::operator()(fair::mq::State) const (args#0=fair::mq::State::Running, this=0x162f300) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/smart_ptr/shared_ptr.hpp:720. #35 fair::mq::fsm::Machine_::CallStateHandler (state=fair::mq::State::Running, this=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. ```. For the record (not publicly accessible) ALICE bug reports:. * https://alice.its.cern.ch/jira/browse/O2-2372. * https://alice.its.cern.ch/jira/browse/O2-2532.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:273,testability,trace,trace,273,"`TDirectory::RegisterGDirectory` is MT unsafe; ALICE has reported regular crashes due to MT unsafe access in `TDirectory::RegisterGDirectory`. Example backtrace:. ```. ===========================================================. There was a crash. This is the entire stack trace of all threads:. ===========================================================. Thread 6 (Thread 0x7ff42998d700 (LWP 56550) ""o2-sim-hit-merg""):. #0 0x00007ff44b42eef6 in longest_match () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #1 0x00007ff44b42fd58 in deflate_fast () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #2 0x00007ff44b430822 in deflate () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/zlib/v1.2.8-local3/lib/libz.so.1. #3 0x00007ff447cbe8a5 in R__zipZLIB (irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:213. #4 R__zipMultipleAlgorithm (compressionAlgorithm=<optimized out>, irep=0x7ff4299869a8, tgt=0x7ff3c94c924f ""ZL\b\177\272"", tgtsize=0x7ff4299869ac, src=0x7ff4299868c0 ""\177"", srcsize=0x7ff4299869ac, cxlevel=32756) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/zip/src/RZip.cxx:109. #5 R__zipMultipleAlgorithm (cxlevel=cxlevel. entry=1, srcsize=srcsize. entry=0x7ff4299869ac, src=src. entry=0x7ff3d000007f ""\300Ro\211\300=\200I\300>\277\341\300D'\254\300F\343\016\300Ix\232\300K\333^\300M\340!\300O\255T\300P\320\344\300Q\254\250\300<\225B\300S,g\300S\313\061\300Tf\250\300TӾ\300U.\b\300U\027\\\300T}d\300S\200\344\300R\220\234\300QT}\300D\241\221\300V\a\360\300U\246\060\300S. \300\300QV\026\300OE\345\300M\020\314\300J\365\f\300I(D\300G\250X\300FE6\300P\r\376\300B\240\300\300. zV\300>\225\324\300=\036\206\300<8t\300;\252d\300;v\376\300;\210w\300;\336J\300HǬ\300\071\322+\300:\205\232",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7140,testability,Log,LogSocketRates,7140,"<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18459,testability,Control,Control,18459,"k=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff4",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18580,testability,control,control,18580,"Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18588,testability,Control,Control,18588,"n/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SO",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36255,testability,trace,trace,36255,"mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_itera",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5233,usability,Tool,Toolchain,5233,"=0x3e69680, origin=..., target=..., trackoffsets=..., nprimaries=..., subevtsOrdered=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/Detectors/Base/include/DetectorsBase/Detector.h:422. #16 0x00000000004456e1 in o2::devices::O2HitMerger::mergeAndFlushData (this=0x162d640, eventID=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5573,usability,Tool,Toolchain,5573,"pace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:745. #17 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x7ad9e10) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #18 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #19 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/alipe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:5881,usability,Tool,Toolchain,5881,"o.6. Thread 5 (Thread 0x7ff42a18e700 (LWP 25519) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44aca29d3 in __gthread_cond_timedwait (__abs_timeout=0x7ff42a187a30, __mutex=<optimized out>, __cond=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6271,usability,Tool,Toolchain,6271,"/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x0",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:6610,usability,Tool,Toolchain,6610,"+/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long int, std::ratio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), Fa",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7060,usability,Tool,Toolchain,7060,"atio<1, 1000000000> >, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__p=..., __atime=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:158. #5 std::condition_variable::wait_for<long int, std::ratio<1, 1000>, fair::mq::StateMachine::WaitForPendingStateFor(int) const::<lambda()> > (__rtime=..., __rtime=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQD",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7500,usability,Tool,Toolchain,7500,"me=..., __p=..., __lock=..., this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:185. #6 fair::mq::StateMachine::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7705,usability,Tool,Toolchain,7705,"::WaitForPendingStateFor (this=this. entry=0x162d700, durationInMs=durationInMs. entry=1000) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:364. #7 0x00007ff44b22f882 in FairMQDevice::WaitFor<long, std::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:7952,usability,Tool,Toolchain,7952,"::ratio<1l, 1l> > (duration=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/chrono:422. #8 FairMQDevice::LogSocketRates (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...)",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:8184,usability,Tool,Toolchain,8184,"aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:717. #9 0x00007ff44b230e6d in std::__invoke_impl<void, void (FairMQDevice::*)(), FairMQDevice*> (__f=<optimized out>, __t=<optimized out>, __f=<optimized out>, __t=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Del",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:8551,usability,Tool,Toolchain,8551,"invoke.h:73. #10 std::__invoke<void (FairMQDevice::*)(), FairMQDevice*> (__fn=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #11 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::_M_invoke<0ul, 1ul> (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #12 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_F",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:9012,usability,Tool,Toolchain,9012,"2 std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >::operator() (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #13 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::operator() (this=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-loca",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:9475,usability,Tool,Toolchain,9475,"=0x7ff42a188500) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1365. #14 std::__invoke_impl<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Resul",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:9988,usability,Tool,Toolchain,9988,"sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #15 std::__invoke_r<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10299,usability,Tool,Toolchain,10299,"ult_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>&> (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:113. #16 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__fut",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10663,usability,Tool,Toolchain,10663,", std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<void>, std::__future_base::_Result_base::_Deleter>, std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void> >::_M_invoke(std::_Any_data const&) (__functor=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_ba",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:10942,usability,Tool,Toolchain,10942,"erf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:292. #17 0x00007ff44b23115b in std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #18 std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) (this=0x3ee2b40, __f=<optimized out>, __did_set=0x7ff42a1884d7) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:564. #19 0x00007ff44e18520b in __pthread_once_slow () from /lib64/libpthread.so.0. #20 0x00007ff44b231ec6 in __gthread_once (__func=<optimized out>, __once=0x3ee2b58) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:700. #21 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=. 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Dele",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12217,usability,Tool,Toolchain,12217,"ol*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=. 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729. #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<vo",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12557,usability,Tool,Toolchain,12557,"bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) (__f=. 0x7ff42a1884f0: (void (std::__future_base::_State_baseV2::*)(std::__future_base::_State_baseV2 * const, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>()> *, bool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729. #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/alipe",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:12954,usability,Tool,Toolchain,12954,"ool *)) 0x7ff44b231140 <std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>, __once=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/mutex:729. #22 std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) (__ignore_failure=false, __res=..., this=0x3ee2b40) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__future_base::_Async_state_imp",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:13602,usability,Tool,Toolchain,13602,"/future:404. #23 std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}::operator()() const (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/future:1674. #24 std::__invoke_impl<void, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:14224,usability,Tool,Toolchain,14224,"rMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__invoke_other, std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__f=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:60. #25 std::__invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::operator()() (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #28 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:14677,usability,Tool,Toolchain,14677,"invoke<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}>(std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::operator()() (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #28 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> > >::_M_run() (this=0x3ee24f0) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:215. #29 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x3ee24f0) ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:15098,usability,Tool,Toolchain,15098,"airMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}&&) (__fn=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/invoke.h:95. #26 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::operator()() (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #28 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> > >::_M_run() (this=0x3ee24f0) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:215. #29 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x3ee24f0) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #30 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #31 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 4 (Thread 0x7ff443aa4700 (LWP 25366) ""ZMQbg/IO/0""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:15542,usability,Tool,Toolchain,15542,")::{lambda()#1}> >::_M_invoke<0ul>(std::_Index_tuple<0ul>) (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:264. #27 std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> >::operator()() (this=0x3ee24f8) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:271. #28 std::thread::_State_impl<std::thread::_Invoker<std::tuple<std::__future_base::_Async_state_impl<std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >, void>::_Async_state_impl(std::thread::_Invoker<std::tuple<void (FairMQDevice::*)(), FairMQDevice*> >&&)::{lambda()#1}> > >::_M_run() (this=0x3ee24f0) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/thread:215. #29 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x3ee24f0) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #30 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #31 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 4 (Thread 0x7ff443aa4700 (LWP 25366) ""ZMQbg/IO/0""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7ff4442a5700 (LWP 25365) ""ZMQbg/Reaper""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::ep",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:17250,usability,Tool,Toolchain,17250,"mq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 3 (Thread 0x7ff4442a5700 (LWP 25365) ""ZMQbg/Reaper""):. #0 0x00007ff446807f43 in epoll_wait () from /lib64/libc.so.6. #1 0x00007ff445edd301 in zmq::epoll_t::loop() () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:17584,usability,Tool,Toolchain,17584,"f_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #2 0x00007ff445f15068 in thread_routine () from /home/aliperf/aliperf_workspace/sw/slc7_x86-64/ZeroMQ/v4.3.3-local3/lib/libzmq.so.5. #3 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #4 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/C",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:17886,usability,Tool,Toolchain,17886,"from /lib64/libc.so.6. Thread 2 (Thread 0x7ff444aa6700 (LWP 25360) ""o2-sim-hit-merg""):. #0 0x00007ff44e18ade2 in pthread_cond_timedwait. GLIBC_2.3.2 () from /lib64/libpthread.so.0. #1 0x00007ff44b30da64 in __gthread_cond_timedwait (__abs_timeout=0x7ff444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff44",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:18137,usability,Tool,Toolchain,18137,"444a9fe30, __mutex=<optimized out>, __cond=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/x86_64-unknown-linux-gnu/bits/gthr-default.h:872. #2 std::condition_variable::__wait_until_impl<std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__lock=..., __lock=..., __atime=<synthetic pointer>..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:232. #3 std::condition_variable::wait_until<std::chrono::_V2::steady_clock, std::chrono::duration<long, std::ratio<1l, 1000000000l> > > (__atime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:141. #4 std::condition_variable::wait_for<long, std::ratio<1l, 1000l> > (__rtime=..., __rtime=..., __lock=..., this=0x162de08) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/condition_variable:172. #5 fair::mq::StateQueue::WaitForNext<long, std::ratio<1l, 1000l> > (this=this. entry=0x162dd90, duration=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateQueue.h:50. #6 0x00007ff44b30d4ff in fair::mq::plugins::Control::StaticMode (this=0x162dcd0) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/plugins/control/Control.cxx:376. #7 0x00007ff446ec9f10 in std::execute_native_thread_routine (__p=0x162e800) at ../../../../../gcc/libstdc++-v3/src/c++11/thread.cc:80. #8 0x00007ff44e186ea5 in start_thread () from /lib64/libpthread.so.0. #9 0x00007ff44680796d in clone () from /lib64/libc.so.6. Thread 1 (Thread 0x7ff4457b40c0 (LWP 25309) ""o2-sim-hit-merg""):. #0 0x00007ff4467ce4b9 in waitpid () from /lib64/libc.so.6. #1 0x00007ff44674bf62 in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSy",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20008,usability,Tool,Toolchain,20008,"in do_system () from /lib64/libc.so.6. #2 0x00007ff44674c311 in system () from /lib64/libc.so.6. #3 0x00007ff447d2a60c in TUnixSystem::Exec (shellcmd=<optimized out>, this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2120. #4 TUnixSystem::StackTrace (this=0x13db430) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20409,usability,Tool,Toolchain,20409,"core/unix/src/TUnixSystem.cxx:2411. #5 0x00007ff447d27c15 in TUnixSystem::DispatchSignals (this=0x13db430, sig=kSigSegmentationViolation) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/unix/src/TUnixSystem.cxx:3649. #6 <signal handler called>. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:20840,usability,Tool,Toolchain,20840," __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:23546,usability,Tool,Toolchain,23546,".., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36010,usability,hint,hint,36010,"/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:157. #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36054,usability,help,help,36054,". #36 fair::mq::fsm::Machine_::ProcessWork (this=this. entry=0x162f270) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:205. #37 0x00007ff44aca5969 in fair::mq::StateMachine::ProcessWork (this=0x162d700) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pr",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36331,usability,help,help,36331,"kspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/StateMachine.cxx:373. #38 0x00007ff44b1fc227 in FairMQDevice::RunStateMachine (this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.h:364. #39 fair::mq::DeviceRunner::Run (this=this. entry=0x7ffe775d7520) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/DeviceRunner.cxx:182. #40 0x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std:",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:36742,usability,Tool,Toolchain,36742,"x0000000000426a0a in main (argc=<optimized out>, argv=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/FairMQ/v1.4.40-local2/include/fairmq/runFairMQDevice.h:51. ===========================================================. The lines below might hint at the cause of the crash. You may get help by asking at the ROOT forum https://root.cern.ch/forum. Only if you are really convinced it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/alip",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37143,usability,Tool,Toolchain,37143,"it is a bug in ROOT then please submit a. report at https://root.cern.ch/bugs Please post the ENTIRE stack trace. from above as an attachment in addition to anything else. that might help us fixing this issue. ===========================================================. #7 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:37574,usability,Tool,Toolchain,37574," __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/predefined_ops.h:267. #8 std::__find_if<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, __gnu_cxx::__ops::_Iter_equals_val<std::atomic<TDirectory*>* const> > (__pred=..., __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algobase.h:1977. #9 std::find<__gnu_cxx::__normal_iterator<std::atomic<TDirectory*>**, std::vector<std::atomic<TDirectory*>*, std::allocator<std::atomic<TDirectory*>*> > >, std::atomic<TDirectory*>*> (__val=. 0x7ffe775d4258: 0x7ff447f6d858 <TDirectory::CurrentDirectory()::currentDirectory>, __last=..., __first=...) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/stl_algo.h:3902. #10 TDirectory::RegisterGDirectory (this=0x5dfd960, globalptr=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:1326. #11 0x00007ff447bfb143 in TDirectory::cd1 (apath=<optimized out>, this=0x5dfd960) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:528. #12 TDirectory::cd1 (this=0x5dfd960, apath=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/core/base/src/TDirectory.cxx:522. #13 0x00007ff4481315df in TDirectoryFile::cd (this=0x5dfd960, path=<optimized out>) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TDirectoryFile.cxx:343. #14 0x00007ff44814af14 in TFile::Init (this=this. entry=0x5dfd960, create=create. entry=true) at /home/aliperf/aliperf_workspace/sw/SOURCES/ROOT/v6-24-02/v6-24-02/io/io/src/TFile.cxx:602. #15 0x00007ff448181d38 in ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8931:40280,usability,Tool,Toolchain,40280,".., ptr=<optimized out>, ptr. entry=0x869a800) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:281. #18 0x0000000000443d07 in o2::devices::O2HitMerger::fillSubEventInfoEntry (info=..., this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:313. #19 o2::devices::O2HitMerger::handleSimData (this=this. entry=0x162d640, data=...) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:377. #20 0x000000000044a79d in o2::devices::O2HitMerger::ConditionalRun (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/O2/dev/0/run/O2HitMerger.h:357. #21 0x00007ff44b22cc35 in FairMQDevice::RunWrapper (this=0x162d640) at /home/aliperf/aliperf_workspace/sw/SOURCES/FairMQ/v1.4.40/v1.4.40/fairmq/FairMQDevice.cxx:460. #22 0x00007ff44aca709d in std::function<void (fair::mq::State)>::operator()(fair::mq::State) const (__args#0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/GCC-Toolchain/v10.2.0-alice2-local3/include/c++/10.2.0/bits/std_function.h:622. #23 boost::detail::function::void_function_obj_invoker1<std::function<void (fair::mq::State)>, void, fair::mq::State>::invoke(boost::detail::function::function_buffer&, fair::mq::State) (function_obj_ptr=..., a0=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:158. #24 0x00007ff44acaff89 in boost::function1<void, fair::mq::State>::operator() (a0=<optimized out>, this=<optimized out>) at /home/aliperf/aliperf_workspace/sw/slc7_x86-64/boost/v1.75.0-local8/include/boost/function/function_template.hpp:763. #25 boost::signals2::detail::call_with_tuple_args<boost::signals2::detail::void_type>::m_invoke<boost::function<void (fair::mq::State)>, 0u, fair::mq::State&>(boost::function<void (fair::mq::State)>&, boost::signals2::detail::unsigned_meta_array<0u>, std::tuple<fair::mq::State&> const&, boost::enable_if<boost::is_void<boost::function<v",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8931
https://github.com/root-project/root/issues/8933:3633,availability,Operat,Operating,3633,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3708,availability,down,download,3708,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:125,deployability,build,building,125,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:216,deployability,instal,installed,216,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:369,deployability,modul,module,369,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:452,deployability,fail,fail,452,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:828,deployability,modul,module,828,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1477,deployability,Modul,ModuleNotFoundError,1477,"recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_bas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1501,deployability,modul,module,1501,":. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h041",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1663,deployability,modul,module,1663,"hold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1992,deployability,modul,module,1992,"placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2336,deployability,modul,module,2336,"<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2378,deployability,Fail,Failed,2378," in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2468,deployability,fail,failed,2468,"cked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2717,deployability,patch,patch,2717,"d/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3042,deployability,modul,modules,3042,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3165,deployability,modul,modules,3165,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3305,deployability,instal,installed,3305,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3554,deployability,build,build,3554,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3621,deployability,version,version,3621,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3690,deployability,instal,install,3690,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3621,integrability,version,version,3621,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2893,interoperability,bind,bindings,2893,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:263,modifiability,pac,packages,263,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:369,modifiability,modul,module,369,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:786,modifiability,pac,packages,786,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:828,modifiability,modul,module,828,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1251,modifiability,pac,package,1251,".9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placeh",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1477,modifiability,Modul,ModuleNotFoundError,1477,"recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_bas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1501,modifiability,modul,module,1501,":. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h041",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1663,modifiability,modul,module,1663,"hold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1951,modifiability,pac,packages,1951,"_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. ht",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1992,modifiability,modul,module,1992,"placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2294,modifiability,pac,packages,2294,"trap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binar",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2336,modifiability,modul,module,2336,"<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2528,modifiability,pac,package,2528,"ing handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to r",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2893,modifiability,bind,bindings,2893,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3042,modifiability,modul,modules,3042,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3165,modifiability,modul,modules,3165,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3621,modifiability,version,version,3621,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:452,reliability,fail,fail,452,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2378,reliability,Fail,Failed,2378," in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2468,reliability,fail,failed,2468,"cked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:369,safety,modul,module,369,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:828,safety,modul,module,828,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1477,safety,Modul,ModuleNotFoundError,1477,"recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_bas",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1501,safety,modul,module,1501,":. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h041",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1558,safety,except,exception,1558,"ase_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/m",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1577,safety,except,exception,1577,"test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1663,safety,modul,module,1663,"hold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/comm",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1992,safety,modul,module,1992,"placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2336,safety,modul,module,2336,"<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2462,safety,Test,Tests,2462,"d_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2717,safety,patch,patch,2717,"d/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3042,safety,modul,modules,3042,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3165,safety,modul,modules,3165,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3508,safety,input,input,3508,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2717,security,patch,patch,2717,"d/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / y",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:471,testability,Trace,Traceback,471,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1598,testability,Trace,Traceback,1598,"acehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This is",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2462,testability,Test,Tests,2462,"d_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselv",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3762,testability,context,context,3762,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3791,testability,context,context,3791,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:514,usability,User,Users,514,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:888,usability,User,Users,888,"CMAKE_INSTALL_PYTHONDIR on macOS creates broken symlinks; - [x] Checked for duplicates. ### Describe the bug. As of 6.24.04, building with `CMAKE_INSTALL_PYTHONDIR` on macOS causes pyroot to not be functional as the installed symlink is:. ```. lib/python3.9/site-packages/libcppyy_backend3_9.dylib@ -> ../..//libcppyy_backend3_9.dylib. ```. whereas the actually Python module is in:. ```. lib/libcppyy3_9.6.24.04.so. ```. which causes `import ROOT` to fail: . ```python. Traceback (most recent call last):. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:1679,usability,User,Users,1679,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 60, in <module>. importlib.import_module(libcppyy_mod_name). File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2022,usability,User,Users,2022,"placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/importlib/__init__.py"", line 127, in import_module. return _bootstrap._gcd_import(name[level:], package, level). File ""<frozen importlib._bootstrap>"", line 1030, in _gcd_import. File ""<frozen importlib._bootstrap>"", line 1007, in _find_and_load. File ""<frozen importlib._bootstrap>"", line 984, in _find_and_load_unlocked. ModuleNotFoundError: No module named 'libcppyy3_9'. During handling of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:2540,usability,User,Users,2540,"g of the above exception, another exception occurred:. Traceback (most recent call last):. File ""<string>"", line 1, in <module>. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your cod",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3212,usability,behavi,behavior,3212,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3363,usability,behavi,behavior,3363,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/issues/8933:3508,usability,input,input,3508,"lacehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/ROOT/__init__.py"", line 22, in <module>. import cppyy. File ""/Users/christopherburr/miniconda3/conda-bld/root_base_1630311151559/_test_env_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_placehold_place/lib/python3.9/site-packages/cppyy/__init__.py"", line 62, in <module>. raise ImportError(. ImportError: Failed to import libcppyy3_9. Please check that ROOT has been built for Python 3.9. Tests failed for root_base-6.24.4-py39h04197d9_0.tar.bz2 - moving package to /Users/christopherburr/miniconda3/conda-bld/broken. ```. This issue was introduced in https://github.com/root-project/root/commit/aefe374411d9bfecaa4a9eb764aee05f7b76a8e6 as the patch uses `CMAKE_SHARED_LIBRARY_SUFFIX` despite the fact that the suffix is overridden by:. https://github.com/root-project/root/blob/c06ad10a69b6b173fd21692f38394700b635abb0/bindings/pyroot/cppyy/cppyy-backend/CMakeLists.txt#L36-L37. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L37-L48. https://github.com/root-project/root/blob/4eab5042f748d08f62f224d44a4ac9c82b9a3a13/cmake/modules/RootMacros.cmake#L21-L25. ### Expected behavior. `CMAKE_INSTALL_PYTHONDIR` creates the correctly named symlinks for the binaries it installed. ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8933
https://github.com/root-project/root/pull/8934:1278,availability,avail,available,1278,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1706,availability,avail,available,1706,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:346,deployability,manag,manage,346,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1,energy efficiency,core,core,1,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:170,energy efficiency,core,core,170,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:346,energy efficiency,manag,manage,346,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1070,integrability,interfac,interface,1070,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1070,interoperability,interfac,interface,1070,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1070,modifiability,interfac,interface,1070,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1134,modifiability,paramet,parameter,1134,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:338,reliability,doe,doesn,338,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1278,reliability,availab,available,1278,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1706,reliability,availab,available,1706,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:346,safety,manag,manage,346,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1278,safety,avail,available,1278,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1706,safety,avail,available,1706,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1278,security,availab,available,1278,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1665,security,modif,modified,1665,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:1706,security,availab,available,1706,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/pull/8934:572,usability,Close,Close,572,"[core] WriteObject overload for TObject-derived classes; The [TDirectory::WriteObject](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/core/base/inc/TDirectory.h#L265-L268) method allows writing objects to files. If the written object actually has a title, this should be discarded because the function doesn't manage it as a TObject-derived instance on purpose. For example, the program below:. ```cpp. int main(){. TFile f{""myfile.root"",""recreate""};. TH1F h{""myhistoname"",""myhistotitle"",100,0,100};. f.WriteObject(&h, h.GetName());. f.Close();. }. ```. When executed creates a file where the object ""h"" gets the default title ""object title"":. ```bash. $ rootls -l myfile.root. TH1F Aug 21 10:41 2021 myhistoname;1 ""object title"". ```. This is because The [TKey constructor that accepts a void pointer](https://github.com/root-project/root/blob/35b5aaef38b6635e131e7d93a0c96f69bb293b9d/io/io/src/TKey.cxx#L299-L300) calls the parent TNamed constructor with a default title, because in general there is no guarantee the object has the interface `GetTitle(),SetTitle()` and there is no extra ""title"" parameter to the constructor. This commit provides a solution by creating a new overload for `TDirectory::WriteObject`, using SFINAE to make it available for types that are derived from TObject. The method redirects to `WriteTObject` instead of `WriteObjectAny`. This way, the correct TKey constructor is called that uses the actual object title. As a result, the example above will now output a file like this:. ```. $ rootls -l myfile.root. TH1F Aug 21 11:00 2021 myhistoname;1 ""myhistotitle"". ```. The already present method is modified with SFINAE as well, to only be available if the type T of the template is not derived from TObject.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8934
https://github.com/root-project/root/issues/8935:324,integrability,event,event,324,"[RF] Implement option to not apply bin-width correction to `RooHistPdf` when plotting; As discussed in https://root-forum.cern.ch/t/binned-likelihood-fit-with-variable-bin-sizes, it is not trivial in RooFit to make a plot where a data histogram and a `RooHistPdf` with non-uniform binning are compared: the data is given in event counts per bin, and the RooHistPdf gives the expected counts *per bin volume*. A way to easily plot a RooHistPdf without bin-width correction should be implemented for such data comparisons. Possibly with a new RooFit command argument that could be named `BinVolumeCorrection`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8935
https://github.com/root-project/root/issues/8935:159,modifiability,variab,variable-bin-sizes,159,"[RF] Implement option to not apply bin-width correction to `RooHistPdf` when plotting; As discussed in https://root-forum.cern.ch/t/binned-likelihood-fit-with-variable-bin-sizes, it is not trivial in RooFit to make a plot where a data histogram and a `RooHistPdf` with non-uniform binning are compared: the data is given in event counts per bin, and the RooHistPdf gives the expected counts *per bin volume*. A way to easily plot a RooHistPdf without bin-width correction should be implemented for such data comparisons. Possibly with a new RooFit command argument that could be named `BinVolumeCorrection`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8935
https://github.com/root-project/root/issues/8935:548,usability,command,command,548,"[RF] Implement option to not apply bin-width correction to `RooHistPdf` when plotting; As discussed in https://root-forum.cern.ch/t/binned-likelihood-fit-with-variable-bin-sizes, it is not trivial in RooFit to make a plot where a data histogram and a `RooHistPdf` with non-uniform binning are compared: the data is given in event counts per bin, and the RooHistPdf gives the expected counts *per bin volume*. A way to easily plot a RooHistPdf without bin-width correction should be implemented for such data comparisons. Possibly with a new RooFit command argument that could be named `BinVolumeCorrection`.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8935
https://github.com/root-project/root/pull/8936:45,integrability,event,events,45,"Backport in 6.24 a fix for negative expected events; This PR back ports in 6.24 the fix for negative expected number of events, #8011.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8936
https://github.com/root-project/root/pull/8936:120,integrability,event,events,120,"Backport in 6.24 a fix for negative expected events; This PR back ports in 6.24 the fix for negative expected number of events, #8011.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8936
https://github.com/root-project/root/pull/8937:38,deployability,version,version,38,"Fix some warnings when using an older version of protobuf; Fix protobuf warnings as suggested in https://github.com/protocolbuffers/protobuf/issues/7140#issuecomment-599467033. The warnings should however be fixed in the latest protobuf version, 3.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8937
https://github.com/root-project/root/pull/8937:237,deployability,version,version,237,"Fix some warnings when using an older version of protobuf; Fix protobuf warnings as suggested in https://github.com/protocolbuffers/protobuf/issues/7140#issuecomment-599467033. The warnings should however be fixed in the latest protobuf version, 3.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8937
https://github.com/root-project/root/pull/8937:38,integrability,version,version,38,"Fix some warnings when using an older version of protobuf; Fix protobuf warnings as suggested in https://github.com/protocolbuffers/protobuf/issues/7140#issuecomment-599467033. The warnings should however be fixed in the latest protobuf version, 3.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8937
https://github.com/root-project/root/pull/8937:116,integrability,protocol,protocolbuffers,116,"Fix some warnings when using an older version of protobuf; Fix protobuf warnings as suggested in https://github.com/protocolbuffers/protobuf/issues/7140#issuecomment-599467033. The warnings should however be fixed in the latest protobuf version, 3.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8937
https://github.com/root-project/root/pull/8937:237,integrability,version,version,237,"Fix some warnings when using an older version of protobuf; Fix protobuf warnings as suggested in https://github.com/protocolbuffers/protobuf/issues/7140#issuecomment-599467033. The warnings should however be fixed in the latest protobuf version, 3.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8937
https://github.com/root-project/root/pull/8937:116,interoperability,protocol,protocolbuffers,116,"Fix some warnings when using an older version of protobuf; Fix protobuf warnings as suggested in https://github.com/protocolbuffers/protobuf/issues/7140#issuecomment-599467033. The warnings should however be fixed in the latest protobuf version, 3.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8937
https://github.com/root-project/root/pull/8937:38,modifiability,version,version,38,"Fix some warnings when using an older version of protobuf; Fix protobuf warnings as suggested in https://github.com/protocolbuffers/protobuf/issues/7140#issuecomment-599467033. The warnings should however be fixed in the latest protobuf version, 3.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8937
https://github.com/root-project/root/pull/8937:237,modifiability,version,version,237,"Fix some warnings when using an older version of protobuf; Fix protobuf warnings as suggested in https://github.com/protocolbuffers/protobuf/issues/7140#issuecomment-599467033. The warnings should however be fixed in the latest protobuf version, 3.17",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8937
https://github.com/root-project/root/pull/8938:184,availability,servic,services,184,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:2142,availability,restor,restored,2142,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:23,deployability,Resourc,ResourceWarning,23,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:126,deployability,Resourc,ResourceWarning,126,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:184,deployability,servic,services,184,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:496,deployability,stack,stackoverflow,496,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:605,deployability,stack,stackoverflow,605,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:649,deployability,resourc,resourcewarning-using-urllib-in-python-,649,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:750,deployability,modul,module,750,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:766,deployability,updat,updated,766,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:899,deployability,updat,updating-code-for-new-versions-of-python,899,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1167,deployability,Resourc,ResourceWarning,1167,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1576,deployability,log,log,1576,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1607,deployability,log,logging,1607,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1726,deployability,Resourc,ResourceWarning,1726,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1917,deployability,Resourc,ResourceWarning,1917,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:23,energy efficiency,Resourc,ResourceWarning,23,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:126,energy efficiency,Resourc,ResourceWarning,126,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:649,energy efficiency,resourc,resourcewarning-using-urllib-in-python-,649,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1167,energy efficiency,Resourc,ResourceWarning,1167,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1271,energy efficiency,reduc,reduce,1271,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1386,energy efficiency,load,load,1386,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1507,energy efficiency,profil,profile,1507,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1726,energy efficiency,Resourc,ResourceWarning,1726,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1917,energy efficiency,Resourc,ResourceWarning,1917,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1971,energy efficiency,alloc,allocation,1971,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:184,integrability,servic,services,184,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:813,integrability,filter,filters,813,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:921,integrability,version,versions-of-python,921,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:65,interoperability,distribut,distributed,65,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:460,interoperability,socket,socket,460,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:567,interoperability,socket,socket-warnings,567,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:642,interoperability,socket,socket-resourcewarning-using-urllib-in-python-,642,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1422,interoperability,platform,platform,1422,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1711,interoperability,socket,socket,1711,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1753,interoperability,socket,socket,1753,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1760,interoperability,socket,socket,1760,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1808,interoperability,Socket,SocketKind,1808,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:184,modifiability,servic,services,184,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:750,modifiability,modul,module,750,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:921,modifiability,version,versions-of-python,921,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:23,performance,Resourc,ResourceWarning,23,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:126,performance,Resourc,ResourceWarning,126,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:649,performance,resourc,resourcewarning-using-urllib-in-python-,649,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1167,performance,Resourc,ResourceWarning,1167,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1229,performance,parallel,parallelize,1229,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1386,performance,load,load,1386,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1507,performance,profil,profile,1507,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1726,performance,Resourc,ResourceWarning,1726,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1917,performance,Resourc,ResourceWarning,1917,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:2142,reliability,restor,restored,2142,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:23,safety,Resourc,ResourceWarning,23,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:58,safety,test,tests,58,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:88,safety,test,tests,88,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:126,safety,Resourc,ResourceWarning,126,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:291,safety,test,testReport,291,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:649,safety,resourc,resourcewarning-using-urllib-in-python-,649,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:750,safety,modul,module,750,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:766,safety,updat,updated,766,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:899,safety,updat,updating-code-for-new-versions-of-python,899,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1167,safety,Resourc,ResourceWarning,1167,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1576,safety,log,log,1576,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1607,safety,log,logging,1607,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1726,safety,Resourc,ResourceWarning,1726,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1917,safety,Resourc,ResourceWarning,1917,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:2161,safety,test,tests,2161,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:460,security,soc,socket,460,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:567,security,soc,socket-warnings,567,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:642,security,soc,socket-resourcewarning-using-urllib-in-python-,642,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:766,security,updat,updated,766,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:899,security,updat,updating-code-for-new-versions-of-python,899,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1576,security,log,log,1576,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1607,security,log,logging,1607,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1711,security,soc,socket,1711,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1753,security,soc,socket,1753,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1760,security,soc,socket,1760,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1808,security,Soc,SocketKind,1808,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:23,testability,Resourc,ResourceWarning,23,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:58,testability,test,tests,58,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:88,testability,test,tests,88,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:126,testability,Resourc,ResourceWarning,126,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:291,testability,test,testReport,291,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:441,testability,unit,unittests,441,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:533,testability,unit,unittesting-with-pyspark-unclosed-socket-warnings,533,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:649,testability,resourc,resourcewarning-using-urllib-in-python-,649,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:741,testability,unit,unittest,741,"[DF] Suppress spurious ResourceWarning in distrdf-pyspark tests; distributed RDataFrame tests that use `pyspark` will report `ResourceWarning`s like the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. Th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1143,testability,simpl,simplefilter,1143,"the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restore",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1167,testability,Resourc,ResourceWarning,1167,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1576,testability,log,log,1576,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1607,testability,log,logging,1607,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1726,testability,Resourc,ResourceWarning,1726,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1917,testability,Resourc,ResourceWarning,1917,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1941,testability,trace,tracemalloc,1941,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1982,testability,trace,traceback,1982,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:2050,testability,unit,unittests,2050,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:2161,testability,test,tests,2161,". https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restored after the tests.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/pull/8938:1143,usability,simpl,simplefilter,1143,"the ones seen here. https://lcgapp-services.cern.ch/root-jenkins/job/root-nightly-master/LABEL=ROOT-ubuntu18.04,SPEC=nortcxxmod,V=master/2956/testReport/projectroot.roottest.python/distrdf/roottest_python_distrdf_spark_test_reducer_merge/. This kind of warning is apparently common in Python unittests that use socket, both with [pyspark](https://stackoverflow.com/questions/49361286/unittesting-with-pyspark-unclosed-socket-warnings) and [others](https://stackoverflow.com/questions/14938716/socket-resourcewarning-using-urllib-in-python-3). The reason they are shown is that in Python3 the unittest module has been updated to use the ""default"" level of warnings filters, as mentioned [in the docs](https://docs.python.org/3.5/library/warnings.html#updating-code-for-new-versions-of-python). For the particular case of `pyspark`, these warnings are actually present in any application that uses the same ""default"" level:. ```py. $: cat sparktest.py . import pyspark. import warnings. warnings.simplefilter(""default"", ResourceWarning). sc = pyspark.SparkContext.getOrCreate(). sc.parallelize([1,2,3,4,5]).map(lambda x: 1).reduce(lambda x,y: x+y). ```. ```bash. $: python sparktest.py . 21/08/30 11:04:59 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable. Using Spark's default log4j profile: org/apache/spark/log4j-defaults.properties. Setting default log level to ""WARN"". To adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel). /usr/lib64/python3.8/socket.py:740: ResourceWarning: unclosed <socket.socket fd=7, family=AddressFamily.AF_INET, type=SocketKind.SOCK_STREAM, proto=6, laddr=('127.0.0.1', 35374), raddr=('127.0.0.1', 36167)>. self._sock = None. ResourceWarning: Enable tracemalloc to get the object allocation traceback. ```. This commit adds an extra call in the setup part of unittests that use pyspark, to ignore these warnings. The default level for the warnings is restore",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8938
https://github.com/root-project/root/issues/8939:87,deployability,build,building,87,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:132,deployability,instal,install,132,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:257,deployability,build,build,257,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:317,deployability,modul,modules,317,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:358,deployability,updat,updated,358,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:549,deployability,instal,install,549,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:173,interoperability,standard,standard,173,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:208,interoperability,standard,standard,208,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:592,interoperability,standard,standard,592,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:317,modifiability,modul,modules,317,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:317,safety,modul,modules,317,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:358,safety,updat,updated,358,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:358,security,updat,updated,358,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:227,usability,support,supported,227,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:448,usability,support,support,448,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:624,usability,support,support,624,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:689,usability,person,personally,689,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/issues/8939:706,usability,prefer,prefer,706,"-DCMAKE_CXX_STANDARD=20 unsupported for branch `latest-stable`; Although the [docs for building ROOT from source](https://root.cern/install/build_from_source/#setting-the-c-standard) suggest that the `C++20` standard should be supported, the software won't build with this setting. The reason is that the file `cmake/modules/CheckCompiler.cmake` hasn't been updated on the `latest-stable` branch within a year. Only for the `master`-branch `C++20` support has been added in #8399. So either the docs at https://github.com/root-project/web/blob/main/install/build_from_source.md#setting-the-c-standard should be fixed or the support for C++20 should be merged into `latest-stable` (which I personally would prefer, though I don't know if this would break something).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8939
https://github.com/root-project/root/pull/8940:263,deployability,observ,observables,263,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:341,energy efficiency,reduc,reduce,341,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:404,energy efficiency,model,model,404,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:240,integrability,messag,messages,240,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:240,interoperability,messag,messages,240,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:280,modifiability,paramet,parameters,280,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:458,modifiability,paramet,parameters,458,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:42,safety,Test,TestStatistics,42,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:66,safety,test,test,66,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:205,safety,review,review,205,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:325,safety,test,test,325,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:368,safety,test,test,368,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:429,safety,compl,complex,429,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:404,security,model,model,404,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:429,security,compl,complex,429,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:42,testability,Test,TestStatistics,42,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:66,testability,test,test,66,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:205,testability,review,review,205,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:263,testability,observ,observables,263,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:325,testability,test,test,325,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:352,testability,coverag,coverage,352,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:368,testability,test,test,368,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8940:390,usability,minim,minimizer,390,"[RF] Follow up on ""RooFit::MultiProcess & TestStatistics part 5b: test RooGradMinimizerFcn""; This is a follow up on https://github.com/root-project/root/pull/8694, implementing the requests made in the PR review. More details in the commit messages. Turning some observables into parameters in the GradMinimizer.BranchingPDF test should not reduce the coverage of the test, because for the minimizer the model actually gets more complex where there are more parameters.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8940
https://github.com/root-project/root/pull/8941:21,deployability,depend,dependency,21,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:361,deployability,updat,updated,361,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:21,integrability,depend,dependency,21,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:112,integrability,sub,sub-project,112,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:323,interoperability,standard,standard,323,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:21,modifiability,depend,dependency,21,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:199,modifiability,variab,variable,199,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:21,safety,depend,dependency,21,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:275,safety,test,tested,275,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:361,safety,updat,updated,361,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:361,security,updat,updated,361,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:21,testability,depend,dependency,21,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/pull/8941:275,testability,test,tested,275,"Allow to use root as dependency using FetchContent; # This Pull request:. This pull request allows to root as a sub-project using `FetchContent` . ## Changes or fixes:. It's mainly a change of cmake variable CMAKE_SOURCE_DIR to PROJECT_SOURCE_DIR etc.. ## Checklist:. - [X ] tested changes locally . Was compiling both in ""standard"" and ""FetchContent "". - [ X] updated the docs (if necessary) . - (not needed I think ?). This PR fixes #8923",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8941
https://github.com/root-project/root/issues/8942:839,availability,error,error,839,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2088,availability,Operat,Operating,2088,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2163,availability,down,download,2163,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:16,deployability,depend,dependent,16,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:464,deployability,contain,contains,464,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:634,deployability,build,build,634,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:749,deployability,version,version,749,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:780,deployability,build,build,780,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:833,deployability,build,build,833,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:958,deployability,version,version,958,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1731,deployability,build,build,1731,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2076,deployability,version,version,2076,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2145,deployability,instal,install,2145,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:16,integrability,depend,dependent,16,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:579,integrability,COMPON,COMPONENTS,579,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:749,integrability,version,version,749,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:958,integrability,version,version,958,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2003,integrability,COMPON,COMPONENTS,2003,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2076,integrability,version,version,2076,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:579,interoperability,COMPON,COMPONENTS,579,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2003,interoperability,COMPON,COMPONENTS,2003,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:16,modifiability,depend,dependent,16,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:579,modifiability,COMPON,COMPONENTS,579,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:749,modifiability,version,version,749,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:958,modifiability,version,version,958,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2003,modifiability,COMPON,COMPONENTS,2003,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2076,modifiability,version,version,2076,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:839,performance,error,error,839,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1290,reliability,doe,does,1290,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:16,safety,depend,dependent,16,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:839,safety,error,error,839,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1685,safety,input,input,1685,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:16,testability,depend,dependent,16,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2217,testability,context,context,2217,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:2246,testability,context,context,2246,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:839,usability,error,error,839,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:975,usability,minim,minimum,975,"cannot buid the dependent project; - [ ] Checked for duplicates. <!--. Please search in. * [GitHub](https://github.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1108,usability,clear,clear,1108,"hub.com/root-project/root/issues?q=is%3Aissue). * AND [Jira](https://sft.its.cern.ch/jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. Ho",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1193,usability,clear,clear,1193,"jira/issues/?jql=project %3D ROOT). for existing reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1241,usability,behavi,behavior,1241,"reports of your issue. If you find one, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1382,usability,behavi,behavior,1382,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1400,usability,clear,clear,1400,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1540,usability,behavi,behavior,1540,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/issues/8942:1685,usability,input,input,1685,"e, you are very welcome to add to the existing report, for instance ""issue still exists in today's master"". -->. I have my own project that uses ROOT (and Python). my CMakeList file contains following ilnes . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 ${PY3VERSION_ROOT} COMPONENTS Interpreter Development NumPy). ```. And it build, works, and everything is fine . To follow up development in ROOT, I regularly rebuild my project using ROOT version from LCG nighlies dev3 build. And starting from Tuesday, August 31 I have a build error - numpy i snot found. ```. -- Could NOT find Python3 (missing: Python3_NumPy_INCLUDE_DIRS NumPy) (found suitable version ""3.9.6"", minimum required is ""3.9.6""). ```. As a result all binaries/libraries in my project are invalid and result in segfaults. . It is not clear if this is ROOT,CMAKE or LCG-nighlies problem. . ### Describe the bug. <!--. A clear and concise description of what the wrong behavior is. -->. for ROOT-based project . cmake does not find NumPy for dev3 LCG nighlies built Staring form August 31, 2021 . ### Expected behavior. <!--. A clear and concise description of what you expected to happen. -->. cmake should find NumPy . ### To Reproduce. <!--. Steps to reproduce the behavior:. 1. Your code that triggers the issue: at least a part; ideally something we can run ourselves. 2. Don't forget to attach the required input files! 3. How to run your code and / or build it, e.g. `root myMacro.C`, ... -->. 1. lxplus.cern.ch . 2. source /cvmfs/sft.cern.ch/lcg/views/dev3/Tue/x86_64-centos7-gcc9-opt/setup.sh. 3. any CMAKe project with these two ilnes included . ```. find_package(ROOT 6 CONFIG REQUIRED ). ... find_package(Python3 3.6.9 COMPONENTS Interpreter Development NumPy). ```. ### Setup. <!--. 1. ROOT version. 2. Operating system. 3. How you obtained ROOT, such as `dnf install` / binary download / you built it yourself. -->. ### Additional context. <!--. Add any other context about the problem here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8942
https://github.com/root-project/root/pull/8944:59,deployability,version,version,59,"[RF] HS3 RooFit JSON/YML import/export; This is a reworked version of [this older PR](https://github.com/root-project/root/pull/6254). Support for JSON/YAML I/O of RooFit workspaces is added. For more info, consult the presentation given in the [ROOT PPP meeting](https://indico.cern.ch/e/PPP111).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8944
https://github.com/root-project/root/pull/8944:59,integrability,version,version,59,"[RF] HS3 RooFit JSON/YML import/export; This is a reworked version of [this older PR](https://github.com/root-project/root/pull/6254). Support for JSON/YAML I/O of RooFit workspaces is added. For more info, consult the presentation given in the [ROOT PPP meeting](https://indico.cern.ch/e/PPP111).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8944
https://github.com/root-project/root/pull/8944:59,modifiability,version,version,59,"[RF] HS3 RooFit JSON/YML import/export; This is a reworked version of [this older PR](https://github.com/root-project/root/pull/6254). Support for JSON/YAML I/O of RooFit workspaces is added. For more info, consult the presentation given in the [ROOT PPP meeting](https://indico.cern.ch/e/PPP111).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8944
https://github.com/root-project/root/pull/8944:157,performance,I/O,I/O,157,"[RF] HS3 RooFit JSON/YML import/export; This is a reworked version of [this older PR](https://github.com/root-project/root/pull/6254). Support for JSON/YAML I/O of RooFit workspaces is added. For more info, consult the presentation given in the [ROOT PPP meeting](https://indico.cern.ch/e/PPP111).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8944
https://github.com/root-project/root/pull/8944:135,usability,Support,Support,135,"[RF] HS3 RooFit JSON/YML import/export; This is a reworked version of [this older PR](https://github.com/root-project/root/pull/6254). Support for JSON/YAML I/O of RooFit workspaces is added. For more info, consult the presentation given in the [ROOT PPP meeting](https://indico.cern.ch/e/PPP111).",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8944
https://github.com/root-project/root/issues/8946:53,availability,error,error,53,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:342,availability,error,error,342,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:408,availability,operat,operator,408,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:454,availability,error,error,454,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:938,availability,error,error,938,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:836,deployability,instal,installed,836,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:30,energy efficiency,alloc,alloc-dealloc-mismatch,30,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:374,energy efficiency,alloc,alloc-dealloc-mismatch,374,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:589,integrability,repositor,repository,589,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:668,integrability,repositor,repository,668,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:44,interoperability,mismatch,mismatch,44,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:388,interoperability,mismatch,mismatch,388,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:589,interoperability,repositor,repository,589,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:668,interoperability,repositor,repository,668,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:53,performance,error,error,53,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:96,performance,time,times,96,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:263,performance,time,times,263,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:342,performance,error,error,342,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:454,performance,error,error,454,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:500,performance,memor,memory,500,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:938,performance,error,error,938,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:944,reliability,doe,does,944,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:53,safety,error,error,53,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:322,safety,sanit,sanitizer,322,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:342,safety,error,error,342,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:454,safety,error,error,454,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:742,safety,Test,Tested,742,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:938,safety,error,error,938,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:322,security,sanit,sanitizer,322,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:742,testability,Test,Tested,742,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:925,testability,context,context,925,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:53,usability,error,error,53,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:284,usability,minim,minimize,284,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:342,usability,error,error,342,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:439,usability,behavi,behavior,439,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:454,usability,error,error,454,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:500,usability,memor,memory,500,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:537,usability,minim,minimum,537,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:938,usability,error,error,938,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8946:967,usability,minim,minimizer,967,"[RF] AddressSanitizer reports alloc-dealloc-mismatch error when RooMinimizer is called multiple times; - [x] Checked for duplicates. ### Describe the bug. When using AddressSanitizer compiler flag, i.e. -fsanitize=address and when RooMinimizer is called multiple times (in a loop) to minimize a result of createNLL(), the sanitizer throws an error of type AddressSanitizer: alloc-dealloc-mismatch (malloc vs operator delete). ### Expected behavior. This error should not appear as it points to wrong memory handling. ### To Reproduce. A minimum example is provided in the following gitlab repository: https://gitlab.cern.ch/tdado/roominimizerasanexample. 1. Clone the repository. 2. run ""make"". 3. run the code with ./example . ### Setup. 1. Tested with ROOT 6.22.02 and 6.22.06. 2. Ubuntu (22.02) and CENTOS7 - lxplus (22.06). 3. ROOT installed from LCG (lxplus) or/and using the precombined binary (ubuntu). ### Additional context. The error does not appear if the minimizer is called only once. .",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8946
https://github.com/root-project/root/issues/8947:6,deployability,Build,Building,6,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:116,deployability,build,build,116,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:426,deployability,build,build,426,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:595,deployability,Build,Build,595,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:311,interoperability,share,share,311,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:816,security,Team,Team,816,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:23,usability,document,documentation,23,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:126,usability,document,documentation,126,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:390,usability,document,documentation,390,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:513,usability,document,documentation,513,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:569,usability,statu,status,569,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/issues/8947:980,usability,help,help,980,"[doc] Building Doxygen documentation pollutes source directory; ### Explain what you would like to see improved. To build the documentation using doxygen, one has to enter the (git) source directory and call Make. This creates some files in the source directory that are not part of the git tree. ### Optional: share how it could be improved. I can think of two alternative options:. - The documentation can be created in the build directory rather than in the source directory. - A .gitignore file is created in documentation/ so that the are ignored when calling git status. ### To Reproduce. Build docu following https://root.cern/for_developers/doxygen/. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8947
https://github.com/root-project/root/pull/8948:16,availability,error,error,16,Fix a streaming error in TRandom1; As reported in https://root-forum.cern.ch/t/trandom1-streamer-bug/46608. the fTheSeeds data member cannot be stored. It should be a transient one since is a temporary array used to stored an array of seed values.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8948
https://github.com/root-project/root/pull/8948:16,performance,error,error,16,Fix a streaming error in TRandom1; As reported in https://root-forum.cern.ch/t/trandom1-streamer-bug/46608. the fTheSeeds data member cannot be stored. It should be a transient one since is a temporary array used to stored an array of seed values.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8948
https://github.com/root-project/root/pull/8948:16,safety,error,error,16,Fix a streaming error in TRandom1; As reported in https://root-forum.cern.ch/t/trandom1-streamer-bug/46608. the fTheSeeds data member cannot be stored. It should be a transient one since is a temporary array used to stored an array of seed values.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8948
https://github.com/root-project/root/pull/8948:16,usability,error,error,16,Fix a streaming error in TRandom1; As reported in https://root-forum.cern.ch/t/trandom1-streamer-bug/46608. the fTheSeeds data member cannot be stored. It should be a transient one since is a temporary array used to stored an array of seed values.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8948
https://github.com/root-project/root/pull/8949:34,integrability,filter,filter,34,[skip-ci] fix typos; fix typos in filter.cxx.,MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/pull/8949
https://github.com/root-project/root/issues/8950:1235,availability,Monitor,Monitoring,1235," building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:21,deployability,build,building,21,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:241,deployability,build,building,241,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:295,deployability,build,build,295,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1235,deployability,Monitor,Monitoring,1235," building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1603,deployability,DEPEND,DEPENDS,1603,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1866,deployability,API,API,1866,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1235,energy efficiency,Monitor,Monitoring,1235," building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:820,integrability,configur,configurable,820,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1603,integrability,DEPEND,DEPENDS,1603,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1866,integrability,API,API,1866,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:379,interoperability,share,share,379,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1866,interoperability,API,API,1866,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:820,modifiability,configur,configurable,820,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:960,modifiability,variab,variables,960,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1603,modifiability,DEPEND,DEPENDS,1603,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:461,performance,tune,tune,461,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1041,performance,time,time,1041,"ence guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ---------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1235,reliability,Monitor,Monitoring,1235," building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:471,safety,input,input,471,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1235,safety,Monitor,Monitoring,1235," building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1603,safety,DEPEND,DEPENDS,1603,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1702,safety,INPUT,INPUT,1702,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1710,safety,INPUT,INPUT,1710,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:820,security,configur,configurable,820,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1037,security,one-tim,one-time,1037,"erence guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. -------",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1309,security,modif,modify-on-the-fly,1309,"s to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:2175,security,Team,Team,2175,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1235,testability,Monitor,Monitoring,1235," building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx866",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1603,testability,DEPEND,DEPENDS,1603,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:2483,testability,context,context,2483,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:48,usability,guid,guide,48,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:265,usability,document,documentation,265,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:471,usability,input,input,471,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:594,usability,indicat,indicated,594,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:677,usability,document,documentation,677,"[doc] CMake flag for building Doxygen reference guide; ### Explain what you would like to see improved. As a follow-up of https://github.com/root-project/root/issues/8947, it would be nice to have a CMake flag that allows you to turn on the building of the Doxygen documentation within a normal build. Right now, it has to be done manually in the source directory. ### Optional: share how it could be improved. In addition, cmake Options can be easily used to 'tune' the input files, see https://aliceo2group.github.io/advanced/doxygen.html, rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxyg",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1687,usability,COMMAND,COMMAND,1687,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1702,usability,INPUT,INPUT,1702,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1710,usability,INPUT,INPUT,1710,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1780,usability,COMMAND,COMMAND,1780,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:1870,usability,document,documentation,1870,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:2003,usability,document,documentation,2003,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8950:2339,usability,help,help,2339,", rather than manually having to edit the Doxyfile as indicated in https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. Some flags like:. ```. BUILD_DOCS [OFF]. BUILD_DOCS_CORE [ON]. BUILD_DOCS_GRAF2D [OFF]. BUILD_DOCS_QHP [OFF]. ... ```. with the configurable QHP generation, see, https://github.com/root-project/root/issues/8781. and then calling:. `doxygen_add_docs(...)` with all the variables correctly set to generate the proper Doxyfile. This requires some (one-time) manual copy work from the actual Doxyfile to the CMakeLists.txt, but it will look clean in the end. This is how ALICE experiment is doing it, take a look:. https://github.com/AliceO2Group/Monitoring/blob/dev/doc/CMakeLists.txt#L22. Alternatively, one could just modify-on-the-fly the preexisting Doxyfile file as follows:. ```. set(doxyfile_in ${CMAKE_CURRENT_SOURCE_DIR}/Doxyfile). set(doxyfile ${CMAKE_CURRENT_BINARY_DIR}/Doxyfile). configure_file(${doxyfile_in} ${doxyfile} @ONLY). add_custom_command(. OUTPUT ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. DEPENDS ${doxyfile} ${HEADER_FILES}. WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}. COMMAND sed ""s;INPUT =;INPUT = ${MY_NEW_INPUT_FILES}"" ${doxyfile} | ${DOXYGEN_EXECUTABLE} -. COMMAND cmake -E touch ${CMAKE_CURRENT_BINARY_DIR}/doxygen.stamp. COMMENT ""Generating API documentation with Doxygen"". VERBATIM). ```. ### To Reproduce. https://root.cern/for_developers/doxygen/#how-to-generate-the-doxygen-documentation. ### Setup. ```. ------------------------------------------------------------------. | Welcome to ROOT 6.25/01 https://root.cern |. | (c) 1995-2021, The ROOT Team; conception: R. Brun, F. Rademakers |. | Built for linuxx8664gcc on May 17 2021, 10:49:42 |. | From heads/master@v6-25-01-861-g5ea261143f |. | With |. | Try '.help', '.demo', '.license', '.credits', '.quit'/'.q' |. ------------------------------------------------------------------. ```. ### Additional context. https://github.com/root-project/root/issues/8781",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8950
https://github.com/root-project/root/issues/8951:649,deployability,Integr,Integral,649,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8951:649,integrability,Integr,Integral,649,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8951:649,interoperability,Integr,Integral,649,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8951:649,modifiability,Integr,Integral,649,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8951:649,reliability,Integr,Integral,649,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8951:649,security,Integr,Integral,649,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8951:649,testability,Integr,Integral,649,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8951:752,testability,context,context,752,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8951:781,testability,context,context,781,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8951:334,usability,user,user,334,"Add optional flag to include underflow and overflow weights when returning sum of weights from histogram; ### Is your feature request related to a problem? Please describe. In:. https://root.cern.ch/doc/master/classTH1.html#aeb8b68e267823506ef8c6efda8b27f0d. It would be good to have an `inrange` flag defaulting to `true`, which the user could change to `false` to include over flow and underflow entries. ### Describe the solution you'd like. ```c++. Double_t TH1::GetSumOfWeights(const bool inrange = true) const. ```. ### Describe alternatives you've considered. I guess I could just do:. ```c++. auto nbins=hist->GetNBinsX();. auto val = hist->Integral(0, nbins + 1);. ```. but this is too verbose and increases the chance of bugs. ### Additional context. <!--. Add any other context or screenshots about the feature requested here. -->.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8951
https://github.com/root-project/root/issues/8952:354,availability,recov,recovered,354,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:471,availability,Recov,Recover,471,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:511,availability,recov,recovered,511,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:591,availability,Recov,Recover,591,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:631,availability,recov,recovered,631,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:709,availability,Recov,Recover,709,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:749,availability,recov,recovered,749,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:830,availability,Recov,Recover,830,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:870,availability,recov,recovered,870,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:946,availability,Recov,Recover,946,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:986,availability,recov,recovered,986,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1084,availability,recov,recovered,1084,"ture request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1646,availability,Error,Error,1646,"ectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1781,availability,Error,Error,1781,"_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1880,availability,Error,Error,1880," TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2015,availability,Error,Error,2015,"bar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2114,availability,Error,Error,2114,"ile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2249,availability,Error,Error,2249,"e was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2378,availability,operat,operate,2378,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2709,availability,operat,operation,2709,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2738,availability,robust,robust,2738,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:3066,availability,error,errors,3066,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:354,deployability,recov,recovered,354,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:471,deployability,Recov,Recover,471,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:511,deployability,recov,recovered,511,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:591,deployability,Recov,Recover,591,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:631,deployability,recov,recovered,631,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:709,deployability,Recov,Recover,709,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:749,deployability,recov,recovered,749,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:830,deployability,Recov,Recover,830,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:870,deployability,recov,recovered,870,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:946,deployability,Recov,Recover,946,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:986,deployability,recov,recovered,986,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1084,deployability,recov,recovered,1084,"ture request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1272,deployability,version,version,1272,"re killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::Chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1518,deployability,version,version,1518,"ey TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1723,deployability,version,version,1723,"00z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1957,deployability,version,version,1957,"me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2191,deployability,version,version,2191,"eventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2609,deployability,automat,automating,2609,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:3181,deployability,version,version,3181,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:3224,deployability,version,versions,3224,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:338,integrability,messag,messages,338,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:425,integrability,messag,messages,425,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1204,integrability,schema,schema,1204,"e of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1272,integrability,version,version,1272,"re killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::Chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1450,integrability,schema,schema,1450,"``Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typi",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1518,integrability,version,version,1518,"ey TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1723,integrability,version,version,1723,"00z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1957,integrability,version,version,1957,"me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2191,integrability,version,version,2191,"eventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2572,integrability,messag,messages,2572,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:3181,integrability,version,version,3181,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:3224,integrability,version,versions,3224,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:338,interoperability,messag,messages,338,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:425,interoperability,messag,messages,425,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2572,interoperability,messag,messages,2572,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1272,modifiability,version,version,1272,"re killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::Chec",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1518,modifiability,version,version,1518,"ey TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1723,modifiability,version,version,1723,"00z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1957,modifiability,version,version,1957,"me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2191,modifiability,version,version,2191,"eventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.3",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:3181,modifiability,version,version,3181,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:3224,modifiability,version,versions,3224,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1646,performance,Error,Error,1646,"ectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1781,performance,Error,Error,1781,"_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1880,performance,Error,Error,1880," TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2015,performance,Error,Error,2015,"bar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2114,performance,Error,Error,2114,"ile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. #",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2249,performance,Error,Error,2249,"e was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge th",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:3066,performance,error,errors,3066,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:354,reliability,recov,recovered,354,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:471,reliability,Recov,Recover,471,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:511,reliability,recov,recovered,511,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:591,reliability,Recov,Recover,591,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:631,reliability,recov,recovered,631,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:709,reliability,Recov,Recover,709,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:749,reliability,recov,recovered,749,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:830,reliability,Recov,Recover,830,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:870,reliability,recov,recovered,870,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:946,reliability,Recov,Recover,946,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:986,reliability,recov,recovered,986,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1084,reliability,recov,recovered,1084,"ture request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:2738,reliability,robust,robust,2738,"as produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2. hadd generates exit code different from 0 if any issues with input files are encountered. ### Describe alternatives you've considered. Alternative solution is of course avoiding the errors to occur and checking for them separately. ### Additional context. Input ROOT files were produced with ROOT version 5.34.32, but I can use more modern versions of hadd to merge them.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:354,safety,recov,recovered,354,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:471,safety,Recov,Recover,471,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:511,safety,recov,recovered,511,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:591,safety,Recov,Recover,591,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:631,safety,recov,recovered,631,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:709,safety,Recov,Recover,709,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:749,safety,recov,recovered,749,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:830,safety,Recov,Recover,830,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:870,safety,recov,recovered,870,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:946,safety,Recov,Recover,946,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:986,safety,recov,recovered,986,"Make hadd return a non-zero exit code when encountering a corrupted file; ### Is your feature request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1084,safety,recov,recovered,1084,"ture request related to a problem? Please describe. I'm merging multiple root files into one with hadd. I realized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few b",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1193,safety,prevent,preventing,1193,"lized some of the files were corrupted, because the jobs that produced them were killed in the middle. When I try to open these files I see messages about ""recovered keys"". When merging those files with hadd there are multiple messages displayed, like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1439,safety,prevent,preventing,1439," like:. ```Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_thintarget at address 5276. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, w",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1646,safety,Error,Error,1646,"ectoryFile:nuebar_mippnumi at address 5409. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1781,safety,Error,Error,1781,"_attenuation at address 5538. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if ",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
https://github.com/root-project/root/issues/8952:1880,safety,Error,Error,1880," TDirectoryFile:nuebar_others at address 5673. Info in <TFile::Recover>: ppfx_me000z-200i_run_98.root, recovered key TDirectoryFile:nuebar_total at address 5798. Warning in <TFile::Init>: successfully recovered 21 keys. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_98.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Source file 2: ppfx_me000z-200i_run_526.root. Warning in <TFile::Init>: no StreamerInfo found in ppfx_me000z-200i_run_526.root therefore preventing schema evolution when reading this file. The file was produced with version 5.34/32 of ROOT. hadd Target path: out.root:/. hadd Target path: out.root:/nom. hadd Target path: out.root:/nom/parent. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 110. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2216. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 107. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2213. Error in <TBufferFile::ReadClassBuffer>: Could not find the StreamerInfo for version 7 of the class TH1, object skipped at offset 109. Error in <TBufferFile::CheckByteCount>: object of class TH1 read too few bytes: 2 instead of 2215. ```. however hadd proceeds to operate despite of corrupted input. Moreover the exit code is 0, which typically means successful completion of a process. When merging multiple sets of files it is possible to miss the printed messages. I don't know of any way of automating the process of detecting the issues. ### Describe the solution you'd like. I believe the operation would be much more robust if. 1. hadd produced no output file if any issues with the input files are encountered, except when option `-k` is provided explicitly. 2.",MatchSource.ISSUE,root-project,root,v6-32-06,https://root.cern,https://github.com/root-project/root/issues/8952
